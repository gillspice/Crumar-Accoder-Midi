Loading plugins phase: Elapsed time ==> 1s.061ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p C:\Users\214016586\Documents\GitHub\Accoder\Accoder.cydsn\Accoder.cyprj -d CY8C5888LTI-LP097 -s C:\Users\214016586\Documents\GitHub\Accoder\Accoder.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 2s.764ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.064ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  Accoder.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\214016586\Documents\GitHub\Accoder\Accoder.cydsn\Accoder.cyprj -dcpsoc3 Accoder.v -verilog
======================================================================

======================================================================
Compiling:  Accoder.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\214016586\Documents\GitHub\Accoder\Accoder.cydsn\Accoder.cyprj -dcpsoc3 Accoder.v -verilog
======================================================================

======================================================================
Compiling:  Accoder.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\214016586\Documents\GitHub\Accoder\Accoder.cydsn\Accoder.cyprj -dcpsoc3 -verilog Accoder.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Fri Jul 21 17:51:03 2017


======================================================================
Compiling:  Accoder.v
Program  :   vpp
Options  :    -yv2 -q10 Accoder.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Fri Jul 21 17:51:03 2017

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\BasicCounter_v1_0\BasicCounter_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\mux_v1_10\mux_v1_10.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\and_v1_0\and_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\not_v1_0\not_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'Accoder.ctl'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\BasicCounter_v1_0\BasicCounter_v1_0.v (line 59, col 28):  Note: Substituting module 'add_vi_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1113, col 55):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 48):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 77):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1389, col 59):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1424, col 61):  Note: Substituting module 'cmp_vv_vv' for '/='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1547, col 106):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1603, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1604, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  Accoder.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\214016586\Documents\GitHub\Accoder\Accoder.cydsn\Accoder.cyprj -dcpsoc3 -verilog Accoder.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Fri Jul 21 17:51:03 2017

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\214016586\Documents\GitHub\Accoder\Accoder.cydsn\codegentemp\Accoder.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\BasicCounter_v1_0\BasicCounter_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\214016586\Documents\GitHub\Accoder\Accoder.cydsn\codegentemp\Accoder.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\mux_v1_10\mux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\and_v1_0\and_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.

tovif:  No errors.


======================================================================
Compiling:  Accoder.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\214016586\Documents\GitHub\Accoder\Accoder.cydsn\Accoder.cyprj -dcpsoc3 -verilog Accoder.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Fri Jul 21 17:51:04 2017

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\214016586\Documents\GitHub\Accoder\Accoder.cydsn\codegentemp\Accoder.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\BasicCounter_v1_0\BasicCounter_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\214016586\Documents\GitHub\Accoder\Accoder.cydsn\codegentemp\Accoder.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\mux_v1_10\mux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\and_v1_0\and_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\BasicCounter_1:MODULE_1:b_31\
	\BasicCounter_1:MODULE_1:b_30\
	\BasicCounter_1:MODULE_1:b_29\
	\BasicCounter_1:MODULE_1:b_28\
	\BasicCounter_1:MODULE_1:b_27\
	\BasicCounter_1:MODULE_1:b_26\
	\BasicCounter_1:MODULE_1:b_25\
	\BasicCounter_1:MODULE_1:b_24\
	\BasicCounter_1:MODULE_1:b_23\
	\BasicCounter_1:MODULE_1:b_22\
	\BasicCounter_1:MODULE_1:b_21\
	\BasicCounter_1:MODULE_1:b_20\
	\BasicCounter_1:MODULE_1:b_19\
	\BasicCounter_1:MODULE_1:b_18\
	\BasicCounter_1:MODULE_1:b_17\
	\BasicCounter_1:MODULE_1:b_16\
	\BasicCounter_1:MODULE_1:b_15\
	\BasicCounter_1:MODULE_1:b_14\
	\BasicCounter_1:MODULE_1:b_13\
	\BasicCounter_1:MODULE_1:b_12\
	\BasicCounter_1:MODULE_1:b_11\
	\BasicCounter_1:MODULE_1:b_10\
	\BasicCounter_1:MODULE_1:b_9\
	\BasicCounter_1:MODULE_1:b_8\
	\BasicCounter_1:MODULE_1:b_7\
	\BasicCounter_1:MODULE_1:b_6\
	\BasicCounter_1:MODULE_1:b_5\
	\BasicCounter_1:MODULE_1:b_4\
	\BasicCounter_1:MODULE_1:b_3\
	\BasicCounter_1:MODULE_1:b_2\
	\BasicCounter_1:MODULE_1:b_1\
	\BasicCounter_1:MODULE_1:b_0\
	\BasicCounter_1:MODULE_1:g2:a0:a_31\
	\BasicCounter_1:MODULE_1:g2:a0:a_30\
	\BasicCounter_1:MODULE_1:g2:a0:a_29\
	\BasicCounter_1:MODULE_1:g2:a0:a_28\
	\BasicCounter_1:MODULE_1:g2:a0:a_27\
	\BasicCounter_1:MODULE_1:g2:a0:a_26\
	\BasicCounter_1:MODULE_1:g2:a0:a_25\
	\BasicCounter_1:MODULE_1:g2:a0:a_24\
	\BasicCounter_1:MODULE_1:g2:a0:b_31\
	\BasicCounter_1:MODULE_1:g2:a0:b_30\
	\BasicCounter_1:MODULE_1:g2:a0:b_29\
	\BasicCounter_1:MODULE_1:g2:a0:b_28\
	\BasicCounter_1:MODULE_1:g2:a0:b_27\
	\BasicCounter_1:MODULE_1:g2:a0:b_26\
	\BasicCounter_1:MODULE_1:g2:a0:b_25\
	\BasicCounter_1:MODULE_1:g2:a0:b_24\
	\BasicCounter_1:MODULE_1:g2:a0:b_23\
	\BasicCounter_1:MODULE_1:g2:a0:b_22\
	\BasicCounter_1:MODULE_1:g2:a0:b_21\
	\BasicCounter_1:MODULE_1:g2:a0:b_20\
	\BasicCounter_1:MODULE_1:g2:a0:b_19\
	\BasicCounter_1:MODULE_1:g2:a0:b_18\
	\BasicCounter_1:MODULE_1:g2:a0:b_17\
	\BasicCounter_1:MODULE_1:g2:a0:b_16\
	\BasicCounter_1:MODULE_1:g2:a0:b_15\
	\BasicCounter_1:MODULE_1:g2:a0:b_14\
	\BasicCounter_1:MODULE_1:g2:a0:b_13\
	\BasicCounter_1:MODULE_1:g2:a0:b_12\
	\BasicCounter_1:MODULE_1:g2:a0:b_11\
	\BasicCounter_1:MODULE_1:g2:a0:b_10\
	\BasicCounter_1:MODULE_1:g2:a0:b_9\
	\BasicCounter_1:MODULE_1:g2:a0:b_8\
	\BasicCounter_1:MODULE_1:g2:a0:b_7\
	\BasicCounter_1:MODULE_1:g2:a0:b_6\
	\BasicCounter_1:MODULE_1:g2:a0:b_5\
	\BasicCounter_1:MODULE_1:g2:a0:b_4\
	\BasicCounter_1:MODULE_1:g2:a0:b_3\
	\BasicCounter_1:MODULE_1:g2:a0:b_2\
	\BasicCounter_1:MODULE_1:g2:a0:b_1\
	\BasicCounter_1:MODULE_1:g2:a0:b_0\
	\BasicCounter_1:MODULE_1:g2:a0:s_31\
	\BasicCounter_1:MODULE_1:g2:a0:s_30\
	\BasicCounter_1:MODULE_1:g2:a0:s_29\
	\BasicCounter_1:MODULE_1:g2:a0:s_28\
	\BasicCounter_1:MODULE_1:g2:a0:s_27\
	\BasicCounter_1:MODULE_1:g2:a0:s_26\
	\BasicCounter_1:MODULE_1:g2:a0:s_25\
	\BasicCounter_1:MODULE_1:g2:a0:s_24\
	\BasicCounter_1:MODULE_1:g2:a0:s_23\
	\BasicCounter_1:MODULE_1:g2:a0:s_22\
	\BasicCounter_1:MODULE_1:g2:a0:s_21\
	\BasicCounter_1:MODULE_1:g2:a0:s_20\
	\BasicCounter_1:MODULE_1:g2:a0:s_19\
	\BasicCounter_1:MODULE_1:g2:a0:s_18\
	\BasicCounter_1:MODULE_1:g2:a0:s_17\
	\BasicCounter_1:MODULE_1:g2:a0:s_16\
	\BasicCounter_1:MODULE_1:g2:a0:s_15\
	\BasicCounter_1:MODULE_1:g2:a0:s_14\
	\BasicCounter_1:MODULE_1:g2:a0:s_13\
	\BasicCounter_1:MODULE_1:g2:a0:s_12\
	\BasicCounter_1:MODULE_1:g2:a0:s_11\
	\BasicCounter_1:MODULE_1:g2:a0:s_10\
	\BasicCounter_1:MODULE_1:g2:a0:s_9\
	\BasicCounter_1:MODULE_1:g2:a0:s_8\
	\BasicCounter_1:MODULE_1:g2:a0:s_7\
	\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_31\
	\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_30\
	\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_29\
	\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_28\
	\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_27\
	\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_26\
	\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_25\
	\MIDI1_UART:BUART:reset_sr\
	\MIDI1_UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_1\
	\MIDI1_UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_0\
	\MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_0\
	\MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\
	Net_279
	\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:gta_0\
	\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_1\
	\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_1\
	\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:lt_0\
	\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:gt_0\
	\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:lti_0\
	\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:gti_0\
	\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_0\
	\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_0\
	\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:xeq\
	\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:xlt\
	\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:xlte\
	\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:xgt\
	\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:xgte\
	\MIDI1_UART:BUART:sRX:MODULE_6:lt\
	\MIDI1_UART:BUART:sRX:MODULE_6:eq\
	\MIDI1_UART:BUART:sRX:MODULE_6:gt\
	\MIDI1_UART:BUART:sRX:MODULE_6:gte\
	\MIDI1_UART:BUART:sRX:MODULE_6:lte\
	\USBMIDI_1:dma_complete_0\
	\USBMIDI_1:Net_1922\
	\USBMIDI_1:dma_complete_1\
	\USBMIDI_1:Net_1921\
	\USBMIDI_1:dma_complete_2\
	\USBMIDI_1:Net_1920\
	\USBMIDI_1:dma_complete_3\
	\USBMIDI_1:Net_1919\
	\USBMIDI_1:dma_complete_4\
	\USBMIDI_1:Net_1918\
	\USBMIDI_1:dma_complete_5\
	\USBMIDI_1:Net_1917\
	\USBMIDI_1:dma_complete_6\
	\USBMIDI_1:Net_1916\
	\USBMIDI_1:dma_complete_7\
	\USBMIDI_1:Net_1915\

    Synthesized names
	\BasicCounter_1:add_vi_vv_MODGEN_1_31\
	\BasicCounter_1:add_vi_vv_MODGEN_1_30\
	\BasicCounter_1:add_vi_vv_MODGEN_1_29\
	\BasicCounter_1:add_vi_vv_MODGEN_1_28\
	\BasicCounter_1:add_vi_vv_MODGEN_1_27\
	\BasicCounter_1:add_vi_vv_MODGEN_1_26\
	\BasicCounter_1:add_vi_vv_MODGEN_1_25\
	\BasicCounter_1:add_vi_vv_MODGEN_1_24\
	\BasicCounter_1:add_vi_vv_MODGEN_1_23\
	\BasicCounter_1:add_vi_vv_MODGEN_1_22\
	\BasicCounter_1:add_vi_vv_MODGEN_1_21\
	\BasicCounter_1:add_vi_vv_MODGEN_1_20\
	\BasicCounter_1:add_vi_vv_MODGEN_1_19\
	\BasicCounter_1:add_vi_vv_MODGEN_1_18\
	\BasicCounter_1:add_vi_vv_MODGEN_1_17\
	\BasicCounter_1:add_vi_vv_MODGEN_1_16\
	\BasicCounter_1:add_vi_vv_MODGEN_1_15\
	\BasicCounter_1:add_vi_vv_MODGEN_1_14\
	\BasicCounter_1:add_vi_vv_MODGEN_1_13\
	\BasicCounter_1:add_vi_vv_MODGEN_1_12\
	\BasicCounter_1:add_vi_vv_MODGEN_1_11\
	\BasicCounter_1:add_vi_vv_MODGEN_1_10\
	\BasicCounter_1:add_vi_vv_MODGEN_1_9\
	\BasicCounter_1:add_vi_vv_MODGEN_1_8\
	\BasicCounter_1:add_vi_vv_MODGEN_1_7\

Deleted 145 User equations/components.
Deleted 25 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_23\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_22\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_21\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_20\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_19\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_18\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_17\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_16\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_15\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_14\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_13\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_12\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_11\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_10\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_9\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_8\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:a_7\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_0\ to Net_38
Aliasing \Control_Reg_2:clk\ to Net_40
Aliasing \Control_Reg_2:rst\ to Net_40
Aliasing \Control_Reg_1:clk\ to Net_40
Aliasing \Control_Reg_1:rst\ to Net_40
Aliasing \Control_Reg_3:clk\ to Net_40
Aliasing \Control_Reg_3:rst\ to Net_40
Aliasing \Control_Reg_4:clk\ to Net_40
Aliasing \Control_Reg_4:rst\ to Net_40
Aliasing tmpOE__DATA_net_0 to Net_38
Aliasing zero to Net_40
Aliasing one to Net_38
Aliasing tmpOE__CLK_net_0 to Net_38
Aliasing tmpOE__TE_net_0 to Net_38
Aliasing \Control_Reg_5:clk\ to Net_40
Aliasing \Control_Reg_5:rst\ to Net_40
Aliasing \Control_Reg_6:clk\ to Net_40
Aliasing \Control_Reg_6:rst\ to Net_40
Aliasing \Control_Reg_7:clk\ to Net_40
Aliasing \Control_Reg_7:rst\ to Net_40
Aliasing \Control_Reg_8:clk\ to Net_40
Aliasing \Control_Reg_8:rst\ to Net_40
Aliasing \Control_Reg_9:clk\ to Net_40
Aliasing \Control_Reg_9:rst\ to Net_40
Aliasing \Control_Reg_10:clk\ to Net_40
Aliasing \Control_Reg_10:rst\ to Net_40
Aliasing \Control_Reg_11:clk\ to Net_40
Aliasing \Control_Reg_11:rst\ to Net_40
Aliasing \Control_Reg_12:clk\ to Net_40
Aliasing \Control_Reg_12:rst\ to Net_40
Aliasing \Control_Reg_13:clk\ to Net_40
Aliasing \Control_Reg_13:rst\ to Net_40
Aliasing \Control_Reg_14:clk\ to Net_40
Aliasing \Control_Reg_14:rst\ to Net_40
Aliasing \Control_Reg_15:clk\ to Net_40
Aliasing \Control_Reg_15:rst\ to Net_40
Aliasing \Control_Reg_16:clk\ to Net_40
Aliasing \Control_Reg_16:rst\ to Net_40
Aliasing \MIDI1_UART:BUART:tx_hd_send_break\ to Net_40
Aliasing \MIDI1_UART:BUART:HalfDuplexSend\ to Net_40
Aliasing \MIDI1_UART:BUART:FinalParityType_1\ to Net_40
Aliasing \MIDI1_UART:BUART:FinalParityType_0\ to Net_40
Aliasing \MIDI1_UART:BUART:FinalAddrMode_2\ to Net_40
Aliasing \MIDI1_UART:BUART:FinalAddrMode_1\ to Net_40
Aliasing \MIDI1_UART:BUART:FinalAddrMode_0\ to Net_40
Aliasing \MIDI1_UART:BUART:tx_ctrl_mark\ to Net_40
Aliasing \MIDI1_UART:BUART:tx_status_6\ to Net_40
Aliasing \MIDI1_UART:BUART:tx_status_5\ to Net_40
Aliasing \MIDI1_UART:BUART:tx_status_4\ to Net_40
Aliasing \MIDI1_UART:BUART:rx_count7_bit8_wire\ to Net_40
Aliasing \MIDI1_UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to Net_38
Aliasing \MIDI1_UART:BUART:sRX:s23Poll:MODIN3_1\ to \MIDI1_UART:BUART:sRX:s23Poll:MODIN2_1\
Aliasing \MIDI1_UART:BUART:sRX:s23Poll:MODIN3_0\ to \MIDI1_UART:BUART:sRX:s23Poll:MODIN2_0\
Aliasing \MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\ to Net_40
Aliasing \MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\ to Net_38
Aliasing \MIDI1_UART:BUART:sRX:s23Poll:MODIN4_1\ to \MIDI1_UART:BUART:sRX:s23Poll:MODIN2_1\
Aliasing \MIDI1_UART:BUART:sRX:s23Poll:MODIN4_0\ to \MIDI1_UART:BUART:sRX:s23Poll:MODIN2_0\
Aliasing \MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ to Net_38
Aliasing \MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ to Net_40
Aliasing \MIDI1_UART:BUART:rx_status_1\ to Net_40
Aliasing \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newa_6\ to Net_40
Aliasing \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newa_5\ to Net_40
Aliasing \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newa_4\ to Net_40
Aliasing \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newb_6\ to Net_40
Aliasing \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newb_5\ to Net_40
Aliasing \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newb_4\ to Net_40
Aliasing \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newb_3\ to Net_40
Aliasing \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newb_2\ to Net_38
Aliasing \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newb_1\ to Net_38
Aliasing \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newb_0\ to Net_40
Aliasing \MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\ to Net_38
Aliasing tmpOE__MIDI_IN1_net_0 to Net_38
Aliasing tmpOE__MIDI_OUT1_net_0 to Net_38
Aliasing \USBMIDI_1:tmpOE__Dm_net_0\ to Net_38
Aliasing \USBMIDI_1:tmpOE__Dp_net_0\ to Net_38
Aliasing \MIDI1_UART:BUART:reset_reg\\D\ to Net_40
Aliasing Net_280D to Net_40
Aliasing \MIDI1_UART:BUART:rx_break_status\\D\ to Net_40
Removing Lhs of wire \BasicCounter_1:add_vi_vv_MODGEN_1_6\[4] = \BasicCounter_1:MODULE_1:g2:a0:s_6\[170]
Removing Lhs of wire \BasicCounter_1:add_vi_vv_MODGEN_1_5\[6] = \BasicCounter_1:MODULE_1:g2:a0:s_5\[171]
Removing Lhs of wire \BasicCounter_1:add_vi_vv_MODGEN_1_4\[8] = \BasicCounter_1:MODULE_1:g2:a0:s_4\[172]
Removing Lhs of wire \BasicCounter_1:add_vi_vv_MODGEN_1_3\[10] = \BasicCounter_1:MODULE_1:g2:a0:s_3\[173]
Removing Lhs of wire \BasicCounter_1:add_vi_vv_MODGEN_1_2\[12] = \BasicCounter_1:MODULE_1:g2:a0:s_2\[174]
Removing Lhs of wire \BasicCounter_1:add_vi_vv_MODGEN_1_1\[14] = \BasicCounter_1:MODULE_1:g2:a0:s_1\[175]
Removing Lhs of wire \BasicCounter_1:add_vi_vv_MODGEN_1_0\[16] = \BasicCounter_1:MODULE_1:g2:a0:s_0\[176]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_23\[57] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_22\[58] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_21\[59] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_20\[60] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_19\[61] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_18\[62] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_17\[63] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_16\[64] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_15\[65] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_14\[66] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_13\[67] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_12\[68] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_11\[69] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_10\[70] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_9\[71] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_8\[72] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_7\[73] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_6\[74] = \BasicCounter_1:MODIN1_6\[75]
Removing Lhs of wire \BasicCounter_1:MODIN1_6\[75] = count_6[1]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_5\[76] = \BasicCounter_1:MODIN1_5\[77]
Removing Lhs of wire \BasicCounter_1:MODIN1_5\[77] = count_5[5]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_4\[78] = \BasicCounter_1:MODIN1_4\[79]
Removing Lhs of wire \BasicCounter_1:MODIN1_4\[79] = count_4[7]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_3\[80] = \BasicCounter_1:MODIN1_3\[81]
Removing Lhs of wire \BasicCounter_1:MODIN1_3\[81] = count_3[9]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_2\[82] = \BasicCounter_1:MODIN1_2\[83]
Removing Lhs of wire \BasicCounter_1:MODIN1_2\[83] = count_2[11]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_1\[84] = \BasicCounter_1:MODIN1_1\[85]
Removing Lhs of wire \BasicCounter_1:MODIN1_1\[85] = count_1[13]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:a_0\[86] = \BasicCounter_1:MODIN1_0\[87]
Removing Lhs of wire \BasicCounter_1:MODIN1_0\[87] = count_0[15]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_0\[214] = Net_38[3]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_0\[215] = Net_38[3]
Removing Rhs of wire matrix_reg_0[218] = \mux_1:tmp__mux_1_reg_0\[409]
Removing Rhs of wire matrix_reg_1[219] = \mux_1:tmp__mux_1_reg_1\[401]
Removing Rhs of wire matrix_reg_2[220] = \mux_1:tmp__mux_1_reg_2\[393]
Removing Rhs of wire matrix_reg_3[221] = \mux_1:tmp__mux_1_reg_3\[385]
Removing Rhs of wire matrix_reg_4[222] = \mux_1:tmp__mux_1_reg_4\[377]
Removing Rhs of wire matrix_reg_5[223] = \mux_1:tmp__mux_1_reg_5\[369]
Removing Rhs of wire matrix_reg_6[224] = \mux_1:tmp__mux_1_reg_6\[361]
Removing Rhs of wire matrix_reg_7[225] = \mux_1:tmp__mux_1_reg_7\[353]
Removing Rhs of wire matrix_reg_8[226] = \mux_1:tmp__mux_1_reg_8\[345]
Removing Rhs of wire matrix_reg_9[227] = \mux_1:tmp__mux_1_reg_9\[337]
Removing Rhs of wire matrix_reg_10[228] = \mux_1:tmp__mux_1_reg_10\[329]
Removing Rhs of wire matrix_reg_11[229] = \mux_1:tmp__mux_1_reg_11\[321]
Removing Rhs of wire matrix_reg_12[230] = \mux_1:tmp__mux_1_reg_12\[313]
Removing Rhs of wire matrix_reg_13[231] = \mux_1:tmp__mux_1_reg_13\[305]
Removing Rhs of wire matrix_reg_14[232] = \mux_1:tmp__mux_1_reg_14\[297]
Removing Rhs of wire matrix_reg_15[233] = \mux_1:tmp__mux_1_reg_15\[289]
Removing Rhs of wire Net_333[234] = \mux_2:tmp__mux_2_reg\[217]
Removing Lhs of wire \Control_Reg_2:clk\[235] = Net_40[2]
Removing Lhs of wire \Control_Reg_2:rst\[236] = Net_40[2]
Removing Rhs of wire Reg1_15[237] = \Control_Reg_2:control_out_7\[238]
Removing Rhs of wire Reg1_15[237] = \Control_Reg_2:control_7\[254]
Removing Rhs of wire Reg1_14[239] = \Control_Reg_2:control_out_6\[240]
Removing Rhs of wire Reg1_14[239] = \Control_Reg_2:control_6\[255]
Removing Rhs of wire Reg1_13[241] = \Control_Reg_2:control_out_5\[242]
Removing Rhs of wire Reg1_13[241] = \Control_Reg_2:control_5\[256]
Removing Rhs of wire Reg1_12[243] = \Control_Reg_2:control_out_4\[244]
Removing Rhs of wire Reg1_12[243] = \Control_Reg_2:control_4\[257]
Removing Rhs of wire Reg1_11[245] = \Control_Reg_2:control_out_3\[246]
Removing Rhs of wire Reg1_11[245] = \Control_Reg_2:control_3\[258]
Removing Rhs of wire Reg1_10[247] = \Control_Reg_2:control_out_2\[248]
Removing Rhs of wire Reg1_10[247] = \Control_Reg_2:control_2\[259]
Removing Rhs of wire Reg1_9[249] = \Control_Reg_2:control_out_1\[250]
Removing Rhs of wire Reg1_9[249] = \Control_Reg_2:control_1\[260]
Removing Rhs of wire Reg1_8[251] = \Control_Reg_2:control_out_0\[252]
Removing Rhs of wire Reg1_8[251] = \Control_Reg_2:control_0\[261]
Removing Lhs of wire \Control_Reg_1:clk\[262] = Net_40[2]
Removing Lhs of wire \Control_Reg_1:rst\[263] = Net_40[2]
Removing Rhs of wire Reg1_7[264] = \Control_Reg_1:control_out_7\[265]
Removing Rhs of wire Reg1_7[264] = \Control_Reg_1:control_7\[281]
Removing Rhs of wire Reg1_6[266] = \Control_Reg_1:control_out_6\[267]
Removing Rhs of wire Reg1_6[266] = \Control_Reg_1:control_6\[282]
Removing Rhs of wire Reg1_5[268] = \Control_Reg_1:control_out_5\[269]
Removing Rhs of wire Reg1_5[268] = \Control_Reg_1:control_5\[283]
Removing Rhs of wire Reg1_4[270] = \Control_Reg_1:control_out_4\[271]
Removing Rhs of wire Reg1_4[270] = \Control_Reg_1:control_4\[284]
Removing Rhs of wire Reg1_3[272] = \Control_Reg_1:control_out_3\[273]
Removing Rhs of wire Reg1_3[272] = \Control_Reg_1:control_3\[285]
Removing Rhs of wire Reg1_2[274] = \Control_Reg_1:control_out_2\[275]
Removing Rhs of wire Reg1_2[274] = \Control_Reg_1:control_2\[286]
Removing Rhs of wire Reg1_1[276] = \Control_Reg_1:control_out_1\[277]
Removing Rhs of wire Reg1_1[276] = \Control_Reg_1:control_1\[287]
Removing Rhs of wire Reg1_0[278] = \Control_Reg_1:control_out_0\[279]
Removing Rhs of wire Reg1_0[278] = \Control_Reg_1:control_0\[288]
Removing Rhs of wire Reg2_15[290] = \Control_Reg_4:control_out_7\[438]
Removing Rhs of wire Reg2_15[290] = \Control_Reg_4:control_7\[447]
Removing Rhs of wire Reg3_15[291] = \Control_Reg_6:control_out_7\[500]
Removing Rhs of wire Reg3_15[291] = \Control_Reg_6:control_7\[509]
Removing Rhs of wire Reg4_15[292] = \Control_Reg_8:control_out_7\[538]
Removing Rhs of wire Reg4_15[292] = \Control_Reg_8:control_7\[547]
Removing Rhs of wire Reg5_15[293] = \Control_Reg_10:control_out_7\[576]
Removing Rhs of wire Reg5_15[293] = \Control_Reg_10:control_7\[585]
Removing Rhs of wire Reg6_15[294] = \Control_Reg_12:control_out_7\[614]
Removing Rhs of wire Reg6_15[294] = \Control_Reg_12:control_7\[623]
Removing Rhs of wire Reg7_15[295] = \Control_Reg_14:control_out_7\[652]
Removing Rhs of wire Reg7_15[295] = \Control_Reg_14:control_7\[661]
Removing Rhs of wire Reg8_15[296] = \Control_Reg_16:control_out_7\[690]
Removing Rhs of wire Reg8_15[296] = \Control_Reg_16:control_7\[699]
Removing Rhs of wire Reg2_14[298] = \Control_Reg_4:control_out_6\[439]
Removing Rhs of wire Reg2_14[298] = \Control_Reg_4:control_6\[448]
Removing Rhs of wire Reg3_14[299] = \Control_Reg_6:control_out_6\[501]
Removing Rhs of wire Reg3_14[299] = \Control_Reg_6:control_6\[510]
Removing Rhs of wire Reg4_14[300] = \Control_Reg_8:control_out_6\[539]
Removing Rhs of wire Reg4_14[300] = \Control_Reg_8:control_6\[548]
Removing Rhs of wire Reg5_14[301] = \Control_Reg_10:control_out_6\[577]
Removing Rhs of wire Reg5_14[301] = \Control_Reg_10:control_6\[586]
Removing Rhs of wire Reg6_14[302] = \Control_Reg_12:control_out_6\[615]
Removing Rhs of wire Reg6_14[302] = \Control_Reg_12:control_6\[624]
Removing Rhs of wire Reg7_14[303] = \Control_Reg_14:control_out_6\[653]
Removing Rhs of wire Reg7_14[303] = \Control_Reg_14:control_6\[662]
Removing Rhs of wire Reg8_14[304] = \Control_Reg_16:control_out_6\[691]
Removing Rhs of wire Reg8_14[304] = \Control_Reg_16:control_6\[700]
Removing Rhs of wire Reg2_13[306] = \Control_Reg_4:control_out_5\[440]
Removing Rhs of wire Reg2_13[306] = \Control_Reg_4:control_5\[449]
Removing Rhs of wire Reg3_13[307] = \Control_Reg_6:control_out_5\[502]
Removing Rhs of wire Reg3_13[307] = \Control_Reg_6:control_5\[511]
Removing Rhs of wire Reg4_13[308] = \Control_Reg_8:control_out_5\[540]
Removing Rhs of wire Reg4_13[308] = \Control_Reg_8:control_5\[549]
Removing Rhs of wire Reg5_13[309] = \Control_Reg_10:control_out_5\[578]
Removing Rhs of wire Reg5_13[309] = \Control_Reg_10:control_5\[587]
Removing Rhs of wire Reg6_13[310] = \Control_Reg_12:control_out_5\[616]
Removing Rhs of wire Reg6_13[310] = \Control_Reg_12:control_5\[625]
Removing Rhs of wire Reg7_13[311] = \Control_Reg_14:control_out_5\[654]
Removing Rhs of wire Reg7_13[311] = \Control_Reg_14:control_5\[663]
Removing Rhs of wire Reg8_13[312] = \Control_Reg_16:control_out_5\[692]
Removing Rhs of wire Reg8_13[312] = \Control_Reg_16:control_5\[701]
Removing Rhs of wire Reg2_12[314] = \Control_Reg_4:control_out_4\[441]
Removing Rhs of wire Reg2_12[314] = \Control_Reg_4:control_4\[450]
Removing Rhs of wire Reg3_12[315] = \Control_Reg_6:control_out_4\[503]
Removing Rhs of wire Reg3_12[315] = \Control_Reg_6:control_4\[512]
Removing Rhs of wire Reg4_12[316] = \Control_Reg_8:control_out_4\[541]
Removing Rhs of wire Reg4_12[316] = \Control_Reg_8:control_4\[550]
Removing Rhs of wire Reg5_12[317] = \Control_Reg_10:control_out_4\[579]
Removing Rhs of wire Reg5_12[317] = \Control_Reg_10:control_4\[588]
Removing Rhs of wire Reg6_12[318] = \Control_Reg_12:control_out_4\[617]
Removing Rhs of wire Reg6_12[318] = \Control_Reg_12:control_4\[626]
Removing Rhs of wire Reg7_12[319] = \Control_Reg_14:control_out_4\[655]
Removing Rhs of wire Reg7_12[319] = \Control_Reg_14:control_4\[664]
Removing Rhs of wire Reg8_12[320] = \Control_Reg_16:control_out_4\[693]
Removing Rhs of wire Reg8_12[320] = \Control_Reg_16:control_4\[702]
Removing Rhs of wire Reg2_11[322] = \Control_Reg_4:control_out_3\[442]
Removing Rhs of wire Reg2_11[322] = \Control_Reg_4:control_3\[451]
Removing Rhs of wire Reg3_11[323] = \Control_Reg_6:control_out_3\[504]
Removing Rhs of wire Reg3_11[323] = \Control_Reg_6:control_3\[513]
Removing Rhs of wire Reg4_11[324] = \Control_Reg_8:control_out_3\[542]
Removing Rhs of wire Reg4_11[324] = \Control_Reg_8:control_3\[551]
Removing Rhs of wire Reg5_11[325] = \Control_Reg_10:control_out_3\[580]
Removing Rhs of wire Reg5_11[325] = \Control_Reg_10:control_3\[589]
Removing Rhs of wire Reg6_11[326] = \Control_Reg_12:control_out_3\[618]
Removing Rhs of wire Reg6_11[326] = \Control_Reg_12:control_3\[627]
Removing Rhs of wire Reg7_11[327] = \Control_Reg_14:control_out_3\[656]
Removing Rhs of wire Reg7_11[327] = \Control_Reg_14:control_3\[665]
Removing Rhs of wire Reg8_11[328] = \Control_Reg_16:control_out_3\[694]
Removing Rhs of wire Reg8_11[328] = \Control_Reg_16:control_3\[703]
Removing Rhs of wire Reg2_10[330] = \Control_Reg_4:control_out_2\[443]
Removing Rhs of wire Reg2_10[330] = \Control_Reg_4:control_2\[452]
Removing Rhs of wire Reg3_10[331] = \Control_Reg_6:control_out_2\[505]
Removing Rhs of wire Reg3_10[331] = \Control_Reg_6:control_2\[514]
Removing Rhs of wire Reg4_10[332] = \Control_Reg_8:control_out_2\[543]
Removing Rhs of wire Reg4_10[332] = \Control_Reg_8:control_2\[552]
Removing Rhs of wire Reg5_10[333] = \Control_Reg_10:control_out_2\[581]
Removing Rhs of wire Reg5_10[333] = \Control_Reg_10:control_2\[590]
Removing Rhs of wire Reg6_10[334] = \Control_Reg_12:control_out_2\[619]
Removing Rhs of wire Reg6_10[334] = \Control_Reg_12:control_2\[628]
Removing Rhs of wire Reg7_10[335] = \Control_Reg_14:control_out_2\[657]
Removing Rhs of wire Reg7_10[335] = \Control_Reg_14:control_2\[666]
Removing Rhs of wire Reg8_10[336] = \Control_Reg_16:control_out_2\[695]
Removing Rhs of wire Reg8_10[336] = \Control_Reg_16:control_2\[704]
Removing Rhs of wire Reg2_9[338] = \Control_Reg_4:control_out_1\[444]
Removing Rhs of wire Reg2_9[338] = \Control_Reg_4:control_1\[453]
Removing Rhs of wire Reg3_9[339] = \Control_Reg_6:control_out_1\[506]
Removing Rhs of wire Reg3_9[339] = \Control_Reg_6:control_1\[515]
Removing Rhs of wire Reg4_9[340] = \Control_Reg_8:control_out_1\[544]
Removing Rhs of wire Reg4_9[340] = \Control_Reg_8:control_1\[553]
Removing Rhs of wire Reg5_9[341] = \Control_Reg_10:control_out_1\[582]
Removing Rhs of wire Reg5_9[341] = \Control_Reg_10:control_1\[591]
Removing Rhs of wire Reg6_9[342] = \Control_Reg_12:control_out_1\[620]
Removing Rhs of wire Reg6_9[342] = \Control_Reg_12:control_1\[629]
Removing Rhs of wire Reg7_9[343] = \Control_Reg_14:control_out_1\[658]
Removing Rhs of wire Reg7_9[343] = \Control_Reg_14:control_1\[667]
Removing Rhs of wire Reg8_9[344] = \Control_Reg_16:control_out_1\[696]
Removing Rhs of wire Reg8_9[344] = \Control_Reg_16:control_1\[705]
Removing Rhs of wire Reg2_8[346] = \Control_Reg_4:control_out_0\[445]
Removing Rhs of wire Reg2_8[346] = \Control_Reg_4:control_0\[454]
Removing Rhs of wire Reg3_8[347] = \Control_Reg_6:control_out_0\[507]
Removing Rhs of wire Reg3_8[347] = \Control_Reg_6:control_0\[516]
Removing Rhs of wire Reg4_8[348] = \Control_Reg_8:control_out_0\[545]
Removing Rhs of wire Reg4_8[348] = \Control_Reg_8:control_0\[554]
Removing Rhs of wire Reg5_8[349] = \Control_Reg_10:control_out_0\[583]
Removing Rhs of wire Reg5_8[349] = \Control_Reg_10:control_0\[592]
Removing Rhs of wire Reg6_8[350] = \Control_Reg_12:control_out_0\[621]
Removing Rhs of wire Reg6_8[350] = \Control_Reg_12:control_0\[630]
Removing Rhs of wire Reg7_8[351] = \Control_Reg_14:control_out_0\[659]
Removing Rhs of wire Reg7_8[351] = \Control_Reg_14:control_0\[668]
Removing Rhs of wire Reg8_8[352] = \Control_Reg_16:control_out_0\[697]
Removing Rhs of wire Reg8_8[352] = \Control_Reg_16:control_0\[706]
Removing Rhs of wire Reg2_7[354] = \Control_Reg_3:control_out_7\[419]
Removing Rhs of wire Reg2_7[354] = \Control_Reg_3:control_7\[428]
Removing Rhs of wire Reg3_7[355] = \Control_Reg_5:control_out_7\[481]
Removing Rhs of wire Reg3_7[355] = \Control_Reg_5:control_7\[490]
Removing Rhs of wire Reg4_7[356] = \Control_Reg_7:control_out_7\[519]
Removing Rhs of wire Reg4_7[356] = \Control_Reg_7:control_7\[528]
Removing Rhs of wire Reg5_7[357] = \Control_Reg_9:control_out_7\[557]
Removing Rhs of wire Reg5_7[357] = \Control_Reg_9:control_7\[566]
Removing Rhs of wire Reg6_7[358] = \Control_Reg_11:control_out_7\[595]
Removing Rhs of wire Reg6_7[358] = \Control_Reg_11:control_7\[604]
Removing Rhs of wire Reg7_7[359] = \Control_Reg_13:control_out_7\[633]
Removing Rhs of wire Reg7_7[359] = \Control_Reg_13:control_7\[642]
Removing Rhs of wire Reg8_7[360] = \Control_Reg_15:control_out_7\[671]
Removing Rhs of wire Reg8_7[360] = \Control_Reg_15:control_7\[680]
Removing Rhs of wire Reg2_6[362] = \Control_Reg_3:control_out_6\[420]
Removing Rhs of wire Reg2_6[362] = \Control_Reg_3:control_6\[429]
Removing Rhs of wire Reg3_6[363] = \Control_Reg_5:control_out_6\[482]
Removing Rhs of wire Reg3_6[363] = \Control_Reg_5:control_6\[491]
Removing Rhs of wire Reg4_6[364] = \Control_Reg_7:control_out_6\[520]
Removing Rhs of wire Reg4_6[364] = \Control_Reg_7:control_6\[529]
Removing Rhs of wire Reg5_6[365] = \Control_Reg_9:control_out_6\[558]
Removing Rhs of wire Reg5_6[365] = \Control_Reg_9:control_6\[567]
Removing Rhs of wire Reg6_6[366] = \Control_Reg_11:control_out_6\[596]
Removing Rhs of wire Reg6_6[366] = \Control_Reg_11:control_6\[605]
Removing Rhs of wire Reg7_6[367] = \Control_Reg_13:control_out_6\[634]
Removing Rhs of wire Reg7_6[367] = \Control_Reg_13:control_6\[643]
Removing Rhs of wire Reg8_6[368] = \Control_Reg_15:control_out_6\[672]
Removing Rhs of wire Reg8_6[368] = \Control_Reg_15:control_6\[681]
Removing Rhs of wire Reg2_5[370] = \Control_Reg_3:control_out_5\[421]
Removing Rhs of wire Reg2_5[370] = \Control_Reg_3:control_5\[430]
Removing Rhs of wire Reg3_5[371] = \Control_Reg_5:control_out_5\[483]
Removing Rhs of wire Reg3_5[371] = \Control_Reg_5:control_5\[492]
Removing Rhs of wire Reg4_5[372] = \Control_Reg_7:control_out_5\[521]
Removing Rhs of wire Reg4_5[372] = \Control_Reg_7:control_5\[530]
Removing Rhs of wire Reg5_5[373] = \Control_Reg_9:control_out_5\[559]
Removing Rhs of wire Reg5_5[373] = \Control_Reg_9:control_5\[568]
Removing Rhs of wire Reg6_5[374] = \Control_Reg_11:control_out_5\[597]
Removing Rhs of wire Reg6_5[374] = \Control_Reg_11:control_5\[606]
Removing Rhs of wire Reg7_5[375] = \Control_Reg_13:control_out_5\[635]
Removing Rhs of wire Reg7_5[375] = \Control_Reg_13:control_5\[644]
Removing Rhs of wire Reg8_5[376] = \Control_Reg_15:control_out_5\[673]
Removing Rhs of wire Reg8_5[376] = \Control_Reg_15:control_5\[682]
Removing Rhs of wire Reg2_4[378] = \Control_Reg_3:control_out_4\[422]
Removing Rhs of wire Reg2_4[378] = \Control_Reg_3:control_4\[431]
Removing Rhs of wire Reg3_4[379] = \Control_Reg_5:control_out_4\[484]
Removing Rhs of wire Reg3_4[379] = \Control_Reg_5:control_4\[493]
Removing Rhs of wire Reg4_4[380] = \Control_Reg_7:control_out_4\[522]
Removing Rhs of wire Reg4_4[380] = \Control_Reg_7:control_4\[531]
Removing Rhs of wire Reg5_4[381] = \Control_Reg_9:control_out_4\[560]
Removing Rhs of wire Reg5_4[381] = \Control_Reg_9:control_4\[569]
Removing Rhs of wire Reg6_4[382] = \Control_Reg_11:control_out_4\[598]
Removing Rhs of wire Reg6_4[382] = \Control_Reg_11:control_4\[607]
Removing Rhs of wire Reg7_4[383] = \Control_Reg_13:control_out_4\[636]
Removing Rhs of wire Reg7_4[383] = \Control_Reg_13:control_4\[645]
Removing Rhs of wire Reg8_4[384] = \Control_Reg_15:control_out_4\[674]
Removing Rhs of wire Reg8_4[384] = \Control_Reg_15:control_4\[683]
Removing Rhs of wire Reg2_3[386] = \Control_Reg_3:control_out_3\[423]
Removing Rhs of wire Reg2_3[386] = \Control_Reg_3:control_3\[432]
Removing Rhs of wire Reg3_3[387] = \Control_Reg_5:control_out_3\[485]
Removing Rhs of wire Reg3_3[387] = \Control_Reg_5:control_3\[494]
Removing Rhs of wire Reg4_3[388] = \Control_Reg_7:control_out_3\[523]
Removing Rhs of wire Reg4_3[388] = \Control_Reg_7:control_3\[532]
Removing Rhs of wire Reg5_3[389] = \Control_Reg_9:control_out_3\[561]
Removing Rhs of wire Reg5_3[389] = \Control_Reg_9:control_3\[570]
Removing Rhs of wire Reg6_3[390] = \Control_Reg_11:control_out_3\[599]
Removing Rhs of wire Reg6_3[390] = \Control_Reg_11:control_3\[608]
Removing Rhs of wire Reg7_3[391] = \Control_Reg_13:control_out_3\[637]
Removing Rhs of wire Reg7_3[391] = \Control_Reg_13:control_3\[646]
Removing Rhs of wire Reg8_3[392] = \Control_Reg_15:control_out_3\[675]
Removing Rhs of wire Reg8_3[392] = \Control_Reg_15:control_3\[684]
Removing Rhs of wire Reg2_2[394] = \Control_Reg_3:control_out_2\[424]
Removing Rhs of wire Reg2_2[394] = \Control_Reg_3:control_2\[433]
Removing Rhs of wire Reg3_2[395] = \Control_Reg_5:control_out_2\[486]
Removing Rhs of wire Reg3_2[395] = \Control_Reg_5:control_2\[495]
Removing Rhs of wire Reg4_2[396] = \Control_Reg_7:control_out_2\[524]
Removing Rhs of wire Reg4_2[396] = \Control_Reg_7:control_2\[533]
Removing Rhs of wire Reg5_2[397] = \Control_Reg_9:control_out_2\[562]
Removing Rhs of wire Reg5_2[397] = \Control_Reg_9:control_2\[571]
Removing Rhs of wire Reg6_2[398] = \Control_Reg_11:control_out_2\[600]
Removing Rhs of wire Reg6_2[398] = \Control_Reg_11:control_2\[609]
Removing Rhs of wire Reg7_2[399] = \Control_Reg_13:control_out_2\[638]
Removing Rhs of wire Reg7_2[399] = \Control_Reg_13:control_2\[647]
Removing Rhs of wire Reg8_2[400] = \Control_Reg_15:control_out_2\[676]
Removing Rhs of wire Reg8_2[400] = \Control_Reg_15:control_2\[685]
Removing Rhs of wire Reg2_1[402] = \Control_Reg_3:control_out_1\[425]
Removing Rhs of wire Reg2_1[402] = \Control_Reg_3:control_1\[434]
Removing Rhs of wire Reg3_1[403] = \Control_Reg_5:control_out_1\[487]
Removing Rhs of wire Reg3_1[403] = \Control_Reg_5:control_1\[496]
Removing Rhs of wire Reg4_1[404] = \Control_Reg_7:control_out_1\[525]
Removing Rhs of wire Reg4_1[404] = \Control_Reg_7:control_1\[534]
Removing Rhs of wire Reg5_1[405] = \Control_Reg_9:control_out_1\[563]
Removing Rhs of wire Reg5_1[405] = \Control_Reg_9:control_1\[572]
Removing Rhs of wire Reg6_1[406] = \Control_Reg_11:control_out_1\[601]
Removing Rhs of wire Reg6_1[406] = \Control_Reg_11:control_1\[610]
Removing Rhs of wire Reg7_1[407] = \Control_Reg_13:control_out_1\[639]
Removing Rhs of wire Reg7_1[407] = \Control_Reg_13:control_1\[648]
Removing Rhs of wire Reg8_1[408] = \Control_Reg_15:control_out_1\[677]
Removing Rhs of wire Reg8_1[408] = \Control_Reg_15:control_1\[686]
Removing Rhs of wire Reg2_0[410] = \Control_Reg_3:control_out_0\[426]
Removing Rhs of wire Reg2_0[410] = \Control_Reg_3:control_0\[435]
Removing Rhs of wire Reg3_0[411] = \Control_Reg_5:control_out_0\[488]
Removing Rhs of wire Reg3_0[411] = \Control_Reg_5:control_0\[497]
Removing Rhs of wire Reg4_0[412] = \Control_Reg_7:control_out_0\[526]
Removing Rhs of wire Reg4_0[412] = \Control_Reg_7:control_0\[535]
Removing Rhs of wire Reg5_0[413] = \Control_Reg_9:control_out_0\[564]
Removing Rhs of wire Reg5_0[413] = \Control_Reg_9:control_0\[573]
Removing Rhs of wire Reg6_0[414] = \Control_Reg_11:control_out_0\[602]
Removing Rhs of wire Reg6_0[414] = \Control_Reg_11:control_0\[611]
Removing Rhs of wire Reg7_0[415] = \Control_Reg_13:control_out_0\[640]
Removing Rhs of wire Reg7_0[415] = \Control_Reg_13:control_0\[649]
Removing Rhs of wire Reg8_0[416] = \Control_Reg_15:control_out_0\[678]
Removing Rhs of wire Reg8_0[416] = \Control_Reg_15:control_0\[687]
Removing Lhs of wire \Control_Reg_3:clk\[417] = Net_40[2]
Removing Lhs of wire \Control_Reg_3:rst\[418] = Net_40[2]
Removing Lhs of wire \Control_Reg_4:clk\[436] = Net_40[2]
Removing Lhs of wire \Control_Reg_4:rst\[437] = Net_40[2]
Removing Lhs of wire tmpOE__DATA_net_0[457] = Net_38[3]
Removing Lhs of wire zero[462] = Net_40[2]
Removing Lhs of wire one[463] = Net_38[3]
Removing Lhs of wire tmpOE__CLK_net_0[466] = Net_38[3]
Removing Lhs of wire tmpOE__TE_net_0[473] = Net_38[3]
Removing Lhs of wire \Control_Reg_5:clk\[479] = Net_40[2]
Removing Lhs of wire \Control_Reg_5:rst\[480] = Net_40[2]
Removing Lhs of wire \Control_Reg_6:clk\[498] = Net_40[2]
Removing Lhs of wire \Control_Reg_6:rst\[499] = Net_40[2]
Removing Lhs of wire \Control_Reg_7:clk\[517] = Net_40[2]
Removing Lhs of wire \Control_Reg_7:rst\[518] = Net_40[2]
Removing Lhs of wire \Control_Reg_8:clk\[536] = Net_40[2]
Removing Lhs of wire \Control_Reg_8:rst\[537] = Net_40[2]
Removing Lhs of wire \Control_Reg_9:clk\[555] = Net_40[2]
Removing Lhs of wire \Control_Reg_9:rst\[556] = Net_40[2]
Removing Lhs of wire \Control_Reg_10:clk\[574] = Net_40[2]
Removing Lhs of wire \Control_Reg_10:rst\[575] = Net_40[2]
Removing Lhs of wire \Control_Reg_11:clk\[593] = Net_40[2]
Removing Lhs of wire \Control_Reg_11:rst\[594] = Net_40[2]
Removing Lhs of wire \Control_Reg_12:clk\[612] = Net_40[2]
Removing Lhs of wire \Control_Reg_12:rst\[613] = Net_40[2]
Removing Lhs of wire \Control_Reg_13:clk\[631] = Net_40[2]
Removing Lhs of wire \Control_Reg_13:rst\[632] = Net_40[2]
Removing Lhs of wire \Control_Reg_14:clk\[650] = Net_40[2]
Removing Lhs of wire \Control_Reg_14:rst\[651] = Net_40[2]
Removing Lhs of wire \Control_Reg_15:clk\[669] = Net_40[2]
Removing Lhs of wire \Control_Reg_15:rst\[670] = Net_40[2]
Removing Lhs of wire \Control_Reg_16:clk\[688] = Net_40[2]
Removing Lhs of wire \Control_Reg_16:rst\[689] = Net_40[2]
Removing Rhs of wire Net_284[708] = \MIDI1_UART:BUART:tx_interrupt_out\[729]
Removing Rhs of wire Net_285[712] = \MIDI1_UART:BUART:rx_interrupt_out\[730]
Removing Lhs of wire \MIDI1_UART:Net_61\[713] = \MIDI1_UART:Net_9\[710]
Removing Lhs of wire \MIDI1_UART:BUART:tx_hd_send_break\[717] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:HalfDuplexSend\[718] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:FinalParityType_1\[719] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:FinalParityType_0\[720] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:FinalAddrMode_2\[721] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:FinalAddrMode_1\[722] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:FinalAddrMode_0\[723] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:tx_ctrl_mark\[724] = Net_40[2]
Removing Rhs of wire \MIDI1_UART:BUART:tx_bitclk_enable_pre\[734] = \MIDI1_UART:BUART:tx_bitclk_dp\[770]
Removing Lhs of wire \MIDI1_UART:BUART:tx_counter_tc\[780] = \MIDI1_UART:BUART:tx_counter_dp\[771]
Removing Lhs of wire \MIDI1_UART:BUART:tx_status_6\[781] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:tx_status_5\[782] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:tx_status_4\[783] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:tx_status_1\[785] = \MIDI1_UART:BUART:tx_fifo_empty\[748]
Removing Lhs of wire \MIDI1_UART:BUART:tx_status_3\[787] = \MIDI1_UART:BUART:tx_fifo_notfull\[747]
Removing Lhs of wire \MIDI1_UART:BUART:rx_count7_bit8_wire\[847] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_1\[855] = \MIDI1_UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\[866]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_0\[857] = \MIDI1_UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\[867]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_3\[858] = \MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\[883]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_4\[859] = \MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\[897]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_1\[860] = \MIDI1_UART:BUART:sRX:s23Poll:MODIN2_1\[861]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODIN2_1\[861] = \MIDI1_UART:BUART:pollcount_1\[853]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_0\[862] = \MIDI1_UART:BUART:sRX:s23Poll:MODIN2_0\[863]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODIN2_0\[863] = \MIDI1_UART:BUART:pollcount_0\[856]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[869] = Net_38[3]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[870] = Net_38[3]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_1\[871] = \MIDI1_UART:BUART:pollcount_1\[853]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODIN3_1\[872] = \MIDI1_UART:BUART:pollcount_1\[853]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_0\[873] = \MIDI1_UART:BUART:pollcount_0\[856]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODIN3_0\[874] = \MIDI1_UART:BUART:pollcount_0\[856]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\[875] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\[876] = Net_38[3]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_1\[877] = \MIDI1_UART:BUART:pollcount_1\[853]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_0\[878] = \MIDI1_UART:BUART:pollcount_0\[856]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_1\[879] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_0\[880] = Net_38[3]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\[885] = \MIDI1_UART:BUART:pollcount_1\[853]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODIN4_1\[886] = \MIDI1_UART:BUART:pollcount_1\[853]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\[887] = \MIDI1_UART:BUART:pollcount_0\[856]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODIN4_0\[888] = \MIDI1_UART:BUART:pollcount_0\[856]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\[889] = Net_38[3]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\[890] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\[891] = \MIDI1_UART:BUART:pollcount_1\[853]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\[892] = \MIDI1_UART:BUART:pollcount_0\[856]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\[893] = Net_38[3]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\[894] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:rx_status_1\[901] = Net_40[2]
Removing Rhs of wire \MIDI1_UART:BUART:rx_status_2\[902] = \MIDI1_UART:BUART:rx_parity_error_status\[903]
Removing Rhs of wire \MIDI1_UART:BUART:rx_status_3\[904] = \MIDI1_UART:BUART:rx_stop_bit_error\[905]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:cmp_vv_vv_MODGEN_5\[915] = \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:lta_0\[964]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:cmp_vv_vv_MODGEN_6\[919] = \MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:xneq\[986]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newa_6\[920] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newa_5\[921] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newa_4\[922] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newa_3\[923] = \MIDI1_UART:BUART:sRX:MODIN5_6\[924]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODIN5_6\[924] = \MIDI1_UART:BUART:rx_count_6\[842]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newa_2\[925] = \MIDI1_UART:BUART:sRX:MODIN5_5\[926]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODIN5_5\[926] = \MIDI1_UART:BUART:rx_count_5\[843]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newa_1\[927] = \MIDI1_UART:BUART:sRX:MODIN5_4\[928]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODIN5_4\[928] = \MIDI1_UART:BUART:rx_count_4\[844]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newa_0\[929] = \MIDI1_UART:BUART:sRX:MODIN5_3\[930]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODIN5_3\[930] = \MIDI1_UART:BUART:rx_count_3\[845]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newb_6\[931] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newb_5\[932] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newb_4\[933] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newb_3\[934] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newb_2\[935] = Net_38[3]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newb_1\[936] = Net_38[3]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:newb_0\[937] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:dataa_6\[938] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:dataa_5\[939] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:dataa_4\[940] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:dataa_3\[941] = \MIDI1_UART:BUART:rx_count_6\[842]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:dataa_2\[942] = \MIDI1_UART:BUART:rx_count_5\[843]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:dataa_1\[943] = \MIDI1_UART:BUART:rx_count_4\[844]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:dataa_0\[944] = \MIDI1_UART:BUART:rx_count_3\[845]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:datab_6\[945] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:datab_5\[946] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:datab_4\[947] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:datab_3\[948] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:datab_2\[949] = Net_38[3]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:datab_1\[950] = Net_38[3]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:datab_0\[951] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:newa_0\[966] = \MIDI1_UART:BUART:rx_postpoll\[801]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:newb_0\[967] = \MIDI1_UART:BUART:rx_parity_bit\[918]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:dataa_0\[968] = \MIDI1_UART:BUART:rx_postpoll\[801]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:datab_0\[969] = \MIDI1_UART:BUART:rx_parity_bit\[918]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:a_0\[970] = \MIDI1_UART:BUART:rx_postpoll\[801]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:b_0\[971] = \MIDI1_UART:BUART:rx_parity_bit\[918]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\[973] = Net_38[3]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:eq_0\[974] = \MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[972]
Removing Lhs of wire \MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:eqi_0\[975] = \MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[972]
Removing Lhs of wire tmpOE__MIDI_IN1_net_0[997] = Net_38[3]
Removing Lhs of wire tmpOE__MIDI_OUT1_net_0[1002] = Net_38[3]
Removing Lhs of wire \USBMIDI_1:tmpOE__Dm_net_0\[1011] = Net_38[3]
Removing Lhs of wire \USBMIDI_1:tmpOE__Dp_net_0\[1018] = Net_38[3]
Removing Lhs of wire \MIDI1_UART:BUART:reset_reg\\D\[1076] = Net_40[2]
Removing Lhs of wire Net_280D[1081] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:rx_bitclk\\D\[1091] = \MIDI1_UART:BUART:rx_bitclk_pre\[836]
Removing Lhs of wire \MIDI1_UART:BUART:rx_parity_error_pre\\D\[1100] = \MIDI1_UART:BUART:rx_parity_error_pre\[913]
Removing Lhs of wire \MIDI1_UART:BUART:rx_break_status\\D\[1101] = Net_40[2]

------------------------------------------------------
Aliased 0 equations, 454 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'Net_40' (cost = 0):
Net_40 <=  ('0') ;

Note:  Expanding virtual equation for 'Net_38' (cost = 0):
Net_38 <=  ('1') ;

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (count_0);

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:s_0\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:s_0\ <= (not count_0);

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for 'matrix_reg_0' (cost = 8):
matrix_reg_0 <= ((count_2 and count_1 and count_0 and Reg8_0)
	OR (not count_0 and count_2 and count_1 and Reg7_0)
	OR (not count_1 and count_2 and count_0 and Reg6_0)
	OR (not count_1 and not count_0 and count_2 and Reg5_0)
	OR (not count_2 and count_1 and count_0 and Reg4_0)
	OR (not count_2 and not count_0 and count_1 and Reg3_0)
	OR (not count_2 and not count_1 and count_0 and Reg2_0)
	OR (not count_2 and not count_1 and not count_0 and Reg1_0));

Note:  Expanding virtual equation for 'matrix_reg_1' (cost = 8):
matrix_reg_1 <= ((count_2 and count_1 and count_0 and Reg8_1)
	OR (not count_0 and count_2 and count_1 and Reg7_1)
	OR (not count_1 and count_2 and count_0 and Reg6_1)
	OR (not count_1 and not count_0 and count_2 and Reg5_1)
	OR (not count_2 and count_1 and count_0 and Reg4_1)
	OR (not count_2 and not count_0 and count_1 and Reg3_1)
	OR (not count_2 and not count_1 and count_0 and Reg2_1)
	OR (not count_2 and not count_1 and not count_0 and Reg1_1));

Note:  Expanding virtual equation for 'matrix_reg_2' (cost = 8):
matrix_reg_2 <= ((count_2 and count_1 and count_0 and Reg8_2)
	OR (not count_0 and count_2 and count_1 and Reg7_2)
	OR (not count_1 and count_2 and count_0 and Reg6_2)
	OR (not count_1 and not count_0 and count_2 and Reg5_2)
	OR (not count_2 and count_1 and count_0 and Reg4_2)
	OR (not count_2 and not count_0 and count_1 and Reg3_2)
	OR (not count_2 and not count_1 and count_0 and Reg2_2)
	OR (not count_2 and not count_1 and not count_0 and Reg1_2));

Note:  Expanding virtual equation for 'matrix_reg_3' (cost = 8):
matrix_reg_3 <= ((count_2 and count_1 and count_0 and Reg8_3)
	OR (not count_0 and count_2 and count_1 and Reg7_3)
	OR (not count_1 and count_2 and count_0 and Reg6_3)
	OR (not count_1 and not count_0 and count_2 and Reg5_3)
	OR (not count_2 and count_1 and count_0 and Reg4_3)
	OR (not count_2 and not count_0 and count_1 and Reg3_3)
	OR (not count_2 and not count_1 and count_0 and Reg2_3)
	OR (not count_2 and not count_1 and not count_0 and Reg1_3));

Note:  Expanding virtual equation for 'matrix_reg_4' (cost = 8):
matrix_reg_4 <= ((count_2 and count_1 and count_0 and Reg8_4)
	OR (not count_0 and count_2 and count_1 and Reg7_4)
	OR (not count_1 and count_2 and count_0 and Reg6_4)
	OR (not count_1 and not count_0 and count_2 and Reg5_4)
	OR (not count_2 and count_1 and count_0 and Reg4_4)
	OR (not count_2 and not count_0 and count_1 and Reg3_4)
	OR (not count_2 and not count_1 and count_0 and Reg2_4)
	OR (not count_2 and not count_1 and not count_0 and Reg1_4));

Note:  Expanding virtual equation for 'matrix_reg_5' (cost = 8):
matrix_reg_5 <= ((count_2 and count_1 and count_0 and Reg8_5)
	OR (not count_0 and count_2 and count_1 and Reg7_5)
	OR (not count_1 and count_2 and count_0 and Reg6_5)
	OR (not count_1 and not count_0 and count_2 and Reg5_5)
	OR (not count_2 and count_1 and count_0 and Reg4_5)
	OR (not count_2 and not count_0 and count_1 and Reg3_5)
	OR (not count_2 and not count_1 and count_0 and Reg2_5)
	OR (not count_2 and not count_1 and not count_0 and Reg1_5));

Note:  Expanding virtual equation for 'matrix_reg_6' (cost = 8):
matrix_reg_6 <= ((count_2 and count_1 and count_0 and Reg8_6)
	OR (not count_0 and count_2 and count_1 and Reg7_6)
	OR (not count_1 and count_2 and count_0 and Reg6_6)
	OR (not count_1 and not count_0 and count_2 and Reg5_6)
	OR (not count_2 and count_1 and count_0 and Reg4_6)
	OR (not count_2 and not count_0 and count_1 and Reg3_6)
	OR (not count_2 and not count_1 and count_0 and Reg2_6)
	OR (not count_2 and not count_1 and not count_0 and Reg1_6));

Note:  Expanding virtual equation for 'matrix_reg_7' (cost = 8):
matrix_reg_7 <= ((count_2 and count_1 and count_0 and Reg8_7)
	OR (not count_0 and count_2 and count_1 and Reg7_7)
	OR (not count_1 and count_2 and count_0 and Reg6_7)
	OR (not count_1 and not count_0 and count_2 and Reg5_7)
	OR (not count_2 and count_1 and count_0 and Reg4_7)
	OR (not count_2 and not count_0 and count_1 and Reg3_7)
	OR (not count_2 and not count_1 and count_0 and Reg2_7)
	OR (not count_2 and not count_1 and not count_0 and Reg1_7));

Note:  Expanding virtual equation for 'matrix_reg_8' (cost = 8):
matrix_reg_8 <= ((count_2 and count_1 and count_0 and Reg8_8)
	OR (not count_0 and count_2 and count_1 and Reg7_8)
	OR (not count_1 and count_2 and count_0 and Reg6_8)
	OR (not count_1 and not count_0 and count_2 and Reg5_8)
	OR (not count_2 and count_1 and count_0 and Reg4_8)
	OR (not count_2 and not count_0 and count_1 and Reg3_8)
	OR (not count_2 and not count_1 and count_0 and Reg2_8)
	OR (not count_2 and not count_1 and not count_0 and Reg1_8));

Note:  Expanding virtual equation for 'matrix_reg_9' (cost = 8):
matrix_reg_9 <= ((count_2 and count_1 and count_0 and Reg8_9)
	OR (not count_0 and count_2 and count_1 and Reg7_9)
	OR (not count_1 and count_2 and count_0 and Reg6_9)
	OR (not count_1 and not count_0 and count_2 and Reg5_9)
	OR (not count_2 and count_1 and count_0 and Reg4_9)
	OR (not count_2 and not count_0 and count_1 and Reg3_9)
	OR (not count_2 and not count_1 and count_0 and Reg2_9)
	OR (not count_2 and not count_1 and not count_0 and Reg1_9));

Note:  Expanding virtual equation for 'matrix_reg_10' (cost = 8):
matrix_reg_10 <= ((count_2 and count_1 and count_0 and Reg8_10)
	OR (not count_0 and count_2 and count_1 and Reg7_10)
	OR (not count_1 and count_2 and count_0 and Reg6_10)
	OR (not count_1 and not count_0 and count_2 and Reg5_10)
	OR (not count_2 and count_1 and count_0 and Reg4_10)
	OR (not count_2 and not count_0 and count_1 and Reg3_10)
	OR (not count_2 and not count_1 and count_0 and Reg2_10)
	OR (not count_2 and not count_1 and not count_0 and Reg1_10));

Note:  Expanding virtual equation for 'matrix_reg_11' (cost = 8):
matrix_reg_11 <= ((count_2 and count_1 and count_0 and Reg8_11)
	OR (not count_0 and count_2 and count_1 and Reg7_11)
	OR (not count_1 and count_2 and count_0 and Reg6_11)
	OR (not count_1 and not count_0 and count_2 and Reg5_11)
	OR (not count_2 and count_1 and count_0 and Reg4_11)
	OR (not count_2 and not count_0 and count_1 and Reg3_11)
	OR (not count_2 and not count_1 and count_0 and Reg2_11)
	OR (not count_2 and not count_1 and not count_0 and Reg1_11));

Note:  Expanding virtual equation for 'matrix_reg_12' (cost = 8):
matrix_reg_12 <= ((count_2 and count_1 and count_0 and Reg8_12)
	OR (not count_0 and count_2 and count_1 and Reg7_12)
	OR (not count_1 and count_2 and count_0 and Reg6_12)
	OR (not count_1 and not count_0 and count_2 and Reg5_12)
	OR (not count_2 and count_1 and count_0 and Reg4_12)
	OR (not count_2 and not count_0 and count_1 and Reg3_12)
	OR (not count_2 and not count_1 and count_0 and Reg2_12)
	OR (not count_2 and not count_1 and not count_0 and Reg1_12));

Note:  Expanding virtual equation for 'matrix_reg_13' (cost = 8):
matrix_reg_13 <= ((count_2 and count_1 and count_0 and Reg8_13)
	OR (not count_0 and count_2 and count_1 and Reg7_13)
	OR (not count_1 and count_2 and count_0 and Reg6_13)
	OR (not count_1 and not count_0 and count_2 and Reg5_13)
	OR (not count_2 and count_1 and count_0 and Reg4_13)
	OR (not count_2 and not count_0 and count_1 and Reg3_13)
	OR (not count_2 and not count_1 and count_0 and Reg2_13)
	OR (not count_2 and not count_1 and not count_0 and Reg1_13));

Note:  Expanding virtual equation for 'matrix_reg_14' (cost = 8):
matrix_reg_14 <= ((count_2 and count_1 and count_0 and Reg8_14)
	OR (not count_0 and count_2 and count_1 and Reg7_14)
	OR (not count_1 and count_2 and count_0 and Reg6_14)
	OR (not count_1 and not count_0 and count_2 and Reg5_14)
	OR (not count_2 and count_1 and count_0 and Reg4_14)
	OR (not count_2 and not count_0 and count_1 and Reg3_14)
	OR (not count_2 and not count_1 and count_0 and Reg2_14)
	OR (not count_2 and not count_1 and not count_0 and Reg1_14));

Note:  Expanding virtual equation for 'matrix_reg_15' (cost = 8):
matrix_reg_15 <= ((count_2 and count_1 and count_0 and Reg8_15)
	OR (not count_0 and count_2 and count_1 and Reg7_15)
	OR (not count_1 and count_2 and count_0 and Reg6_15)
	OR (not count_1 and not count_0 and count_2 and Reg5_15)
	OR (not count_2 and count_1 and count_0 and Reg4_15)
	OR (not count_2 and not count_0 and count_1 and Reg3_15)
	OR (not count_2 and not count_1 and count_0 and Reg2_15)
	OR (not count_2 and not count_1 and not count_0 and Reg1_15));

Note:  Virtual signal Net_333 with ( cost: 128 or cost_inv: 128)  > 90 or with size: 128 > 102 has been made a (soft) node.
Net_333 <= ((not count_6 and not count_5 and not count_4 and not count_3 and count_2 and count_1 and count_0 and Reg8_0)
	OR (not count_6 and not count_5 and not count_4 and not count_3 and not count_0 and count_2 and count_1 and Reg7_0)
	OR (not count_6 and not count_5 and not count_4 and not count_3 and not count_1 and count_2 and count_0 and Reg6_0)
	OR (not count_6 and not count_5 and not count_4 and not count_3 and not count_1 and not count_0 and count_2 and Reg5_0)
	OR (not count_6 and not count_5 and not count_4 and not count_3 and not count_2 and count_1 and count_0 and Reg4_0)
	OR (not count_6 and not count_5 and not count_4 and not count_3 and not count_2 and not count_0 and count_1 and Reg3_0)
	OR (not count_6 and not count_5 and not count_4 and not count_3 and not count_2 and not count_1 and count_0 and Reg2_0)
	OR (not count_6 and not count_5 and not count_4 and count_3 and count_2 and count_1 and count_0 and Reg8_1)
	OR (not count_6 and not count_5 and not count_4 and not count_0 and count_3 and count_2 and count_1 and Reg7_1)
	OR (not count_6 and not count_5 and not count_4 and not count_1 and count_3 and count_2 and count_0 and Reg6_1)
	OR (not count_6 and not count_5 and not count_4 and not count_1 and not count_0 and count_3 and count_2 and Reg5_1)
	OR (not count_6 and not count_5 and not count_4 and not count_2 and count_3 and count_1 and count_0 and Reg4_1)
	OR (not count_6 and not count_5 and not count_4 and not count_2 and not count_0 and count_3 and count_1 and Reg3_1)
	OR (not count_6 and not count_5 and not count_4 and not count_2 and not count_1 and count_3 and count_0 and Reg2_1)
	OR (not count_6 and not count_5 and not count_3 and count_4 and count_2 and count_1 and count_0 and Reg8_2)
	OR (not count_6 and not count_5 and not count_3 and not count_0 and count_4 and count_2 and count_1 and Reg7_2)
	OR (not count_6 and not count_5 and not count_3 and not count_1 and count_4 and count_2 and count_0 and Reg6_2)
	OR (not count_6 and not count_5 and not count_3 and not count_1 and not count_0 and count_4 and count_2 and Reg5_2)
	OR (not count_6 and not count_5 and not count_3 and not count_2 and count_4 and count_1 and count_0 and Reg4_2)
	OR (not count_6 and not count_5 and not count_3 and not count_2 and not count_0 and count_4 and count_1 and Reg3_2)
	OR (not count_6 and not count_5 and not count_3 and not count_2 and not count_1 and count_4 and count_0 and Reg2_2)
	OR (not count_6 and not count_5 and count_4 and count_3 and count_2 and count_1 and count_0 and Reg8_3)
	OR (not count_6 and not count_5 and not count_0 and count_4 and count_3 and count_2 and count_1 and Reg7_3)
	OR (not count_6 and not count_5 and not count_1 and count_4 and count_3 and count_2 and count_0 and Reg6_3)
	OR (not count_6 and not count_5 and not count_1 and not count_0 and count_4 and count_3 and count_2 and Reg5_3)
	OR (not count_6 and not count_5 and not count_2 and count_4 and count_3 and count_1 and count_0 and Reg4_3)
	OR (not count_6 and not count_5 and not count_2 and not count_0 and count_4 and count_3 and count_1 and Reg3_3)
	OR (not count_6 and not count_5 and not count_2 and not count_1 and count_4 and count_3 and count_0 and Reg2_3)
	OR (not count_6 and not count_4 and not count_3 and count_5 and count_2 and count_1 and count_0 and Reg8_4)
	OR (not count_6 and not count_4 and not count_3 and not count_0 and count_5 and count_2 and count_1 and Reg7_4)
	OR (not count_6 and not count_4 and not count_3 and not count_1 and count_5 and count_2 and count_0 and Reg6_4)
	OR (not count_6 and not count_4 and not count_3 and not count_1 and not count_0 and count_5 and count_2 and Reg5_4)
	OR (not count_6 and not count_4 and not count_3 and not count_2 and count_5 and count_1 and count_0 and Reg4_4)
	OR (not count_6 and not count_4 and not count_3 and not count_2 and not count_0 and count_5 and count_1 and Reg3_4)
	OR (not count_6 and not count_4 and not count_3 and not count_2 and not count_1 and count_5 and count_0 and Reg2_4)
	OR (not count_6 and not count_4 and count_5 and count_3 and count_2 and count_1 and count_0 and Reg8_5)
	OR (not count_6 and not count_4 and not count_0 and count_5 and count_3 and count_2 and count_1 and Reg7_5)
	OR (not count_6 and not count_4 and not count_1 and count_5 and count_3 and count_2 and count_0 and Reg6_5)
	OR (not count_6 and not count_4 and not count_1 and not count_0 and count_5 and count_3 and count_2 and Reg5_5)
	OR (not count_6 and not count_4 and not count_2 and count_5 and count_3 and count_1 and count_0 and Reg4_5)
	OR (not count_6 and not count_4 and not count_2 and not count_0 and count_5 and count_3 and count_1 and Reg3_5)
	OR (not count_6 and not count_4 and not count_2 and not count_1 and count_5 and count_3 and count_0 and Reg2_5)
	OR (not count_6 and not count_3 and count_5 and count_4 and count_2 and count_1 and count_0 and Reg8_6)
	OR (not count_6 and not count_3 and not count_0 and count_5 and count_4 and count_2 and count_1 and Reg7_6)
	OR (not count_6 and not count_3 and not count_1 and count_5 and count_4 and count_2 and count_0 and Reg6_6)
	OR (not count_6 and not count_3 and not count_1 and not count_0 and count_5 and count_4 and count_2 and Reg5_6)
	OR (not count_6 and not count_3 and not count_2 and count_5 and count_4 and count_1 and count_0 and Reg4_6)
	OR (not count_6 and not count_3 and not count_2 and not count_0 and count_5 and count_4 and count_1 and Reg3_6)
	OR (not count_6 and not count_3 and not count_2 and not count_1 and count_5 and count_4 and count_0 and Reg2_6)
	OR (not count_6 and count_5 and count_4 and count_3 and count_2 and count_1 and count_0 and Reg8_7)
	OR (not count_6 and not count_0 and count_5 and count_4 and count_3 and count_2 and count_1 and Reg7_7)
	OR (not count_6 and not count_1 and count_5 and count_4 and count_3 and count_2 and count_0 and Reg6_7)
	OR (not count_6 and not count_1 and not count_0 and count_5 and count_4 and count_3 and count_2 and Reg5_7)
	OR (not count_6 and not count_2 and count_5 and count_4 and count_3 and count_1 and count_0 and Reg4_7)
	OR (not count_6 and not count_2 and not count_0 and count_5 and count_4 and count_3 and count_1 and Reg3_7)
	OR (not count_6 and not count_2 and not count_1 and count_5 and count_4 and count_3 and count_0 and Reg2_7)
	OR (not count_5 and not count_4 and not count_3 and count_6 and count_2 and count_1 and count_0 and Reg8_8)
	OR (not count_5 and not count_4 and not count_3 and not count_0 and count_6 and count_2 and count_1 and Reg7_8)
	OR (not count_5 and not count_4 and not count_3 and not count_1 and count_6 and count_2 and count_0 and Reg6_8)
	OR (not count_5 and not count_4 and not count_3 and not count_1 and not count_0 and count_6 and count_2 and Reg5_8)
	OR (not count_5 and not count_4 and not count_3 and not count_2 and count_6 and count_1 and count_0 and Reg4_8)
	OR (not count_5 and not count_4 and not count_3 and not count_2 and not count_0 and count_6 and count_1 and Reg3_8)
	OR (not count_5 and not count_4 and not count_3 and not count_2 and not count_1 and count_6 and count_0 and Reg2_8)
	OR (not count_5 and not count_4 and count_6 and count_3 and count_2 and count_1 and count_0 and Reg8_9)
	OR (not count_5 and not count_4 and not count_0 and count_6 and count_3 and count_2 and count_1 and Reg7_9)
	OR (not count_5 and not count_4 and not count_1 and count_6 and count_3 and count_2 and count_0 and Reg6_9)
	OR (not count_5 and not count_4 and not count_1 and not count_0 and count_6 and count_3 and count_2 and Reg5_9)
	OR (not count_5 and not count_4 and not count_2 and count_6 and count_3 and count_1 and count_0 and Reg4_9)
	OR (not count_5 and not count_4 and not count_2 and not count_0 and count_6 and count_3 and count_1 and Reg3_9)
	OR (not count_5 and not count_4 and not count_2 and not count_1 and count_6 and count_3 and count_0 and Reg2_9)
	OR (not count_5 and not count_3 and count_6 and count_4 and count_2 and count_1 and count_0 and Reg8_10)
	OR (not count_5 and not count_3 and not count_0 and count_6 and count_4 and count_2 and count_1 and Reg7_10)
	OR (not count_5 and not count_3 and not count_1 and count_6 and count_4 and count_2 and count_0 and Reg6_10)
	OR (not count_5 and not count_3 and not count_1 and not count_0 and count_6 and count_4 and count_2 and Reg5_10)
	OR (not count_5 and not count_3 and not count_2 and count_6 and count_4 and count_1 and count_0 and Reg4_10)
	OR (not count_5 and not count_3 and not count_2 and not count_0 and count_6 and count_4 and count_1 and Reg3_10)
	OR (not count_5 and not count_3 and not count_2 and not count_1 and count_6 and count_4 and count_0 and Reg2_10)
	OR (not count_5 and count_6 and count_4 and count_3 and count_2 and count_1 and count_0 and Reg8_11)
	OR (not count_5 and not count_0 and count_6 and count_4 and count_3 and count_2 and count_1 and Reg7_11)
	OR (not count_5 and not count_1 and count_6 and count_4 and count_3 and count_2 and count_0 and Reg6_11)
	OR (not count_5 and not count_1 and not count_0 and count_6 and count_4 and count_3 and count_2 and Reg5_11)
	OR (not count_5 and not count_2 and count_6 and count_4 and count_3 and count_1 and count_0 and Reg4_11)
	OR (not count_5 and not count_2 and not count_0 and count_6 and count_4 and count_3 and count_1 and Reg3_11)
	OR (not count_5 and not count_2 and not count_1 and count_6 and count_4 and count_3 and count_0 and Reg2_11)
	OR (not count_4 and not count_3 and count_6 and count_5 and count_2 and count_1 and count_0 and Reg8_12)
	OR (not count_4 and not count_3 and not count_0 and count_6 and count_5 and count_2 and count_1 and Reg7_12)
	OR (not count_4 and not count_3 and not count_1 and count_6 and count_5 and count_2 and count_0 and Reg6_12)
	OR (not count_4 and not count_3 and not count_1 and not count_0 and count_6 and count_5 and count_2 and Reg5_12)
	OR (not count_4 and not count_3 and not count_2 and count_6 and count_5 and count_1 and count_0 and Reg4_12)
	OR (not count_4 and not count_3 and not count_2 and not count_0 and count_6 and count_5 and count_1 and Reg3_12)
	OR (not count_4 and not count_3 and not count_2 and not count_1 and count_6 and count_5 and count_0 and Reg2_12)
	OR (not count_4 and count_6 and count_5 and count_3 and count_2 and count_1 and count_0 and Reg8_13)
	OR (not count_4 and not count_0 and count_6 and count_5 and count_3 and count_2 and count_1 and Reg7_13)
	OR (not count_4 and not count_1 and count_6 and count_5 and count_3 and count_2 and count_0 and Reg6_13)
	OR (not count_4 and not count_1 and not count_0 and count_6 and count_5 and count_3 and count_2 and Reg5_13)
	OR (not count_4 and not count_2 and count_6 and count_5 and count_3 and count_1 and count_0 and Reg4_13)
	OR (not count_4 and not count_2 and not count_0 and count_6 and count_5 and count_3 and count_1 and Reg3_13)
	OR (not count_4 and not count_2 and not count_1 and count_6 and count_5 and count_3 and count_0 and Reg2_13)
	OR (not count_3 and count_6 and count_5 and count_4 and count_2 and count_1 and count_0 and Reg8_14)
	OR (not count_3 and not count_0 and count_6 and count_5 and count_4 and count_2 and count_1 and Reg7_14)
	OR (not count_3 and not count_1 and count_6 and count_5 and count_4 and count_2 and count_0 and Reg6_14)
	OR (not count_3 and not count_1 and not count_0 and count_6 and count_5 and count_4 and count_2 and Reg5_14)
	OR (not count_3 and not count_2 and count_6 and count_5 and count_4 and count_1 and count_0 and Reg4_14)
	OR (not count_3 and not count_2 and not count_0 and count_6 and count_5 and count_4 and count_1 and Reg3_14)
	OR (not count_3 and not count_2 and not count_1 and count_6 and count_5 and count_4 and count_0 and Reg2_14)
	OR (count_6 and count_5 and count_4 and count_3 and count_2 and count_1 and count_0 and Reg8_15)
	OR (not count_0 and count_6 and count_5 and count_4 and count_3 and count_2 and count_1 and Reg7_15)
	OR (not count_1 and count_6 and count_5 and count_4 and count_3 and count_2 and count_0 and Reg6_15)
	OR (not count_1 and not count_0 and count_6 and count_5 and count_4 and count_3 and count_2 and Reg5_15)
	OR (not count_2 and count_6 and count_5 and count_4 and count_3 and count_1 and count_0 and Reg4_15)
	OR (not count_2 and not count_0 and count_6 and count_5 and count_4 and count_3 and count_1 and Reg3_15)
	OR (not count_2 and not count_1 and count_6 and count_5 and count_4 and count_3 and count_0 and Reg2_15)
	OR (not count_6 and not count_5 and not count_4 and not count_3 and not count_2 and not count_1 and not count_0 and Reg1_0)
	OR (not count_6 and not count_5 and not count_4 and not count_2 and not count_1 and not count_0 and count_3 and Reg1_1)
	OR (not count_6 and not count_5 and not count_3 and not count_2 and not count_1 and not count_0 and count_4 and Reg1_2)
	OR (not count_6 and not count_5 and not count_2 and not count_1 and not count_0 and count_4 and count_3 and Reg1_3)
	OR (not count_6 and not count_4 and not count_3 and not count_2 and not count_1 and not count_0 and count_5 and Reg1_4)
	OR (not count_6 and not count_4 and not count_2 and not count_1 and not count_0 and count_5 and count_3 and Reg1_5)
	OR (not count_6 and not count_3 and not count_2 and not count_1 and not count_0 and count_5 and count_4 and Reg1_6)
	OR (not count_6 and not count_2 and not count_1 and not count_0 and count_5 and count_4 and count_3 and Reg1_7)
	OR (not count_5 and not count_4 and not count_3 and not count_2 and not count_1 and not count_0 and count_6 and Reg1_8)
	OR (not count_5 and not count_4 and not count_2 and not count_1 and not count_0 and count_6 and count_3 and Reg1_9)
	OR (not count_5 and not count_3 and not count_2 and not count_1 and not count_0 and count_6 and count_4 and Reg1_10)
	OR (not count_5 and not count_2 and not count_1 and not count_0 and count_6 and count_4 and count_3 and Reg1_11)
	OR (not count_4 and not count_3 and not count_2 and not count_1 and not count_0 and count_6 and count_5 and Reg1_12)
	OR (not count_4 and not count_2 and not count_1 and not count_0 and count_6 and count_5 and count_3 and Reg1_13)
	OR (not count_3 and not count_2 and not count_1 and not count_0 and count_6 and count_5 and count_4 and Reg1_14)
	OR (not count_2 and not count_1 and not count_0 and count_6 and count_5 and count_4 and count_3 and Reg1_15));

Note:  Expanding virtual equation for 'Net_342' (cost = 8):
Net_342 <= ((Net_41 and count_6 and count_5 and count_4 and count_3 and count_2 and count_1 and count_0));

Note:  Expanding virtual equation for 'Net_347' (cost = 0):
Net_347 <= (not Net_41);

Note:  Expanding virtual equation for 'Net_278' (cost = 0):
Net_278 <= (not \MIDI1_UART:BUART:txn\);

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:rx_addressmatch\' (cost = 0):
\MIDI1_UART:BUART:rx_addressmatch\ <= (\MIDI1_UART:BUART:rx_addressmatch2\
	OR \MIDI1_UART:BUART:rx_addressmatch1\);

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:rx_bitclk_pre\' (cost = 1):
\MIDI1_UART:BUART:rx_bitclk_pre\ <= ((not \MIDI1_UART:BUART:rx_count_2\ and not \MIDI1_UART:BUART:rx_count_1\ and not \MIDI1_UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:rx_bitclk_pre16x\' (cost = 0):
\MIDI1_UART:BUART:rx_bitclk_pre16x\ <= ((not \MIDI1_UART:BUART:rx_count_2\ and \MIDI1_UART:BUART:rx_count_1\ and \MIDI1_UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:rx_poll_bit1\' (cost = 1):
\MIDI1_UART:BUART:rx_poll_bit1\ <= ((not \MIDI1_UART:BUART:rx_count_2\ and not \MIDI1_UART:BUART:rx_count_1\ and \MIDI1_UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:rx_poll_bit2\' (cost = 1):
\MIDI1_UART:BUART:rx_poll_bit2\ <= ((not \MIDI1_UART:BUART:rx_count_2\ and not \MIDI1_UART:BUART:rx_count_1\ and not \MIDI1_UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:pollingrange\' (cost = 4):
\MIDI1_UART:BUART:pollingrange\ <= ((not \MIDI1_UART:BUART:rx_count_2\ and not \MIDI1_UART:BUART:rx_count_1\));

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\MIDI1_UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\MIDI1_UART:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\' (cost = 0):
\MIDI1_UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\ <= (not \MIDI1_UART:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\' (cost = 0):
\MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\' (cost = 0):
\MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\ <= (\MIDI1_UART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\' (cost = 0):
\MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ <= (not \MIDI1_UART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\' (cost = 0):
\MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:lta_6\' (cost = 0):
\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:lta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:gta_6\' (cost = 0):
\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:gta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:lta_5\' (cost = 0):
\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:lta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:gta_5\' (cost = 0):
\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:gta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:lta_4\' (cost = 0):
\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:lta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:gta_4\' (cost = 0):
\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:gta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:lta_3\' (cost = 0):
\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:lta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:gta_3\' (cost = 0):
\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:gta_3\ <= (\MIDI1_UART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:lta_2\' (cost = 1):
\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:lta_2\ <= ((not \MIDI1_UART:BUART:rx_count_6\ and not \MIDI1_UART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:gta_2\' (cost = 0):
\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:gta_2\ <= (\MIDI1_UART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:lta_1\' (cost = 2):
\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:lta_1\ <= ((not \MIDI1_UART:BUART:rx_count_6\ and not \MIDI1_UART:BUART:rx_count_4\)
	OR (not \MIDI1_UART:BUART:rx_count_6\ and not \MIDI1_UART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:gta_1\' (cost = 0):
\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:gta_1\ <= (\MIDI1_UART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:lta_0\' (cost = 8):
\MIDI1_UART:BUART:sRX:MODULE_5:g2:a0:lta_0\ <= ((not \MIDI1_UART:BUART:rx_count_6\ and not \MIDI1_UART:BUART:rx_count_4\)
	OR (not \MIDI1_UART:BUART:rx_count_6\ and not \MIDI1_UART:BUART:rx_count_5\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 4):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((count_1 and count_0));

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:s_1\' (cost = 2):
\BasicCounter_1:MODULE_1:g2:a0:s_1\ <= ((not count_0 and count_1)
	OR (not count_1 and count_0));

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\' (cost = 4):
\MIDI1_UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\ <= ((not \MIDI1_UART:BUART:pollcount_1\ and not \MIDI1_UART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\' (cost = 0):
\MIDI1_UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ <= (not \MIDI1_UART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\' (cost = 2):
\MIDI1_UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\ <= ((not \MIDI1_UART:BUART:pollcount_0\ and \MIDI1_UART:BUART:pollcount_1\)
	OR (not \MIDI1_UART:BUART:pollcount_1\ and \MIDI1_UART:BUART:pollcount_0\));


Substituting virtuals - pass 3:

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 5):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_3\ <= ((count_2 and count_1 and count_0));

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:s_2\' (cost = 3):
\BasicCounter_1:MODULE_1:g2:a0:s_2\ <= ((not count_1 and count_2)
	OR (not count_0 and count_2)
	OR (not count_2 and count_1 and count_0));

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:rx_postpoll\' (cost = 72):
\MIDI1_UART:BUART:rx_postpoll\ <= (\MIDI1_UART:BUART:pollcount_1\
	OR (Net_283 and \MIDI1_UART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\ <= ((not \MIDI1_UART:BUART:pollcount_1\ and not Net_283 and not \MIDI1_UART:BUART:rx_parity_bit\)
	OR (not \MIDI1_UART:BUART:pollcount_1\ and not \MIDI1_UART:BUART:pollcount_0\ and not \MIDI1_UART:BUART:rx_parity_bit\)
	OR (\MIDI1_UART:BUART:pollcount_1\ and \MIDI1_UART:BUART:rx_parity_bit\)
	OR (Net_283 and \MIDI1_UART:BUART:pollcount_0\ and \MIDI1_UART:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\' (cost = 4):
\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\ <= ((not \MIDI1_UART:BUART:pollcount_1\ and not Net_283 and not \MIDI1_UART:BUART:rx_parity_bit\)
	OR (not \MIDI1_UART:BUART:pollcount_1\ and not \MIDI1_UART:BUART:pollcount_0\ and not \MIDI1_UART:BUART:rx_parity_bit\)
	OR (\MIDI1_UART:BUART:pollcount_1\ and \MIDI1_UART:BUART:rx_parity_bit\)
	OR (Net_283 and \MIDI1_UART:BUART:pollcount_0\ and \MIDI1_UART:BUART:rx_parity_bit\));


Substituting virtuals - pass 4:

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 6):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_4\ <= ((count_3 and count_2 and count_1 and count_0));

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:s_3\' (cost = 4):
\BasicCounter_1:MODULE_1:g2:a0:s_3\ <= ((not count_2 and count_3)
	OR (not count_1 and count_3)
	OR (not count_0 and count_3)
	OR (not count_3 and count_2 and count_1 and count_0));

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;


Substituting virtuals - pass 5:

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 7):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_5\ <= ((count_4 and count_3 and count_2 and count_1 and count_0));

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:s_4\' (cost = 5):
\BasicCounter_1:MODULE_1:g2:a0:s_4\ <= ((not count_3 and count_4)
	OR (not count_2 and count_4)
	OR (not count_1 and count_4)
	OR (not count_0 and count_4)
	OR (not count_4 and count_3 and count_2 and count_1 and count_0));

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;


Substituting virtuals - pass 6:

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 8):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_6\ <= ((count_5 and count_4 and count_3 and count_2 and count_1 and count_0));

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:s_5\' (cost = 6):
\BasicCounter_1:MODULE_1:g2:a0:s_5\ <= ((not count_4 and count_5)
	OR (not count_3 and count_5)
	OR (not count_2 and count_5)
	OR (not count_1 and count_5)
	OR (not count_0 and count_5)
	OR (not count_5 and count_4 and count_3 and count_2 and count_1 and count_0));

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_7\ <= ((count_6 and count_5 and count_4 and count_3 and count_2 and count_1 and count_0));


Substituting virtuals - pass 7:

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:s_6\' (cost = 7):
\BasicCounter_1:MODULE_1:g2:a0:s_6\ <= ((not count_5 and count_6)
	OR (not count_4 and count_6)
	OR (not count_3 and count_6)
	OR (not count_2 and count_6)
	OR (not count_1 and count_6)
	OR (not count_0 and count_6)
	OR (not count_6 and count_5 and count_4 and count_3 and count_2 and count_1 and count_0));

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;


Substituting virtuals - pass 8:


----------------------------------------------------------
Circuit simplification results:

	Expanded 80 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_24\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_16\ to Net_40
Aliasing \BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_8\ to Net_40
Aliasing \MIDI1_UART:BUART:rx_status_0\ to Net_40
Aliasing \MIDI1_UART:BUART:rx_status_6\ to Net_40
Aliasing \MIDI1_UART:BUART:rx_markspace_status\\D\ to Net_40
Aliasing \MIDI1_UART:BUART:rx_parity_error_status\\D\ to Net_40
Aliasing \MIDI1_UART:BUART:rx_addr_match_status\\D\ to Net_40
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_24\[185] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_16\[195] = Net_40[2]
Removing Lhs of wire \BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_8\[205] = Net_40[2]
Removing Lhs of wire Net_344[474] = Net_41[0]
Removing Rhs of wire \MIDI1_UART:BUART:rx_bitclk_enable\[800] = \MIDI1_UART:BUART:rx_bitclk\[848]
Removing Lhs of wire \MIDI1_UART:BUART:rx_status_0\[899] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:rx_status_6\[908] = Net_40[2]
Removing Rhs of wire Net_290[1003] = \MIDI1_UART:BUART:txn\[728]
Removing Lhs of wire \MIDI1_UART:BUART:tx_ctrl_mark_last\\D\[1083] = \MIDI1_UART:BUART:tx_ctrl_mark_last\[791]
Removing Lhs of wire \MIDI1_UART:BUART:rx_markspace_status\\D\[1095] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:rx_parity_error_status\\D\[1096] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:rx_addr_match_status\\D\[1098] = Net_40[2]
Removing Lhs of wire \MIDI1_UART:BUART:rx_markspace_pre\\D\[1099] = \MIDI1_UART:BUART:rx_markspace_pre\[912]
Removing Lhs of wire \MIDI1_UART:BUART:rx_parity_bit\\D\[1104] = \MIDI1_UART:BUART:rx_parity_bit\[918]

------------------------------------------------------
Aliased 0 equations, 14 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:

Note:  Deleted unused equation:
\MIDI1_UART:BUART:sRX:MODULE_6:g1:a0:xneq\ <= ((not \MIDI1_UART:BUART:rx_parity_bit\ and Net_283 and \MIDI1_UART:BUART:pollcount_0\)
	OR (not \MIDI1_UART:BUART:pollcount_1\ and not \MIDI1_UART:BUART:pollcount_0\ and \MIDI1_UART:BUART:rx_parity_bit\)
	OR (not \MIDI1_UART:BUART:pollcount_1\ and not Net_283 and \MIDI1_UART:BUART:rx_parity_bit\)
	OR (not \MIDI1_UART:BUART:rx_parity_bit\ and \MIDI1_UART:BUART:pollcount_1\));


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\214016586\Documents\GitHub\Accoder\Accoder.cydsn\Accoder.cyprj -dcpsoc3 Accoder.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 2s.737ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.0.0.432, Family: PSoC3, Started at: Friday, 21 July 2017 17:51:05
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\214016586\Documents\GitHub\Accoder\Accoder.cydsn\Accoder.cyprj -d CY8C5888LTI-LP097 Accoder.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.021ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_24\ kept Net_40
    Removed wire end \BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_16\ kept Net_40
    Removed wire end \BasicCounter_1:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_8\ kept Net_40
    Converted constant MacroCell: \MIDI1_UART:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: Net_280 from registered to combinatorial
    Converted constant MacroCell: \MIDI1_UART:BUART:rx_markspace_status\ from registered to combinatorial
    Converted constant MacroCell: \MIDI1_UART:BUART:rx_status_2\ from registered to combinatorial
    Converted constant MacroCell: \MIDI1_UART:BUART:rx_addr_match_status\ from registered to combinatorial
    Converted constant MacroCell: \MIDI1_UART:BUART:rx_break_status\ from registered to combinatorial
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'MIDI1_UART_IntClock'. Fanout=1, Signal=\MIDI1_UART:Net_9\
    Digital Clock 1: Automatic-assigning  clock 'SCLK'. Fanout=9, Signal=Net_41
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \MIDI1_UART:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: MIDI1_UART_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: MIDI1_UART_IntClock, EnableOut: Constant 1
</CYPRESSTAG>
ADD: pft.M0040: information: The following 4 pin(s) will be assigned a location by the fitter: \USBMIDI_1:Dm(0)\, \USBMIDI_1:Dp(0)\, MIDI_IN1(0), MIDI_OUT1(0)


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \MIDI1_UART:BUART:rx_parity_bit\, Duplicate of \MIDI1_UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\MIDI1_UART:BUART:rx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \MIDI1_UART:BUART:rx_parity_bit\ (fanout=0)

    Removing \MIDI1_UART:BUART:rx_address_detected\, Duplicate of \MIDI1_UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\MIDI1_UART:BUART:rx_address_detected\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \MIDI1_UART:BUART:rx_address_detected\ (fanout=0)

    Removing \MIDI1_UART:BUART:rx_parity_error_pre\, Duplicate of \MIDI1_UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\MIDI1_UART:BUART:rx_parity_error_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \MIDI1_UART:BUART:rx_parity_error_pre\ (fanout=0)

    Removing \MIDI1_UART:BUART:rx_markspace_pre\, Duplicate of \MIDI1_UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\MIDI1_UART:BUART:rx_markspace_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \MIDI1_UART:BUART:rx_markspace_pre\ (fanout=0)

    Removing \MIDI1_UART:BUART:rx_state_1\, Duplicate of \MIDI1_UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\MIDI1_UART:BUART:rx_state_1\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \MIDI1_UART:BUART:rx_state_1\ (fanout=8)

    Removing \MIDI1_UART:BUART:tx_parity_bit\, Duplicate of \MIDI1_UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\MIDI1_UART:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \MIDI1_UART:BUART:tx_parity_bit\ (fanout=0)

    Removing \MIDI1_UART:BUART:tx_mark\, Duplicate of \MIDI1_UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\MIDI1_UART:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \MIDI1_UART:BUART:tx_mark\ (fanout=0)

End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = DATA(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => DATA(0)__PA ,
            input => Net_332 ,
            pad => DATA(0)_PAD );
        Properties:
        {
        }

    Pin : Name = CLK(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => CLK(0)__PA ,
            input => Net_341 ,
            pad => CLK(0)_PAD );
        Properties:
        {
        }

    Pin : Name = TE(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => TE(0)__PA ,
            input => Net_41_local ,
            pad => TE(0)_PAD );
        Properties:
        {
        }

    Pin : Name = MIDI_IN1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => MIDI_IN1(0)__PA ,
            fb => Net_283 ,
            pad => MIDI_IN1(0)_PAD );

    Pin : Name = MIDI_OUT1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => MIDI_OUT1(0)__PA ,
            input => Net_290 ,
            pad => MIDI_OUT1(0)_PAD );

    Pin : Name = \USBMIDI_1:Dm(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: USB_D_MINUS
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \USBMIDI_1:Dm(0)\__PA ,
            analog_term => \USBMIDI_1:Net_597\ ,
            pad => \USBMIDI_1:Dm(0)_PAD\ );

    Pin : Name = \USBMIDI_1:Dp(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: FALLING
            Drive mode: HI_Z_ANALOG
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: USB_D_PLUS
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => \USBMIDI_1:Dp(0)\__PA ,
            analog_term => \USBMIDI_1:Net_1000\ ,
            pad => \USBMIDI_1:Dp(0)_PAD\ );
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=Net_333_split, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * count_5 * count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_15
            + count_6 * count_5 * count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_15
            + count_6 * count_5 * count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_15
            + count_6 * count_5 * count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_15
            + count_6 * count_5 * count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_15
        );
        Output = Net_333_split (fanout=1)

    MacroCell: Name=Net_333_split_28, Mode=(Combinatorial)
        Total # of inputs        : 8
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_333_split_4 * !Net_333_split_5 * !Net_333_split_6 * 
              !Net_333_split_7 * !Net_333_split_8 * !Net_333_split_9 * 
              !Net_333_split_26 * !Net_333_split_27
        );
        Output = Net_333_split_28 (fanout=1)

    MacroCell: Name=Net_333_split_27, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_333_split_10 * !Net_333_split_11 * !Net_333_split_12 * 
              !Net_333_split_13
        );
        Output = Net_333_split_27 (fanout=1)

    MacroCell: Name=Net_333_split_26, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_333_split_14 * !Net_333_split_15 * !Net_333_split_16 * 
              !Net_333_split_17 * !Net_333_split_18 * !Net_333_split_19 * 
              !Net_333_split_20 * !Net_333_split_21 * !Net_333_split_22 * 
              !Net_333_split_23 * !Net_333_split_24 * !Net_333_split_25
        );
        Output = Net_333_split_26 (fanout=1)

    MacroCell: Name=Net_333_split_25, Mode=(Combinatorial)
        Total # of inputs        : 10
        Total # of product terms : 3
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !count_6 * !count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_0
            + !count_6 * !count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_0
            + !count_6 * !count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_0
        );
        Output = Net_333_split_25 (fanout=1)

    MacroCell: Name=Net_333_split_24, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * !count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_0
            + !count_6 * !count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_0
            + !count_6 * !count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_0
            + !count_6 * !count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_0
            + !count_6 * !count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_0
        );
        Output = Net_333_split_24 (fanout=1)

    MacroCell: Name=Net_333, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_333_split * !Net_333_split_1 * !Net_333_split_2 * 
              !Net_333_split_3 * !Net_333_split_28
        );
        Output = Net_333 (fanout=1)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\MIDI1_UART:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_bitclk_enable_pre\
            + !\MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              !\MIDI1_UART:BUART:tx_state_2\
        );
        Output = \MIDI1_UART:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\MIDI1_UART:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_bitclk_enable_pre\ * 
              \MIDI1_UART:BUART:tx_fifo_empty\ * 
              \MIDI1_UART:BUART:tx_state_2\
        );
        Output = \MIDI1_UART:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\MIDI1_UART:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MIDI1_UART:BUART:tx_fifo_notfull\
        );
        Output = \MIDI1_UART:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=Net_333_split_23, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * !count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_1
            + !count_6 * !count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_1
            + !count_6 * !count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_1
            + !count_6 * !count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_1
            + !count_6 * !count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_1
        );
        Output = Net_333_split_23 (fanout=1)

    MacroCell: Name=Net_333_split_22, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * !count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_1
            + !count_6 * !count_5 * !count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_1
            + !count_6 * !count_5 * !count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_1
            + !count_6 * !count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_2
            + !count_6 * !count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_2
        );
        Output = Net_333_split_22 (fanout=1)

    MacroCell: Name=Net_333_split_21, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * !count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_2
            + !count_6 * !count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_2
            + !count_6 * !count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_2
            + !count_6 * !count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_2
            + !count_6 * !count_5 * count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_2
        );
        Output = Net_333_split_21 (fanout=1)

    MacroCell: Name=Net_333_split_20, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * !count_5 * count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_2
            + !count_6 * !count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_3
            + !count_6 * !count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_3
            + !count_6 * !count_5 * count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_3
            + !count_6 * !count_5 * count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_3
        );
        Output = Net_333_split_20 (fanout=1)

    MacroCell: Name=Net_333_split_19, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * !count_5 * count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_3
            + !count_6 * !count_5 * count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_3
            + !count_6 * !count_5 * count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_3
            + !count_6 * !count_5 * count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_3
            + !count_6 * count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_4
        );
        Output = Net_333_split_19 (fanout=1)

    MacroCell: Name=Net_333_split_18, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_4
            + !count_6 * count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_4
            + !count_6 * count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_4
            + !count_6 * count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_4
            + !count_6 * count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_4
        );
        Output = Net_333_split_18 (fanout=1)

    MacroCell: Name=Net_333_split_17, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_4
            + !count_6 * count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_4
            + !count_6 * count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_5
            + !count_6 * count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_5
            + !count_6 * count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_5
        );
        Output = Net_333_split_17 (fanout=1)

    MacroCell: Name=\MIDI1_UART:BUART:rx_counter_load\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\
        );
        Output = \MIDI1_UART:BUART:rx_counter_load\ (fanout=1)

    MacroCell: Name=Net_333_split_16, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_5
            + !count_6 * count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_5
            + !count_6 * count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_5
            + !count_6 * count_5 * !count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_5
            + !count_6 * count_5 * !count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_5
        );
        Output = Net_333_split_16 (fanout=1)

    MacroCell: Name=Net_333_split_15, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_6
            + !count_6 * count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_6
            + !count_6 * count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_6
            + !count_6 * count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_6
            + !count_6 * count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_6
        );
        Output = Net_333_split_15 (fanout=1)

    MacroCell: Name=Net_333_split_14, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_6
            + !count_6 * count_5 * count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_6
            + !count_6 * count_5 * count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_6
            + !count_6 * count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_7
            + !count_6 * count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_7
        );
        Output = Net_333_split_14 (fanout=1)

    MacroCell: Name=Net_333_split_13, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * count_5 * count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_7
            + !count_6 * count_5 * count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_7
            + !count_6 * count_5 * count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_7
            + !count_6 * count_5 * count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_7
            + !count_6 * count_5 * count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_7
        );
        Output = Net_333_split_13 (fanout=1)

    MacroCell: Name=\MIDI1_UART:BUART:rx_postpoll\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \MIDI1_UART:BUART:pollcount_1\
            + Net_283 * \MIDI1_UART:BUART:pollcount_0\
        );
        Output = \MIDI1_UART:BUART:rx_postpoll\ (fanout=1)

    MacroCell: Name=\MIDI1_UART:BUART:rx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MIDI1_UART:BUART:rx_load_fifo\ * 
              \MIDI1_UART:BUART:rx_fifofull\
        );
        Output = \MIDI1_UART:BUART:rx_status_4\ (fanout=1)

    MacroCell: Name=\MIDI1_UART:BUART:rx_status_5\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MIDI1_UART:BUART:rx_fifonotempty\ * 
              \MIDI1_UART:BUART:rx_state_stop1_reg\
        );
        Output = \MIDI1_UART:BUART:rx_status_5\ (fanout=1)

    MacroCell: Name=Net_333_split_12, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * count_5 * count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_7
            + count_6 * !count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_8
            + count_6 * !count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_8
            + count_6 * !count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_8
            + count_6 * !count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_8
        );
        Output = Net_333_split_12 (fanout=1)

    MacroCell: Name=Net_333_split_11, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * !count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_8
            + count_6 * !count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_8
            + count_6 * !count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_8
            + count_6 * !count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_8
            + count_6 * !count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_9
        );
        Output = Net_333_split_11 (fanout=1)

    MacroCell: Name=Net_333_split_10, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * !count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_9
            + count_6 * !count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_9
            + count_6 * !count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_9
            + count_6 * !count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_9
            + count_6 * !count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_9
        );
        Output = Net_333_split_10 (fanout=1)

    MacroCell: Name=Net_333_split_9, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * !count_5 * !count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_9
            + count_6 * !count_5 * !count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_9
            + count_6 * !count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_10
            + count_6 * !count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_10
            + count_6 * !count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_10
        );
        Output = Net_333_split_9 (fanout=1)

    MacroCell: Name=Net_333_split_8, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * !count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_10
            + count_6 * !count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_10
            + count_6 * !count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_10
            + count_6 * !count_5 * count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_10
            + count_6 * !count_5 * count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_10
        );
        Output = Net_333_split_8 (fanout=1)

    MacroCell: Name=Net_333_split_7, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * !count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_11
            + count_6 * !count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_11
            + count_6 * !count_5 * count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_11
            + count_6 * !count_5 * count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_11
            + count_6 * !count_5 * count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_11
        );
        Output = Net_333_split_7 (fanout=1)

    MacroCell: Name=Net_333_split_6, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * !count_5 * count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_11
            + count_6 * !count_5 * count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_11
            + count_6 * !count_5 * count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_11
            + count_6 * count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_12
            + count_6 * count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_12
        );
        Output = Net_333_split_6 (fanout=1)

    MacroCell: Name=Net_333_split_5, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_12
            + count_6 * count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_12
            + count_6 * count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_12
            + count_6 * count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_12
            + count_6 * count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_12
        );
        Output = Net_333_split_5 (fanout=1)

    MacroCell: Name=Net_341, Mode=(Combinatorial)
        Total # of inputs        : 8
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              count_6 * count_5 * count_4 * count_3 * count_2 * count_1 * 
              count_0 * Net_41_local
        );
        Output = Net_341 (fanout=1)

    MacroCell: Name=Net_332, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !Net_333
        );
        Output = Net_332 (fanout=1)

    MacroCell: Name=Net_333_split_4, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_12
            + count_6 * count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_13
            + count_6 * count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_13
            + count_6 * count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_13
            + count_6 * count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_13
        );
        Output = Net_333_split_4 (fanout=1)

    MacroCell: Name=Net_333_split_3, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_13
            + count_6 * count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_13
            + count_6 * count_5 * !count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_13
            + count_6 * count_5 * !count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_13
            + count_6 * count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_14
        );
        Output = Net_333_split_3 (fanout=1)

    MacroCell: Name=count_6, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_41) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              count_5 * count_4 * count_3 * count_2 * count_1 * count_0
        );
        Output = count_6 (fanout=27)

    MacroCell: Name=count_5, Mode=(T-Register)
        Total # of inputs        : 5
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_41) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              count_4 * count_3 * count_2 * count_1 * count_0
        );
        Output = count_5 (fanout=28)

    MacroCell: Name=count_4, Mode=(T-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_41) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              count_3 * count_2 * count_1 * count_0
        );
        Output = count_4 (fanout=29)

    MacroCell: Name=count_3, Mode=(T-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_41) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              count_2 * count_1 * count_0
        );
        Output = count_3 (fanout=30)

    MacroCell: Name=count_2, Mode=(T-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_41) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              count_1 * count_0
        );
        Output = count_2 (fanout=31)

    MacroCell: Name=count_1, Mode=(T-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_41) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              count_0
        );
        Output = count_1 (fanout=32)

    MacroCell: Name=count_0, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (Net_41) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = count_0 (fanout=33)

    MacroCell: Name=Net_333_split_2, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_14
            + count_6 * count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_14
            + count_6 * count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_14
            + count_6 * count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_14
            + count_6 * count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_14
        );
        Output = Net_333_split_2 (fanout=1)

    MacroCell: Name=Net_290, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\MIDI1_UART:BUART:tx_state_1\ * \MIDI1_UART:BUART:tx_state_0\ * 
              !\MIDI1_UART:BUART:tx_shift_out\ * 
              !\MIDI1_UART:BUART:tx_state_2\
            + !\MIDI1_UART:BUART:tx_state_1\ * \MIDI1_UART:BUART:tx_state_0\ * 
              !\MIDI1_UART:BUART:tx_state_2\ * !\MIDI1_UART:BUART:tx_bitclk\
            + \MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              !\MIDI1_UART:BUART:tx_shift_out\ * 
              !\MIDI1_UART:BUART:tx_state_2\ * 
              !\MIDI1_UART:BUART:tx_counter_dp\ * 
              \MIDI1_UART:BUART:tx_bitclk\
            + \MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_bitclk\ * 
              Net_290
            + \MIDI1_UART:BUART:tx_state_2\ * Net_290
        );
        Output = Net_290 (fanout=2)

    MacroCell: Name=\MIDI1_UART:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \MIDI1_UART:BUART:tx_state_1\ * \MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_bitclk_enable_pre\ * 
              \MIDI1_UART:BUART:tx_state_2\
            + \MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_2\ * 
              \MIDI1_UART:BUART:tx_counter_dp\ * \MIDI1_UART:BUART:tx_bitclk\
            + \MIDI1_UART:BUART:tx_state_0\ * !\MIDI1_UART:BUART:tx_state_2\ * 
              \MIDI1_UART:BUART:tx_bitclk\
        );
        Output = \MIDI1_UART:BUART:tx_state_1\ (fanout=8)

    MacroCell: Name=\MIDI1_UART:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_bitclk_enable_pre\ * 
              !\MIDI1_UART:BUART:tx_fifo_empty\
            + !\MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              !\MIDI1_UART:BUART:tx_fifo_empty\ * 
              !\MIDI1_UART:BUART:tx_state_2\
            + \MIDI1_UART:BUART:tx_state_1\ * \MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_bitclk_enable_pre\ * 
              \MIDI1_UART:BUART:tx_fifo_empty\ * 
              \MIDI1_UART:BUART:tx_state_2\
            + \MIDI1_UART:BUART:tx_state_0\ * !\MIDI1_UART:BUART:tx_state_2\ * 
              \MIDI1_UART:BUART:tx_bitclk\
        );
        Output = \MIDI1_UART:BUART:tx_state_0\ (fanout=8)

    MacroCell: Name=\MIDI1_UART:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_bitclk_enable_pre\ * 
              \MIDI1_UART:BUART:tx_state_2\
            + \MIDI1_UART:BUART:tx_state_1\ * \MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_bitclk_enable_pre\ * 
              \MIDI1_UART:BUART:tx_state_2\
            + \MIDI1_UART:BUART:tx_state_1\ * \MIDI1_UART:BUART:tx_state_0\ * 
              !\MIDI1_UART:BUART:tx_state_2\ * \MIDI1_UART:BUART:tx_bitclk\
            + \MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_2\ * 
              \MIDI1_UART:BUART:tx_counter_dp\ * \MIDI1_UART:BUART:tx_bitclk\
        );
        Output = \MIDI1_UART:BUART:tx_state_2\ (fanout=7)

    MacroCell: Name=\MIDI1_UART:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_state_2\
            + !\MIDI1_UART:BUART:tx_bitclk_enable_pre\
        );
        Output = \MIDI1_UART:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\MIDI1_UART:BUART:tx_ctrl_mark_last\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \MIDI1_UART:BUART:tx_ctrl_mark_last\ (fanout=8)

    MacroCell: Name=\MIDI1_UART:BUART:rx_state_0\, Mode=(T-Register)
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              !\MIDI1_UART:BUART:rx_state_3\ * \MIDI1_UART:BUART:rx_state_2\ * 
              !\MIDI1_UART:BUART:pollcount_1\ * !Net_283
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              !\MIDI1_UART:BUART:rx_state_3\ * \MIDI1_UART:BUART:rx_state_2\ * 
              !\MIDI1_UART:BUART:pollcount_1\ * 
              !\MIDI1_UART:BUART:pollcount_0\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_5\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_4\
        );
        Output = \MIDI1_UART:BUART:rx_state_0\ (fanout=8)

    MacroCell: Name=\MIDI1_UART:BUART:rx_load_fifo\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              \MIDI1_UART:BUART:rx_state_3\ * !\MIDI1_UART:BUART:rx_state_2\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_5\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_4\
        );
        Output = \MIDI1_UART:BUART:rx_load_fifo\ (fanout=2)

    MacroCell: Name=\MIDI1_UART:BUART:rx_state_3\, Mode=(T-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              \MIDI1_UART:BUART:rx_state_3\ * \MIDI1_UART:BUART:rx_state_2\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_5\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_4\
        );
        Output = \MIDI1_UART:BUART:rx_state_3\ (fanout=7)

    MacroCell: Name=\MIDI1_UART:BUART:rx_state_2\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              \MIDI1_UART:BUART:rx_state_3\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              \MIDI1_UART:BUART:rx_state_2\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !Net_283 * 
              \MIDI1_UART:BUART:rx_last\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_5\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_4\
        );
        Output = \MIDI1_UART:BUART:rx_state_2\ (fanout=7)

    MacroCell: Name=\MIDI1_UART:BUART:rx_bitclk_enable\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MIDI1_UART:BUART:rx_count_2\ * !\MIDI1_UART:BUART:rx_count_1\ * 
              !\MIDI1_UART:BUART:rx_count_0\
        );
        Output = \MIDI1_UART:BUART:rx_bitclk_enable\ (fanout=6)

    MacroCell: Name=\MIDI1_UART:BUART:rx_state_stop1_reg\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * \MIDI1_UART:BUART:rx_state_3\ * 
              \MIDI1_UART:BUART:rx_state_2\
        );
        Output = \MIDI1_UART:BUART:rx_state_stop1_reg\ (fanout=1)

    MacroCell: Name=\MIDI1_UART:BUART:pollcount_1\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\MIDI1_UART:BUART:rx_count_2\ * !\MIDI1_UART:BUART:rx_count_1\ * 
              !\MIDI1_UART:BUART:pollcount_1\ * Net_283 * 
              \MIDI1_UART:BUART:pollcount_0\
            + !\MIDI1_UART:BUART:rx_count_2\ * !\MIDI1_UART:BUART:rx_count_1\ * 
              \MIDI1_UART:BUART:pollcount_1\ * !Net_283
            + !\MIDI1_UART:BUART:rx_count_2\ * !\MIDI1_UART:BUART:rx_count_1\ * 
              \MIDI1_UART:BUART:pollcount_1\ * 
              !\MIDI1_UART:BUART:pollcount_0\
        );
        Output = \MIDI1_UART:BUART:pollcount_1\ (fanout=4)

    MacroCell: Name=\MIDI1_UART:BUART:pollcount_0\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\MIDI1_UART:BUART:rx_count_2\ * !\MIDI1_UART:BUART:rx_count_1\ * 
              !Net_283 * \MIDI1_UART:BUART:pollcount_0\
            + !\MIDI1_UART:BUART:rx_count_2\ * !\MIDI1_UART:BUART:rx_count_1\ * 
              Net_283 * !\MIDI1_UART:BUART:pollcount_0\
        );
        Output = \MIDI1_UART:BUART:pollcount_0\ (fanout=5)

    MacroCell: Name=Net_333_split_1, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * count_5 * count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_14
            + count_6 * count_5 * count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_14
            + count_6 * count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_15
            + count_6 * count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_15
            + count_6 * count_5 * count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_15
        );
        Output = Net_333_split_1 (fanout=1)

    MacroCell: Name=\MIDI1_UART:BUART:rx_status_3\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              \MIDI1_UART:BUART:rx_state_3\ * \MIDI1_UART:BUART:rx_state_2\ * 
              !\MIDI1_UART:BUART:pollcount_1\ * !Net_283
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              \MIDI1_UART:BUART:rx_state_3\ * \MIDI1_UART:BUART:rx_state_2\ * 
              !\MIDI1_UART:BUART:pollcount_1\ * 
              !\MIDI1_UART:BUART:pollcount_0\
        );
        Output = \MIDI1_UART:BUART:rx_status_3\ (fanout=1)

    MacroCell: Name=\MIDI1_UART:BUART:rx_last\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_283
        );
        Output = \MIDI1_UART:BUART:rx_last\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\MIDI1_UART:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \MIDI1_UART:Net_9\ ,
            cs_addr_2 => \MIDI1_UART:BUART:tx_state_1\ ,
            cs_addr_1 => \MIDI1_UART:BUART:tx_state_0\ ,
            cs_addr_0 => \MIDI1_UART:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \MIDI1_UART:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \MIDI1_UART:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \MIDI1_UART:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\MIDI1_UART:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \MIDI1_UART:Net_9\ ,
            cs_addr_0 => \MIDI1_UART:BUART:counter_load_not\ ,
            ce0_reg => \MIDI1_UART:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \MIDI1_UART:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\MIDI1_UART:BUART:sRX:RxShifter:u0\
        PORT MAP (
            clock => \MIDI1_UART:Net_9\ ,
            cs_addr_2 => \MIDI1_UART:BUART:tx_ctrl_mark_last\ ,
            cs_addr_1 => \MIDI1_UART:BUART:rx_state_0\ ,
            cs_addr_0 => \MIDI1_UART:BUART:rx_bitclk_enable\ ,
            route_si => \MIDI1_UART:BUART:rx_postpoll\ ,
            f0_load => \MIDI1_UART:BUART:rx_load_fifo\ ,
            f0_bus_stat_comb => \MIDI1_UART:BUART:rx_fifonotempty\ ,
            f0_blk_stat_comb => \MIDI1_UART:BUART:rx_fifofull\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\MIDI1_UART:BUART:sTX:TxSts\
        PORT MAP (
            clock => \MIDI1_UART:Net_9\ ,
            status_3 => \MIDI1_UART:BUART:tx_fifo_notfull\ ,
            status_2 => \MIDI1_UART:BUART:tx_status_2\ ,
            status_1 => \MIDI1_UART:BUART:tx_fifo_empty\ ,
            status_0 => \MIDI1_UART:BUART:tx_status_0\ ,
            interrupt => Net_284 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\MIDI1_UART:BUART:sRX:RxSts\
        PORT MAP (
            clock => \MIDI1_UART:Net_9\ ,
            status_5 => \MIDI1_UART:BUART:rx_status_5\ ,
            status_4 => \MIDI1_UART:BUART:rx_status_4\ ,
            status_3 => \MIDI1_UART:BUART:rx_status_3\ ,
            interrupt => Net_285 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "1011111"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\Control_Reg_2:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg1_15 ,
            control_6 => Reg1_14 ,
            control_5 => Reg1_13 ,
            control_4 => Reg1_12 ,
            control_3 => Reg1_11 ,
            control_2 => Reg1_10 ,
            control_1 => Reg1_9 ,
            control_0 => Reg1_8 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\Control_Reg_1:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg1_7 ,
            control_6 => Reg1_6 ,
            control_5 => Reg1_5 ,
            control_4 => Reg1_4 ,
            control_3 => Reg1_3 ,
            control_2 => Reg1_2 ,
            control_1 => Reg1_1 ,
            control_0 => Reg1_0 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\Control_Reg_3:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg2_7 ,
            control_6 => Reg2_6 ,
            control_5 => Reg2_5 ,
            control_4 => Reg2_4 ,
            control_3 => Reg2_3 ,
            control_2 => Reg2_2 ,
            control_1 => Reg2_1 ,
            control_0 => Reg2_0 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\Control_Reg_4:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg2_15 ,
            control_6 => Reg2_14 ,
            control_5 => Reg2_13 ,
            control_4 => Reg2_12 ,
            control_3 => Reg2_11 ,
            control_2 => Reg2_10 ,
            control_1 => Reg2_9 ,
            control_0 => Reg2_8 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\Control_Reg_5:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg3_7 ,
            control_6 => Reg3_6 ,
            control_5 => Reg3_5 ,
            control_4 => Reg3_4 ,
            control_3 => Reg3_3 ,
            control_2 => Reg3_2 ,
            control_1 => Reg3_1 ,
            control_0 => Reg3_0 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\Control_Reg_6:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg3_15 ,
            control_6 => Reg3_14 ,
            control_5 => Reg3_13 ,
            control_4 => Reg3_12 ,
            control_3 => Reg3_11 ,
            control_2 => Reg3_10 ,
            control_1 => Reg3_9 ,
            control_0 => Reg3_8 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\Control_Reg_7:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg4_7 ,
            control_6 => Reg4_6 ,
            control_5 => Reg4_5 ,
            control_4 => Reg4_4 ,
            control_3 => Reg4_3 ,
            control_2 => Reg4_2 ,
            control_1 => Reg4_1 ,
            control_0 => Reg4_0 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\Control_Reg_8:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg4_15 ,
            control_6 => Reg4_14 ,
            control_5 => Reg4_13 ,
            control_4 => Reg4_12 ,
            control_3 => Reg4_11 ,
            control_2 => Reg4_10 ,
            control_1 => Reg4_9 ,
            control_0 => Reg4_8 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\Control_Reg_9:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg5_7 ,
            control_6 => Reg5_6 ,
            control_5 => Reg5_5 ,
            control_4 => Reg5_4 ,
            control_3 => Reg5_3 ,
            control_2 => Reg5_2 ,
            control_1 => Reg5_1 ,
            control_0 => Reg5_0 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\Control_Reg_10:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg5_15 ,
            control_6 => Reg5_14 ,
            control_5 => Reg5_13 ,
            control_4 => Reg5_12 ,
            control_3 => Reg5_11 ,
            control_2 => Reg5_10 ,
            control_1 => Reg5_9 ,
            control_0 => Reg5_8 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\Control_Reg_11:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg6_7 ,
            control_6 => Reg6_6 ,
            control_5 => Reg6_5 ,
            control_4 => Reg6_4 ,
            control_3 => Reg6_3 ,
            control_2 => Reg6_2 ,
            control_1 => Reg6_1 ,
            control_0 => Reg6_0 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\Control_Reg_12:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg6_15 ,
            control_6 => Reg6_14 ,
            control_5 => Reg6_13 ,
            control_4 => Reg6_12 ,
            control_3 => Reg6_11 ,
            control_2 => Reg6_10 ,
            control_1 => Reg6_9 ,
            control_0 => Reg6_8 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\Control_Reg_13:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg7_7 ,
            control_6 => Reg7_6 ,
            control_5 => Reg7_5 ,
            control_4 => Reg7_4 ,
            control_3 => Reg7_3 ,
            control_2 => Reg7_2 ,
            control_1 => Reg7_1 ,
            control_0 => Reg7_0 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\Control_Reg_14:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg7_15 ,
            control_6 => Reg7_14 ,
            control_5 => Reg7_13 ,
            control_4 => Reg7_12 ,
            control_3 => Reg7_11 ,
            control_2 => Reg7_10 ,
            control_1 => Reg7_9 ,
            control_0 => Reg7_8 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\Control_Reg_15:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg8_7 ,
            control_6 => Reg8_6 ,
            control_5 => Reg8_5 ,
            control_4 => Reg8_4 ,
            control_3 => Reg8_3 ,
            control_2 => Reg8_2 ,
            control_1 => Reg8_1 ,
            control_0 => Reg8_0 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\Control_Reg_16:Sync:ctrl_reg\
        PORT MAP (
            control_7 => Reg8_15 ,
            control_6 => Reg8_14 ,
            control_5 => Reg8_13 ,
            control_4 => Reg8_12 ,
            control_3 => Reg8_11 ,
            control_2 => Reg8_10 ,
            control_1 => Reg8_9 ,
            control_0 => Reg8_8 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\MIDI1_UART:BUART:sRX:RxBitCounter\
        PORT MAP (
            clock => \MIDI1_UART:Net_9\ ,
            load => \MIDI1_UART:BUART:rx_counter_load\ ,
            count_6 => \MIDI1_UART:BUART:rx_count_6\ ,
            count_5 => \MIDI1_UART:BUART:rx_count_5\ ,
            count_4 => \MIDI1_UART:BUART:rx_count_4\ ,
            count_3 => \MIDI1_UART:BUART:rx_count_3\ ,
            count_2 => \MIDI1_UART:BUART:rx_count_2\ ,
            count_1 => \MIDI1_UART:BUART:rx_count_1\ ,
            count_0 => \MIDI1_UART:BUART:rx_count_0\ ,
            tc => \MIDI1_UART:BUART:rx_count7_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "1110010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\MIDI1_UART:TXInternalInterrupt\
        PORT MAP (
            interrupt => Net_284 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\MIDI1_UART:RXInternalInterrupt\
        PORT MAP (
            interrupt => Net_285 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBMIDI_1:dp_int\
        PORT MAP (
            interrupt => \USBMIDI_1:Net_1010\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBMIDI_1:ep_2\
        PORT MAP (
            interrupt => \USBMIDI_1:ep_int_2\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBMIDI_1:ep_1\
        PORT MAP (
            interrupt => \USBMIDI_1:ep_int_1\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBMIDI_1:ep_0\
        PORT MAP (
            interrupt => \USBMIDI_1:ep_int_0\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBMIDI_1:bus_reset\
        PORT MAP (
            interrupt => \USBMIDI_1:Net_1876\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBMIDI_1:arb_int\
        PORT MAP (
            interrupt => \USBMIDI_1:Net_1889\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBMIDI_1:sof_int\
        PORT MAP (
            interrupt => Net_291 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    2 :    6 :    8 : 25.00 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :    9 :   23 :   32 : 28.13 %
IO                            :   10 :   38 :   48 : 20.83 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    1 :    0 :    1 : 100.00 %
DMA Channels                  :    0 :   24 :   24 :  0.00 %
Timer                         :    0 :    4 :    4 :  0.00 %
UDB                           :      :      :      :        
  Macrocells                  :   62 :  130 :  192 : 32.29 %
  Unique P-terms              :  183 :  201 :  384 : 47.66 %
  Total P-terms               :  192 :      :      :        
  Datapath Cells              :    3 :   21 :   24 : 12.50 %
  Status Cells                :    3 :   21 :   24 : 12.50 %
    StatusI Registers         :    2 :      :      :        
    Routed Count7 Load/Enable :    1 :      :      :        
  Control Cells               :   17 :    7 :   24 : 70.83 %
    Control Registers         :   16 :      :      :        
    Count7 Cells              :    1 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    0 :    2 :    2 :  0.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.357ms
Tech Mapping phase: Elapsed time ==> 0s.449ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Initial Analog Placement Results:
IO_4@[IOP=(15)][IoId=(4)] : CLK(0) (fixed)
IO_0@[IOP=(15)][IoId=(0)] : DATA(0) (fixed)
IO_5@[IOP=(0)][IoId=(5)] : TE(0) (fixed)
IO_7@[IOP=(15)][IoId=(7)] : \USBMIDI_1:Dm(0)\ (fixed)
IO_6@[IOP=(15)][IoId=(6)] : \USBMIDI_1:Dp(0)\ (fixed)
USB[0]@[FFB(USB,0)] : \USBMIDI_1:USB\
Analog Placement phase: Elapsed time ==> 0s.029ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
}
Map of item to net {
}
Mux Info {
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = False
IsVddaHalfUsedForSar1 = False
Analog Code Generation phase: Elapsed time ==> 0s.285ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 3.9 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   39 :    9 :   48 :  81.25%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :           10.08
                   Pterms :            4.77
               Macrocells :            1.59
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.001ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.082ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         22 :      14.45 :       2.82
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=1] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=Net_333_split_3, Mode=(Combinatorial) @ [UDB=(0,0)][LB=1][MC=3]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_13
            + count_6 * count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_13
            + count_6 * count_5 * !count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_13
            + count_6 * count_5 * !count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_13
            + count_6 * count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_14
        );
        Output = Net_333_split_3 (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\Control_Reg_16:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg8_15 ,
        control_6 => Reg8_14 ,
        control_5 => Reg8_13 ,
        control_4 => Reg8_12 ,
        control_3 => Reg8_11 ,
        control_2 => Reg8_10 ,
        control_1 => Reg8_9 ,
        control_0 => Reg8_8 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_6, Mode=(Combinatorial) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * !count_5 * count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_11
            + count_6 * !count_5 * count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_11
            + count_6 * !count_5 * count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_11
            + count_6 * count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_12
            + count_6 * count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_12
        );
        Output = Net_333_split_6 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,1)][LB=1] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_1, Mode=(Combinatorial) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * count_5 * count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_14
            + count_6 * count_5 * count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_14
            + count_6 * count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_15
            + count_6 * count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_15
            + count_6 * count_5 * count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_15
        );
        Output = Net_333_split_1 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=1] #macrocells=3, #inputs=6, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\MIDI1_UART:BUART:tx_state_0\, Mode=(T-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_bitclk_enable_pre\ * 
              !\MIDI1_UART:BUART:tx_fifo_empty\
            + !\MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              !\MIDI1_UART:BUART:tx_fifo_empty\ * 
              !\MIDI1_UART:BUART:tx_state_2\
            + \MIDI1_UART:BUART:tx_state_1\ * \MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_bitclk_enable_pre\ * 
              \MIDI1_UART:BUART:tx_fifo_empty\ * 
              \MIDI1_UART:BUART:tx_state_2\
            + \MIDI1_UART:BUART:tx_state_0\ * !\MIDI1_UART:BUART:tx_state_2\ * 
              \MIDI1_UART:BUART:tx_bitclk\
        );
        Output = \MIDI1_UART:BUART:tx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\MIDI1_UART:BUART:tx_status_0\, Mode=(Combinatorial) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_bitclk_enable_pre\ * 
              \MIDI1_UART:BUART:tx_fifo_empty\ * 
              \MIDI1_UART:BUART:tx_state_2\
        );
        Output = \MIDI1_UART:BUART:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\MIDI1_UART:BUART:tx_bitclk\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_state_2\
            + !\MIDI1_UART:BUART:tx_bitclk_enable_pre\
        );
        Output = \MIDI1_UART:BUART:tx_bitclk\ (fanout=4)
        Properties               : 
        {
        }
}

statusicell: Name =\MIDI1_UART:BUART:sTX:TxSts\
    PORT MAP (
        clock => \MIDI1_UART:Net_9\ ,
        status_3 => \MIDI1_UART:BUART:tx_fifo_notfull\ ,
        status_2 => \MIDI1_UART:BUART:tx_status_2\ ,
        status_1 => \MIDI1_UART:BUART:tx_fifo_empty\ ,
        status_0 => \MIDI1_UART:BUART:tx_status_0\ ,
        interrupt => Net_284 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000001"
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\Control_Reg_2:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg1_15 ,
        control_6 => Reg1_14 ,
        control_5 => Reg1_13 ,
        control_4 => Reg1_12 ,
        control_3 => Reg1_11 ,
        control_2 => Reg1_10 ,
        control_1 => Reg1_9 ,
        control_0 => Reg1_8 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=1, #inputs=7, #pterms=5
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=Net_290, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\MIDI1_UART:BUART:tx_state_1\ * \MIDI1_UART:BUART:tx_state_0\ * 
              !\MIDI1_UART:BUART:tx_shift_out\ * 
              !\MIDI1_UART:BUART:tx_state_2\
            + !\MIDI1_UART:BUART:tx_state_1\ * \MIDI1_UART:BUART:tx_state_0\ * 
              !\MIDI1_UART:BUART:tx_state_2\ * !\MIDI1_UART:BUART:tx_bitclk\
            + \MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              !\MIDI1_UART:BUART:tx_shift_out\ * 
              !\MIDI1_UART:BUART:tx_state_2\ * 
              !\MIDI1_UART:BUART:tx_counter_dp\ * 
              \MIDI1_UART:BUART:tx_bitclk\
            + \MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_bitclk\ * 
              Net_290
            + \MIDI1_UART:BUART:tx_state_2\ * Net_290
        );
        Output = Net_290 (fanout=2)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,3)][LB=1] #macrocells=3, #inputs=6, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\MIDI1_UART:BUART:tx_state_2\, Mode=(T-Register) @ [UDB=(0,3)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_bitclk_enable_pre\ * 
              \MIDI1_UART:BUART:tx_state_2\
            + \MIDI1_UART:BUART:tx_state_1\ * \MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_bitclk_enable_pre\ * 
              \MIDI1_UART:BUART:tx_state_2\
            + \MIDI1_UART:BUART:tx_state_1\ * \MIDI1_UART:BUART:tx_state_0\ * 
              !\MIDI1_UART:BUART:tx_state_2\ * \MIDI1_UART:BUART:tx_bitclk\
            + \MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_2\ * 
              \MIDI1_UART:BUART:tx_counter_dp\ * \MIDI1_UART:BUART:tx_bitclk\
        );
        Output = \MIDI1_UART:BUART:tx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\MIDI1_UART:BUART:tx_state_1\, Mode=(T-Register) @ [UDB=(0,3)][LB=1][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \MIDI1_UART:BUART:tx_state_1\ * \MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_bitclk_enable_pre\ * 
              \MIDI1_UART:BUART:tx_state_2\
            + \MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_2\ * 
              \MIDI1_UART:BUART:tx_counter_dp\ * \MIDI1_UART:BUART:tx_bitclk\
            + \MIDI1_UART:BUART:tx_state_0\ * !\MIDI1_UART:BUART:tx_state_2\ * 
              \MIDI1_UART:BUART:tx_bitclk\
        );
        Output = \MIDI1_UART:BUART:tx_state_1\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\MIDI1_UART:BUART:counter_load_not\, Mode=(Combinatorial) @ [UDB=(0,3)][LB=1][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              \MIDI1_UART:BUART:tx_bitclk_enable_pre\
            + !\MIDI1_UART:BUART:tx_state_1\ * !\MIDI1_UART:BUART:tx_state_0\ * 
              !\MIDI1_UART:BUART:tx_state_2\
        );
        Output = \MIDI1_UART:BUART:counter_load_not\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\MIDI1_UART:BUART:sTX:TxShifter:u0\
    PORT MAP (
        clock => \MIDI1_UART:Net_9\ ,
        cs_addr_2 => \MIDI1_UART:BUART:tx_state_1\ ,
        cs_addr_1 => \MIDI1_UART:BUART:tx_state_0\ ,
        cs_addr_0 => \MIDI1_UART:BUART:tx_bitclk_enable_pre\ ,
        so_comb => \MIDI1_UART:BUART:tx_shift_out\ ,
        f0_bus_stat_comb => \MIDI1_UART:BUART:tx_fifo_notfull\ ,
        f0_blk_stat_comb => \MIDI1_UART:BUART:tx_fifo_empty\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=1, #inputs=1, #pterms=1
{
    [McSlotId=0]:     MacroCell: Name=\MIDI1_UART:BUART:tx_status_2\, Mode=(Combinatorial) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MIDI1_UART:BUART:tx_fifo_notfull\
        );
        Output = \MIDI1_UART:BUART:tx_status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

datapathcell: Name =\MIDI1_UART:BUART:sTX:sCLOCK:TxBitClkGen\
    PORT MAP (
        clock => \MIDI1_UART:Net_9\ ,
        cs_addr_0 => \MIDI1_UART:BUART:counter_load_not\ ,
        ce0_reg => \MIDI1_UART:BUART:tx_bitclk_enable_pre\ ,
        ce1_reg => \MIDI1_UART:BUART:tx_counter_dp\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\Control_Reg_15:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg8_7 ,
        control_6 => Reg8_6 ,
        control_5 => Reg8_5 ,
        control_4 => Reg8_4 ,
        control_3 => Reg8_3 ,
        control_2 => Reg8_2 ,
        control_1 => Reg8_1 ,
        control_0 => Reg8_0 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(0,5)] is empty.
UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_11, Mode=(Combinatorial) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * !count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_8
            + count_6 * !count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_8
            + count_6 * !count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_8
            + count_6 * !count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_8
            + count_6 * !count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_9
        );
        Output = Net_333_split_11 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,0)][LB=1] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_9, Mode=(Combinatorial) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * !count_5 * !count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_9
            + count_6 * !count_5 * !count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_9
            + count_6 * !count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_10
            + count_6 * !count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_10
            + count_6 * !count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_10
        );
        Output = Net_333_split_9 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

controlcell: Name =\Control_Reg_14:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg7_15 ,
        control_6 => Reg7_14 ,
        control_5 => Reg7_13 ,
        control_4 => Reg7_12 ,
        control_3 => Reg7_11 ,
        control_2 => Reg7_10 ,
        control_1 => Reg7_9 ,
        control_0 => Reg7_8 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_5, Mode=(Combinatorial) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_12
            + count_6 * count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_12
            + count_6 * count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_12
            + count_6 * count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_12
            + count_6 * count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_12
        );
        Output = Net_333_split_5 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,1)][LB=1] #macrocells=2, #inputs=12, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=Net_333_split_28, Mode=(Combinatorial) @ [UDB=(1,1)][LB=1][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_333_split_4 * !Net_333_split_5 * !Net_333_split_6 * 
              !Net_333_split_7 * !Net_333_split_8 * !Net_333_split_9 * 
              !Net_333_split_26 * !Net_333_split_27
        );
        Output = Net_333_split_28 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=Net_333_split_27, Mode=(Combinatorial) @ [UDB=(1,1)][LB=1][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_333_split_10 * !Net_333_split_11 * !Net_333_split_12 * 
              !Net_333_split_13
        );
        Output = Net_333_split_27 (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\Control_Reg_6:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg3_15 ,
        control_6 => Reg3_14 ,
        control_5 => Reg3_13 ,
        control_4 => Reg3_12 ,
        control_3 => Reg3_11 ,
        control_2 => Reg3_10 ,
        control_1 => Reg3_9 ,
        control_0 => Reg3_8 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=Net_333_split_4, Mode=(Combinatorial) @ [UDB=(1,2)][LB=0][MC=3]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_12
            + count_6 * count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_13
            + count_6 * count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_13
            + count_6 * count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_13
            + count_6 * count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_13
        );
        Output = Net_333_split_4 (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,2)][LB=1] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_7, Mode=(Combinatorial) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * !count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_11
            + count_6 * !count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_11
            + count_6 * !count_5 * count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_11
            + count_6 * !count_5 * count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_11
            + count_6 * !count_5 * count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_11
        );
        Output = Net_333_split_7 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

controlcell: Name =\Control_Reg_4:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg2_15 ,
        control_6 => Reg2_14 ,
        control_5 => Reg2_13 ,
        control_4 => Reg2_12 ,
        control_3 => Reg2_11 ,
        control_2 => Reg2_10 ,
        control_1 => Reg2_9 ,
        control_0 => Reg2_8 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=Net_333_split_12, Mode=(Combinatorial) @ [UDB=(1,3)][LB=0][MC=2]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * count_5 * count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_7
            + count_6 * !count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_8
            + count_6 * !count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_8
            + count_6 * !count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_8
            + count_6 * !count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_8
        );
        Output = Net_333_split_12 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,3)][LB=1] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_13, Mode=(Combinatorial) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * count_5 * count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_7
            + !count_6 * count_5 * count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_7
            + !count_6 * count_5 * count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_7
            + !count_6 * count_5 * count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_7
            + !count_6 * count_5 * count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_7
        );
        Output = Net_333_split_13 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

controlcell: Name =\Control_Reg_11:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg6_7 ,
        control_6 => Reg6_6 ,
        control_5 => Reg6_5 ,
        control_4 => Reg6_4 ,
        control_3 => Reg6_3 ,
        control_2 => Reg6_2 ,
        control_1 => Reg6_1 ,
        control_0 => Reg6_0 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_24, Mode=(Combinatorial) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * !count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_0
            + !count_6 * !count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_0
            + !count_6 * !count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_0
            + !count_6 * !count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_0
            + !count_6 * !count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_0
        );
        Output = Net_333_split_24 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=count_6, Mode=(T-Register) @ [UDB=(1,4)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_41) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              count_5 * count_4 * count_3 * count_2 * count_1 * count_0
        );
        Output = count_6 (fanout=27)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=count_1, Mode=(T-Register) @ [UDB=(1,4)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_41) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              count_0
        );
        Output = count_1 (fanout=32)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=count_2, Mode=(T-Register) @ [UDB=(1,4)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_41) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              count_1 * count_0
        );
        Output = count_2 (fanout=31)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,4)][LB=1] #macrocells=3, #inputs=12, #pterms=7
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=count_4, Mode=(T-Register) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_41) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              count_3 * count_2 * count_1 * count_0
        );
        Output = count_4 (fanout=29)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=Net_333_split_14, Mode=(Combinatorial) @ [UDB=(1,4)][LB=1][MC=2]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_6
            + !count_6 * count_5 * count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_6
            + !count_6 * count_5 * count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_6
            + !count_6 * count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_7
            + !count_6 * count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_7
        );
        Output = Net_333_split_14 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=count_5, Mode=(T-Register) @ [UDB=(1,4)][LB=1][MC=3]
        Total # of inputs        : 5
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_41) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              count_4 * count_3 * count_2 * count_1 * count_0
        );
        Output = count_5 (fanout=28)
        Properties               : 
        {
        }
}

controlcell: Name =\Control_Reg_13:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg7_7 ,
        control_6 => Reg7_6 ,
        control_5 => Reg7_5 ,
        control_4 => Reg7_4 ,
        control_3 => Reg7_3 ,
        control_2 => Reg7_2 ,
        control_1 => Reg7_1 ,
        control_0 => Reg7_0 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(1,5)] is empty.
UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=2, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_10, Mode=(Combinatorial) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * !count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_9
            + count_6 * !count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_9
            + count_6 * !count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_9
            + count_6 * !count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_9
            + count_6 * !count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_9
        );
        Output = Net_333_split_10 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=count_0, Mode=(T-Register) @ [UDB=(2,0)][LB=0][MC=2]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (Net_41) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = count_0 (fanout=33)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,0)][LB=1] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=Net_333_split_8, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * !count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_10
            + count_6 * !count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_10
            + count_6 * !count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_10
            + count_6 * !count_5 * count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_10
            + count_6 * !count_5 * count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_10
        );
        Output = Net_333_split_8 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

controlcell: Name =\Control_Reg_12:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg6_15 ,
        control_6 => Reg6_14 ,
        control_5 => Reg6_13 ,
        control_4 => Reg6_12 ,
        control_3 => Reg6_11 ,
        control_2 => Reg6_10 ,
        control_1 => Reg6_9 ,
        control_0 => Reg6_8 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_15, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_6
            + !count_6 * count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_6
            + !count_6 * count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_6
            + !count_6 * count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_6
            + !count_6 * count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_6
        );
        Output = Net_333_split_15 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,1)][LB=1] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_2, Mode=(Combinatorial) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_14
            + count_6 * count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_14
            + count_6 * count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_14
            + count_6 * count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_14
            + count_6 * count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_14
        );
        Output = Net_333_split_2 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

controlcell: Name =\Control_Reg_10:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg5_15 ,
        control_6 => Reg5_14 ,
        control_5 => Reg5_13 ,
        control_4 => Reg5_12 ,
        control_3 => Reg5_11 ,
        control_2 => Reg5_10 ,
        control_1 => Reg5_9 ,
        control_0 => Reg5_8 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_20, Mode=(Combinatorial) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * !count_5 * count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_2
            + !count_6 * !count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_3
            + !count_6 * !count_5 * count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_3
            + !count_6 * !count_5 * count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_3
            + !count_6 * !count_5 * count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_3
        );
        Output = Net_333_split_20 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,2)][LB=1] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_23, Mode=(Combinatorial) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * !count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_1
            + !count_6 * !count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_1
            + !count_6 * !count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_1
            + !count_6 * !count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_1
            + !count_6 * !count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_1
        );
        Output = Net_333_split_23 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

controlcell: Name =\Control_Reg_5:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg3_7 ,
        control_6 => Reg3_6 ,
        control_5 => Reg3_5 ,
        control_4 => Reg3_4 ,
        control_3 => Reg3_3 ,
        control_2 => Reg3_2 ,
        control_1 => Reg3_1 ,
        control_0 => Reg3_0 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_21, Mode=(Combinatorial) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * !count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_2
            + !count_6 * !count_5 * count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_2
            + !count_6 * !count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_2
            + !count_6 * !count_5 * count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_2
            + !count_6 * !count_5 * count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_2
        );
        Output = Net_333_split_21 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,3)][LB=1] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_18, Mode=(Combinatorial) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_4
            + !count_6 * count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_4
            + !count_6 * count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              count_0 * Reg4_4
            + !count_6 * count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_4
            + !count_6 * count_5 * !count_4 * !count_3 * count_2 * !count_1 * 
              count_0 * Reg6_4
        );
        Output = Net_333_split_18 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

controlcell: Name =\Control_Reg_7:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg4_7 ,
        control_6 => Reg4_6 ,
        control_5 => Reg4_5 ,
        control_4 => Reg4_4 ,
        control_3 => Reg4_3 ,
        control_2 => Reg4_2 ,
        control_1 => Reg4_1 ,
        control_0 => Reg4_0 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_22, Mode=(Combinatorial) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * !count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_1
            + !count_6 * !count_5 * !count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_1
            + !count_6 * !count_5 * !count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_1
            + !count_6 * !count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_2
            + !count_6 * !count_5 * count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_2
        );
        Output = Net_333_split_22 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,4)][LB=1] #macrocells=1, #inputs=12, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=Net_333_split_26, Mode=(Combinatorial) @ [UDB=(2,4)][LB=1][MC=2]
        Total # of inputs        : 12
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_333_split_14 * !Net_333_split_15 * !Net_333_split_16 * 
              !Net_333_split_17 * !Net_333_split_18 * !Net_333_split_19 * 
              !Net_333_split_20 * !Net_333_split_21 * !Net_333_split_22 * 
              !Net_333_split_23 * !Net_333_split_24 * !Net_333_split_25
        );
        Output = Net_333_split_26 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

controlcell: Name =\Control_Reg_9:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg5_7 ,
        control_6 => Reg5_6 ,
        control_5 => Reg5_5 ,
        control_4 => Reg5_4 ,
        control_3 => Reg5_3 ,
        control_2 => Reg5_2 ,
        control_1 => Reg5_1 ,
        control_0 => Reg5_0 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(2,5)] contents:
LAB@[UDB=(2,5)][LB=0] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_19, Mode=(Combinatorial) @ [UDB=(2,5)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * !count_5 * count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_3
            + !count_6 * !count_5 * count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_3
            + !count_6 * !count_5 * count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_3
            + !count_6 * !count_5 * count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_3
            + !count_6 * count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_4
        );
        Output = Net_333_split_19 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,5)][LB=1] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=Net_333_split_16, Mode=(Combinatorial) @ [UDB=(2,5)][LB=1][MC=2]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_5
            + !count_6 * count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_5
            + !count_6 * count_5 * !count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_5
            + !count_6 * count_5 * !count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_5
            + !count_6 * count_5 * !count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_5
        );
        Output = Net_333_split_16 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=2, #inputs=12, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split, Mode=(Combinatorial) @ [UDB=(3,0)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              count_6 * count_5 * count_4 * count_3 * !count_2 * count_1 * 
              count_0 * Reg4_15
            + count_6 * count_5 * count_4 * count_3 * count_2 * !count_1 * 
              !count_0 * Reg5_15
            + count_6 * count_5 * count_4 * count_3 * count_2 * !count_1 * 
              count_0 * Reg6_15
            + count_6 * count_5 * count_4 * count_3 * count_2 * count_1 * 
              !count_0 * Reg7_15
            + count_6 * count_5 * count_4 * count_3 * count_2 * count_1 * 
              count_0 * Reg8_15
        );
        Output = Net_333_split (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=count_3, Mode=(T-Register) @ [UDB=(3,0)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_41) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              count_2 * count_1 * count_0
        );
        Output = count_3 (fanout=30)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,0)][LB=1] #macrocells=1, #inputs=0, #pterms=0
{
    [McSlotId=0]:     MacroCell: Name=\MIDI1_UART:BUART:tx_ctrl_mark_last\, Mode=(T-Register) @ [UDB=(3,0)][LB=1][MC=0]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \MIDI1_UART:BUART:tx_ctrl_mark_last\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=1, #inputs=5, #pterms=1
{
    [McSlotId=0]:     MacroCell: Name=Net_333, Mode=(Combinatorial) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_333_split * !Net_333_split_1 * !Net_333_split_2 * 
              !Net_333_split_3 * !Net_333_split_28
        );
        Output = Net_333 (fanout=1)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,1)][LB=1] #macrocells=2, #inputs=3, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=Net_332, Mode=(Combinatorial) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !Net_333
        );
        Output = Net_332 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\MIDI1_UART:BUART:rx_status_5\, Mode=(Combinatorial) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MIDI1_UART:BUART:rx_fifonotempty\ * 
              \MIDI1_UART:BUART:rx_state_stop1_reg\
        );
        Output = \MIDI1_UART:BUART:rx_status_5\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\Control_Reg_8:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg4_15 ,
        control_6 => Reg4_14 ,
        control_5 => Reg4_13 ,
        control_4 => Reg4_12 ,
        control_3 => Reg4_11 ,
        control_2 => Reg4_10 ,
        control_1 => Reg4_9 ,
        control_0 => Reg4_8 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=3, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_25, Mode=(Combinatorial) @ [UDB=(3,2)][LB=0][MC=0]
        Total # of inputs        : 10
        Total # of product terms : 3
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !count_6 * !count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_0
            + !count_6 * !count_5 * !count_4 * !count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_0
            + !count_6 * !count_5 * !count_4 * !count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_0
        );
        Output = Net_333_split_25 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\MIDI1_UART:BUART:rx_last\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_283
        );
        Output = \MIDI1_UART:BUART:rx_last\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=Net_341, Mode=(Combinatorial) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              count_6 * count_5 * count_4 * count_3 * count_2 * count_1 * 
              count_0 * Net_41_local
        );
        Output = Net_341 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

controlcell: Name =\Control_Reg_1:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg1_7 ,
        control_6 => Reg1_6 ,
        control_5 => Reg1_5 ,
        control_4 => Reg1_4 ,
        control_3 => Reg1_3 ,
        control_2 => Reg1_2 ,
        control_1 => Reg1_1 ,
        control_0 => Reg1_0 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=4, #inputs=6, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\MIDI1_UART:BUART:pollcount_1\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=0]
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\MIDI1_UART:BUART:rx_count_2\ * !\MIDI1_UART:BUART:rx_count_1\ * 
              !\MIDI1_UART:BUART:pollcount_1\ * Net_283 * 
              \MIDI1_UART:BUART:pollcount_0\
            + !\MIDI1_UART:BUART:rx_count_2\ * !\MIDI1_UART:BUART:rx_count_1\ * 
              \MIDI1_UART:BUART:pollcount_1\ * !Net_283
            + !\MIDI1_UART:BUART:rx_count_2\ * !\MIDI1_UART:BUART:rx_count_1\ * 
              \MIDI1_UART:BUART:pollcount_1\ * 
              !\MIDI1_UART:BUART:pollcount_0\
        );
        Output = \MIDI1_UART:BUART:pollcount_1\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\MIDI1_UART:BUART:rx_postpoll\, Mode=(Combinatorial) @ [UDB=(3,3)][LB=0][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \MIDI1_UART:BUART:pollcount_1\
            + Net_283 * \MIDI1_UART:BUART:pollcount_0\
        );
        Output = \MIDI1_UART:BUART:rx_postpoll\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\MIDI1_UART:BUART:pollcount_0\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\MIDI1_UART:BUART:rx_count_2\ * !\MIDI1_UART:BUART:rx_count_1\ * 
              !Net_283 * \MIDI1_UART:BUART:pollcount_0\
            + !\MIDI1_UART:BUART:rx_count_2\ * !\MIDI1_UART:BUART:rx_count_1\ * 
              Net_283 * !\MIDI1_UART:BUART:pollcount_0\
        );
        Output = \MIDI1_UART:BUART:pollcount_0\ (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\MIDI1_UART:BUART:rx_bitclk_enable\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MIDI1_UART:BUART:rx_count_2\ * !\MIDI1_UART:BUART:rx_count_1\ * 
              !\MIDI1_UART:BUART:rx_count_0\
        );
        Output = \MIDI1_UART:BUART:rx_bitclk_enable\ (fanout=6)
        Properties               : 
        {
        }
}

datapathcell: Name =\MIDI1_UART:BUART:sRX:RxShifter:u0\
    PORT MAP (
        clock => \MIDI1_UART:Net_9\ ,
        cs_addr_2 => \MIDI1_UART:BUART:tx_ctrl_mark_last\ ,
        cs_addr_1 => \MIDI1_UART:BUART:rx_state_0\ ,
        cs_addr_0 => \MIDI1_UART:BUART:rx_bitclk_enable\ ,
        route_si => \MIDI1_UART:BUART:rx_postpoll\ ,
        f0_load => \MIDI1_UART:BUART:rx_load_fifo\ ,
        f0_bus_stat_comb => \MIDI1_UART:BUART:rx_fifonotempty\ ,
        f0_blk_stat_comb => \MIDI1_UART:BUART:rx_fifofull\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\Control_Reg_3:Sync:ctrl_reg\
    PORT MAP (
        control_7 => Reg2_7 ,
        control_6 => Reg2_6 ,
        control_5 => Reg2_5 ,
        control_4 => Reg2_4 ,
        control_3 => Reg2_3 ,
        control_2 => Reg2_2 ,
        control_1 => Reg2_1 ,
        control_0 => Reg2_0 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=4, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\MIDI1_UART:BUART:rx_state_0\, Mode=(T-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              !\MIDI1_UART:BUART:rx_state_3\ * \MIDI1_UART:BUART:rx_state_2\ * 
              !\MIDI1_UART:BUART:pollcount_1\ * !Net_283
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              !\MIDI1_UART:BUART:rx_state_3\ * \MIDI1_UART:BUART:rx_state_2\ * 
              !\MIDI1_UART:BUART:pollcount_1\ * 
              !\MIDI1_UART:BUART:pollcount_0\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_5\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_4\
        );
        Output = \MIDI1_UART:BUART:rx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\MIDI1_UART:BUART:rx_status_3\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=1]
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              \MIDI1_UART:BUART:rx_state_3\ * \MIDI1_UART:BUART:rx_state_2\ * 
              !\MIDI1_UART:BUART:pollcount_1\ * !Net_283
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              \MIDI1_UART:BUART:rx_state_3\ * \MIDI1_UART:BUART:rx_state_2\ * 
              !\MIDI1_UART:BUART:pollcount_1\ * 
              !\MIDI1_UART:BUART:pollcount_0\
        );
        Output = \MIDI1_UART:BUART:rx_status_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\MIDI1_UART:BUART:rx_state_stop1_reg\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * \MIDI1_UART:BUART:rx_state_3\ * 
              \MIDI1_UART:BUART:rx_state_2\
        );
        Output = \MIDI1_UART:BUART:rx_state_stop1_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\MIDI1_UART:BUART:rx_load_fifo\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=3]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              \MIDI1_UART:BUART:rx_state_3\ * !\MIDI1_UART:BUART:rx_state_2\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_5\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_4\
        );
        Output = \MIDI1_UART:BUART:rx_load_fifo\ (fanout=2)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,4)][LB=1] #macrocells=1, #inputs=2, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\MIDI1_UART:BUART:rx_status_4\, Mode=(Combinatorial) @ [UDB=(3,4)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MIDI1_UART:BUART:rx_load_fifo\ * 
              \MIDI1_UART:BUART:rx_fifofull\
        );
        Output = \MIDI1_UART:BUART:rx_status_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

statusicell: Name =\MIDI1_UART:BUART:sRX:RxSts\
    PORT MAP (
        clock => \MIDI1_UART:Net_9\ ,
        status_5 => \MIDI1_UART:BUART:rx_status_5\ ,
        status_4 => \MIDI1_UART:BUART:rx_status_4\ ,
        status_3 => \MIDI1_UART:BUART:rx_status_3\ ,
        interrupt => Net_285 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "1011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=1, #inputs=12, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_333_split_17, Mode=(Combinatorial) @ [UDB=(3,5)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !count_6 * count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              !count_0 * Reg7_4
            + !count_6 * count_5 * !count_4 * !count_3 * count_2 * count_1 * 
              count_0 * Reg8_4
            + !count_6 * count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              !count_0 * Reg1_5
            + !count_6 * count_5 * !count_4 * count_3 * !count_2 * !count_1 * 
              count_0 * Reg2_5
            + !count_6 * count_5 * !count_4 * count_3 * !count_2 * count_1 * 
              !count_0 * Reg3_5
        );
        Output = Net_333_split_17 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,5)][LB=1] #macrocells=3, #inputs=10, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\MIDI1_UART:BUART:rx_state_3\, Mode=(T-Register) @ [UDB=(3,5)][LB=1][MC=0]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              \MIDI1_UART:BUART:rx_state_3\ * \MIDI1_UART:BUART:rx_state_2\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_5\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_4\
        );
        Output = \MIDI1_UART:BUART:rx_state_3\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\MIDI1_UART:BUART:rx_counter_load\, Mode=(Combinatorial) @ [UDB=(3,5)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\
        );
        Output = \MIDI1_UART:BUART:rx_counter_load\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\MIDI1_UART:BUART:rx_state_2\, Mode=(T-Register) @ [UDB=(3,5)][LB=1][MC=3]
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\MIDI1_UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              \MIDI1_UART:BUART:rx_state_3\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * 
              \MIDI1_UART:BUART:rx_bitclk_enable\ * 
              \MIDI1_UART:BUART:rx_state_2\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              !\MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !Net_283 * 
              \MIDI1_UART:BUART:rx_last\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_5\
            + !\MIDI1_UART:BUART:tx_ctrl_mark_last\ * 
              \MIDI1_UART:BUART:rx_state_0\ * !\MIDI1_UART:BUART:rx_state_3\ * 
              !\MIDI1_UART:BUART:rx_state_2\ * !\MIDI1_UART:BUART:rx_count_6\ * 
              !\MIDI1_UART:BUART:rx_count_4\
        );
        Output = \MIDI1_UART:BUART:rx_state_2\ (fanout=7)
        Properties               : 
        {
        }
}

count7cell: Name =\MIDI1_UART:BUART:sRX:RxBitCounter\
    PORT MAP (
        clock => \MIDI1_UART:Net_9\ ,
        load => \MIDI1_UART:BUART:rx_counter_load\ ,
        count_6 => \MIDI1_UART:BUART:rx_count_6\ ,
        count_5 => \MIDI1_UART:BUART:rx_count_5\ ,
        count_4 => \MIDI1_UART:BUART:rx_count_4\ ,
        count_3 => \MIDI1_UART:BUART:rx_count_3\ ,
        count_2 => \MIDI1_UART:BUART:rx_count_2\ ,
        count_1 => \MIDI1_UART:BUART:rx_count_1\ ,
        count_0 => \MIDI1_UART:BUART:rx_count_0\ ,
        tc => \MIDI1_UART:BUART:rx_count7_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "1110010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\MIDI1_UART:RXInternalInterrupt\
        PORT MAP (
            interrupt => Net_285 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =\MIDI1_UART:TXInternalInterrupt\
        PORT MAP (
            interrupt => Net_284 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(2)] 
    interrupt: Name =\USBMIDI_1:ep_1\
        PORT MAP (
            interrupt => \USBMIDI_1:ep_int_1\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(3)] 
    interrupt: Name =\USBMIDI_1:ep_2\
        PORT MAP (
            interrupt => \USBMIDI_1:ep_int_2\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(12)] 
    interrupt: Name =\USBMIDI_1:dp_int\
        PORT MAP (
            interrupt => \USBMIDI_1:Net_1010\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(21)] 
    interrupt: Name =\USBMIDI_1:sof_int\
        PORT MAP (
            interrupt => Net_291 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(22)] 
    interrupt: Name =\USBMIDI_1:arb_int\
        PORT MAP (
            interrupt => \USBMIDI_1:Net_1889\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(23)] 
    interrupt: Name =\USBMIDI_1:bus_reset\
        PORT MAP (
            interrupt => \USBMIDI_1:Net_1876\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(24)] 
    interrupt: Name =\USBMIDI_1:ep_0\
        PORT MAP (
            interrupt => \USBMIDI_1:ep_int_0\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: empty
Port 0 contains the following IO cells:
[IoId=5]: 
Pin : Name = TE(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => TE(0)__PA ,
        input => Net_41_local ,
        pad => TE(0)_PAD );
    Properties:
    {
    }

Port 1 is empty
Port 2 is empty
Port 3 is empty
Port 12 contains the following IO cells:
[IoId=3]: 
Pin : Name = MIDI_IN1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => MIDI_IN1(0)__PA ,
        fb => Net_283 ,
        pad => MIDI_IN1(0)_PAD );
    Properties:
    {
    }

Port 15 generates interrupt for logical port:
    logicalport: Name =\USBMIDI_1:Dp\
        PORT MAP (
            in_clock_en => Net_38 ,
            in_reset => Net_40 ,
            out_clock_en => Net_38 ,
            out_reset => Net_40 ,
            interrupt => \USBMIDI_1:Net_1010\ ,
            in_clock => ClockBlock_BUS_CLK );
        Properties:
        {
            drive_mode = "000"
            ibuf_enabled = "0"
            id = "0d776c25-0fda-4bff-af2b-9962432af301/618a72fc-5ddd-4df5-958f-a3d55102db42"
            init_dr_st = "1"
            input_buffer_sel = "00"
            input_clk_en = 0
            input_sync = "1"
            input_sync_mode = "0"
            intr_mode = "10"
            invert_in_clock = 0
            invert_in_clock_en = 0
            invert_in_reset = 0
            invert_out_clock = 0
            invert_out_clock_en = 0
            invert_out_reset = 0
            io_voltage = ""
            layout_mode = "CONTIGUOUS"
            oe_conn = "0"
            oe_reset = 0
            oe_sync = "0"
            output_clk_en = 0
            output_clock_mode = "0"
            output_conn = "0"
            output_mode = "0"
            output_reset = 0
            output_sync = "0"
            ovt_hyst_trim = "0"
            ovt_needed = "0"
            ovt_slew_control = "00"
            pa_in_clock = -1
            pa_in_clock_en = -1
            pa_in_reset = -1
            pa_out_clock = -1
            pa_out_clock_en = -1
            pa_out_reset = -1
            pin_aliases = ""
            pin_mode = "I"
            por_state = 4
            port_alias_group = ""
            port_alias_required = 0
            sio_group_cnt = 0
            sio_hifreq = "00000000"
            sio_hyst = "1"
            sio_ibuf = "00000000"
            sio_info = "00"
            sio_obuf = "00000000"
            sio_refsel = "00000000"
            sio_vohsel = "00000000"
            sio_vtrip = "00000000"
            slew_rate = "0"
            spanning = 0
            sw_only = 0
            use_annotation = "0"
            vtrip = "00"
            width = 1
        }
    and contains the following IO cells:
[IoId=0]: 
Pin : Name = DATA(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => DATA(0)__PA ,
        input => Net_332 ,
        pad => DATA(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = MIDI_OUT1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => MIDI_OUT1(0)__PA ,
        input => Net_290 ,
        pad => MIDI_OUT1(0)_PAD );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = CLK(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => CLK(0)__PA ,
        input => Net_341 ,
        pad => CLK(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = \USBMIDI_1:Dp(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: True
        Interrupt mode: FALLING
        Drive mode: HI_Z_ANALOG
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: USB_D_PLUS
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => \USBMIDI_1:Dp(0)\__PA ,
        analog_term => \USBMIDI_1:Net_1000\ ,
        pad => \USBMIDI_1:Dp(0)_PAD\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = \USBMIDI_1:Dm(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: USB_D_MINUS
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \USBMIDI_1:Dm(0)\__PA ,
        analog_term => \USBMIDI_1:Net_597\ ,
        pad => \USBMIDI_1:Dm(0)_PAD\ );
    Properties:
    {
    }

ARM group 0: empty
CAN 2.0b group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \MIDI1_UART:Net_9\ ,
            dclk_0 => \MIDI1_UART:Net_9_local\ ,
            dclk_glb_1 => Net_41 ,
            dclk_1 => Net_41_local );
        Properties:
        {
        }
Comparator group 0: empty
Digital Filter Block group 0: empty
Delta-Sigma ADC group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
Segment LCD group 0: empty
LVD group 0: empty
PM group 0: empty
Analog (SC/CT) Blocks group 0: empty
SPC group 0: empty
Timer group 0: empty
USB group 0: 
    USB Block @ F(USB,0): 
    usbcell: Name =\USBMIDI_1:USB\
        PORT MAP (
            dp => \USBMIDI_1:Net_1000\ ,
            dm => \USBMIDI_1:Net_597\ ,
            sof_int => Net_291 ,
            arb_int => \USBMIDI_1:Net_1889\ ,
            usb_int => \USBMIDI_1:Net_1876\ ,
            ept_int_8 => \USBMIDI_1:ep_int_8\ ,
            ept_int_7 => \USBMIDI_1:ep_int_7\ ,
            ept_int_6 => \USBMIDI_1:ep_int_6\ ,
            ept_int_5 => \USBMIDI_1:ep_int_5\ ,
            ept_int_4 => \USBMIDI_1:ep_int_4\ ,
            ept_int_3 => \USBMIDI_1:ep_int_3\ ,
            ept_int_2 => \USBMIDI_1:ep_int_2\ ,
            ept_int_1 => \USBMIDI_1:ep_int_1\ ,
            ept_int_0 => \USBMIDI_1:ep_int_0\ ,
            ord_int => \USBMIDI_1:Net_95\ ,
            dma_req_7 => \USBMIDI_1:dma_request_7\ ,
            dma_req_6 => \USBMIDI_1:dma_request_6\ ,
            dma_req_5 => \USBMIDI_1:dma_request_5\ ,
            dma_req_4 => \USBMIDI_1:dma_request_4\ ,
            dma_req_3 => \USBMIDI_1:dma_request_3\ ,
            dma_req_2 => \USBMIDI_1:dma_request_2\ ,
            dma_req_1 => \USBMIDI_1:dma_request_1\ ,
            dma_req_0 => \USBMIDI_1:dma_request_0\ ,
            dma_termin => \USBMIDI_1:dma_terminate\ );
        Properties:
        {
            cy_registers = ""
        }
VIDAC group 0: empty
Opamp group 0: empty
CapSense Buffers group 0: empty
Vref group 0: empty
LPF group 0: empty
SAR ADC group 0: empty
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                   | 
Port | Pin | Fixed |      Type |       Drive Mode |              Name | Connections
-----+-----+-------+-----------+------------------+-------------------+-----------------------------
   0 |   5 |     * |      NONE |         CMOS_OUT |             TE(0) | In(Net_41_local)
-----+-----+-------+-----------+------------------+-------------------+-----------------------------
  12 |   3 |       |      NONE |     HI_Z_DIGITAL |       MIDI_IN1(0) | FB(Net_283)
-----+-----+-------+-----------+------------------+-------------------+-----------------------------
  15 |   0 |     * |      NONE |         CMOS_OUT |           DATA(0) | In(Net_332)
     |   1 |       |      NONE |         CMOS_OUT |      MIDI_OUT1(0) | In(Net_290)
     |   4 |     * |      NONE |         CMOS_OUT |            CLK(0) | In(Net_341)
     |   6 |       |   FALLING |      HI_Z_ANALOG | \USBMIDI_1:Dp(0)\ | Analog(\USBMIDI_1:Net_1000\)
     |   7 |       |      NONE |      HI_Z_ANALOG | \USBMIDI_1:Dm(0)\ | Analog(\USBMIDI_1:Net_597\)
----------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.005ms
Digital Placement phase: Elapsed time ==> 4s.429ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
Routing successful.
Digital Routing phase: Elapsed time ==> 5s.278ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.191ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.041ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in Accoder_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.706ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.224ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 11s.689ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 11s.690ms
API generation phase: Elapsed time ==> 1s.941ms
Dependency generation phase: Elapsed time ==> 0s.019ms
Cleanup phase: Elapsed time ==> 0s.003ms
