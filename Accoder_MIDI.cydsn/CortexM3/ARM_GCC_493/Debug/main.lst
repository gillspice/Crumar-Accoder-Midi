ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	MIDI_IDENTITY_REPLY
  19              		.section	.rodata
  20              		.align	2
  21              		.type	MIDI_IDENTITY_REPLY, %object
  22              		.size	MIDI_IDENTITY_REPLY, 14
  23              	MIDI_IDENTITY_REPLY:
  24 0000 F0       		.byte	-16
  25 0001 7E       		.byte	126
  26 0002 7F       		.byte	127
  27 0003 06       		.byte	6
  28 0004 02       		.byte	2
  29 0005 7D       		.byte	125
  30 0006 B4       		.byte	-76
  31 0007 04       		.byte	4
  32 0008 32       		.byte	50
  33 0009 D2       		.byte	-46
  34 000a 01       		.byte	1
  35 000b 00       		.byte	0
  36 000c 00       		.byte	0
  37 000d 00       		.byte	0
  38              		.global	usbActivityCounter
  39 000e 0000     		.bss
  40              		.type	usbActivityCounter, %object
  41              		.size	usbActivityCounter, 1
  42              	usbActivityCounter:
  43 0000 00       		.space	1
  44              		.global	csButtStates
  45              		.type	csButtStates, %object
  46              		.size	csButtStates, 1
  47              	csButtStates:
  48 0001 00       		.space	1
  49              		.global	csButtStatesOld
  50              		.type	csButtStatesOld, %object
  51              		.size	csButtStatesOld, 1
  52              	csButtStatesOld:
  53 0002 00       		.space	1
  54              		.global	csButtChange
  55              		.type	csButtChange, %object
  56              		.size	csButtChange, 1
  57              	csButtChange:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 2


  58 0003 00       		.space	1
  59              		.global	inqFlagsOld
  60              		.type	inqFlagsOld, %object
  61              		.size	inqFlagsOld, 1
  62              	inqFlagsOld:
  63 0004 00       		.space	1
  64              		.section	.text.SleepIsr,"ax",%progbits
  65              		.align	2
  66              		.global	SleepIsr
  67              		.thumb
  68              		.thumb_func
  69              		.type	SleepIsr, %function
  70              	SleepIsr:
  71              	.LFB63:
  72              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 1.0
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This example project demonstrates the MIDI interface device operation.  The 
   8:main.c        **** *  project enumerates as a USB Audio Device with the MIDI feature and does not 
   9:main.c        **** *  require additional drivers. The main goal of the USB MIDI interface is to 
  10:main.c        **** *  transfer and convert MIDI data between external MIDI devices that use the 
  11:main.c        **** *  UART interface, and a PC through the USB bus.			
  12:main.c        **** *   
  13:main.c        **** * Related Document:
  14:main.c        **** *  Universal Serial Bus Specification Revision 2.0 
  15:main.c        **** *  Universal Serial Bus Device Class Definition for MIDI Devices Release 1.0
  16:main.c        **** *  MIDI 1.0 Detailed Specification Document Version 4.2
  17:main.c        **** *
  18:main.c        **** ********************************************************************************
  19:main.c        **** * Copyright 2012-2015, Cypress Semiconductor Corporation. All rights reserved.
  20:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  21:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  22:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  23:main.c        **** * accompanying the software package from which you obtained this software.
  24:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  25:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  26:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  27:main.c        **** *******************************************************************************/
  28:main.c        **** 
  29:main.c        **** #include <project.h>
  30:main.c        **** 
  31:main.c        **** #define BUTT1	                (0x01u)
  32:main.c        **** #define BUTT2	                (0x02u)
  33:main.c        **** 
  34:main.c        **** #define DEVICE                  (0u)
  35:main.c        **** #define MIDI_MSG_SIZE           (4u)
  36:main.c        **** 
  37:main.c        **** /*MIDI Message Fields */
  38:main.c        **** #define MIDI_MSG_TYPE           (0u)
  39:main.c        **** #define MIDI_NOTE_NUMBER        (1u)
  40:main.c        **** #define MIDI_NOTE_VELOCITY      (2u)
  41:main.c        **** 
  42:main.c        **** /* MIDI Notes*/
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 3


  43:main.c        **** #define NOTE_72                 (72u)
  44:main.c        **** #define NOTE_76                 (76u)
  45:main.c        **** 
  46:main.c        **** /* MIDI Notes Velocity*/
  47:main.c        **** #define VOLUME_OFF              (0u)
  48:main.c        **** #define VOLUME_ON               (100u)
  49:main.c        **** 
  50:main.c        **** #define USB_SUSPEND_TIMEOUT     (2u)
  51:main.c        **** 
  52:main.c        **** /* Identity Reply message */
  53:main.c        **** const uint8 CYCODE MIDI_IDENTITY_REPLY[] = {
  54:main.c        ****     0xF0u,      /* SysEx */
  55:main.c        ****     0x7Eu,      /* Non-real time */
  56:main.c        ****     0x7Fu,      /* ID of target device (7F - "All Call") */
  57:main.c        ****     0x06u,      /* Sub-ID#1 - General Information */
  58:main.c        ****     0x02u,      /* Sub-ID#2 - Identity Reply */
  59:main.c        ****     0x7Du,      /* Manufacturer's ID: 7D - Educational Use */
  60:main.c        ****     0xB4u, 0x04u,               /* Family code */
  61:main.c        ****     0x32u, 0xD2u,               /* Model number */
  62:main.c        ****     0x01u, 0x00u, 0x00u, 0x00u, /* Version number */
  63:main.c        ****     /*0xF7         End of SysEx automatically appended */
  64:main.c        **** };
  65:main.c        **** 
  66:main.c        **** /* Need for Identity Reply message */
  67:main.c        **** extern volatile uint8 USB_MIDI1_InqFlags;
  68:main.c        **** extern volatile uint8 USB_MIDI2_InqFlags;
  69:main.c        **** 
  70:main.c        **** volatile uint8 usbActivityCounter = 0u;
  71:main.c        **** 
  72:main.c        **** uint8 csButtStates = 0u;
  73:main.c        **** uint8 csButtStatesOld = 0u;
  74:main.c        **** uint8 csButtChange = 0u;
  75:main.c        **** uint8 inqFlagsOld = 0u;
  76:main.c        **** 
  77:main.c        **** 
  78:main.c        **** /*******************************************************************************
  79:main.c        **** * Function Name: SleepIsr
  80:main.c        **** ********************************************************************************
  81:main.c        **** * Summary:
  82:main.c        **** *  The sleep interrupt-service-routine used to determine a sleep condition.
  83:main.c        **** *  The device goes into the Suspend state when there is a constant Idle 
  84:main.c        **** *  state on its upstream-facing bus-lines for more than 3.0 ms. 
  85:main.c        **** *  The device must be suspended drawing only suspend current from the 
  86:main.c        **** *  bus after no more than 10 ms of the bus inactivity on all its ports.
  87:main.c        **** *  This ISR is run each 4 ms, so after a second turn without the USB activity,  
  88:main.c        **** *  the device should be suspended.
  89:main.c        **** *
  90:main.c        **** *******************************************************************************/
  91:main.c        **** CY_ISR(SleepIsr)
  92:main.c        **** {
  73              		.loc 1 92 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 1, uses_anonymous_args = 0
  77 0000 80B5     		push	{r7, lr}
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 7, -8
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 4


  80              		.cfi_offset 14, -4
  81 0002 00AF     		add	r7, sp, #0
  82              		.cfi_def_cfa_register 7
  93:main.c        ****     /* Check USB activity */
  94:main.c        ****     if(0u != USB_CheckActivity()) 
  83              		.loc 1 94 0
  84 0004 FFF7FEFF 		bl	USB_CheckActivity
  85 0008 0346     		mov	r3, r0
  86 000a 002B     		cmp	r3, #0
  87 000c 03D0     		beq	.L2
  95:main.c        ****     {
  96:main.c        ****         usbActivityCounter = 0u;
  88              		.loc 1 96 0
  89 000e 074B     		ldr	r3, .L4
  90 0010 0022     		movs	r2, #0
  91 0012 1A70     		strb	r2, [r3]
  92 0014 06E0     		b	.L3
  93              	.L2:
  97:main.c        ****     } 
  98:main.c        ****     else 
  99:main.c        ****     {
 100:main.c        ****         usbActivityCounter++;
  94              		.loc 1 100 0
  95 0016 054B     		ldr	r3, .L4
  96 0018 1B78     		ldrb	r3, [r3]
  97 001a DBB2     		uxtb	r3, r3
  98 001c 0133     		adds	r3, r3, #1
  99 001e DAB2     		uxtb	r2, r3
 100 0020 024B     		ldr	r3, .L4
 101 0022 1A70     		strb	r2, [r3]
 102              	.L3:
 101:main.c        ****     }
 102:main.c        ****     /* Clear Pending Interrupt */
 103:main.c        ****     SleepTimer_GetStatus();
 103              		.loc 1 103 0
 104 0024 FFF7FEFF 		bl	SleepTimer_GetStatus
 104:main.c        **** }
 105              		.loc 1 104 0
 106 0028 80BD     		pop	{r7, pc}
 107              	.L5:
 108 002a 00BF     		.align	2
 109              	.L4:
 110 002c 00000000 		.word	usbActivityCounter
 111              		.cfi_endproc
 112              	.LFE63:
 113              		.size	SleepIsr, .-SleepIsr
 114              		.section	.text.main,"ax",%progbits
 115              		.align	2
 116              		.global	main
 117              		.thumb
 118              		.thumb_func
 119              		.type	main, %function
 120              	main:
 121              	.LFB64:
 105:main.c        **** 
 106:main.c        **** 
 107:main.c        **** /*******************************************************************************
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 5


 108:main.c        **** * Function Name: main
 109:main.c        **** ********************************************************************************
 110:main.c        **** * Summary:
 111:main.c        **** *       1. Starts the USBFS device and waits for enumaration.
 112:main.c        **** *
 113:main.c        **** *******************************************************************************/
 114:main.c        **** int main()
 115:main.c        **** {
 122              		.loc 1 115 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 8
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0000 80B5     		push	{r7, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 82B0     		sub	sp, sp, #8
 131              		.cfi_def_cfa_offset 16
 132 0004 00AF     		add	r7, sp, #0
 133              		.cfi_def_cfa_register 7
 116:main.c        ****     uint8 midiMsg[MIDI_MSG_SIZE];    
 117:main.c        **** 
 118:main.c        ****     /* Enable Global Interrupts */
 119:main.c        ****     CyGlobalIntEnable;
 134              		.loc 1 119 0
 135              	@ 119 "main.c" 1
 136 0006 62B6     		CPSIE   i
 137              	@ 0 "" 2
 120:main.c        **** 
 121:main.c        ****     /* Start USBFS device 0 with VDDD operation */
 122:main.c        ****     USB_Start(DEVICE, USB_DWR_VDDD_OPERATION); 
 138              		.loc 1 122 0
 139              		.thumb
 140 0008 0020     		movs	r0, #0
 141 000a 0221     		movs	r1, #2
 142 000c FFF7FEFF 		bl	USB_Start
 123:main.c        ****     
 124:main.c        ****     /*Turn on some tabs*/
 125:main.c        ****     Tabs_1_Write(0xff);
 143              		.loc 1 125 0
 144 0010 FF20     		movs	r0, #255
 145 0012 FFF7FEFF 		bl	Tabs_1_Write
 126:main.c        ****     Tabs_2_Write(0xff);
 146              		.loc 1 126 0
 147 0016 FF20     		movs	r0, #255
 148 0018 FFF7FEFF 		bl	Tabs_2_Write
 127:main.c        ****     Tabs_3_Write(0xff);
 149              		.loc 1 127 0
 150 001c FF20     		movs	r0, #255
 151 001e FFF7FEFF 		bl	Tabs_3_Write
 128:main.c        ****     Tabs_4_Write(0xff);
 152              		.loc 1 128 0
 153 0022 FF20     		movs	r0, #255
 154 0024 FFF7FEFF 		bl	Tabs_4_Write
 129:main.c        ****     
 130:main.c        ****     Chords_Bass_Notes_Write(0xff);
 155              		.loc 1 130 0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 6


 156 0028 FF20     		movs	r0, #255
 157 002a FFF7FEFF 		bl	Chords_Bass_Notes_Write
 131:main.c        ****     Chords_Notes_Write(0xff);
 158              		.loc 1 131 0
 159 002e FF20     		movs	r0, #255
 160 0030 FFF7FEFF 		bl	Chords_Notes_Write
 132:main.c        ****     Bass_Notes_Write(0xff);
 161              		.loc 1 132 0
 162 0034 FF20     		movs	r0, #255
 163 0036 FFF7FEFF 		bl	Bass_Notes_Write
 133:main.c        ****     Chorus_Speed_Write(0xff);
 164              		.loc 1 133 0
 165 003a FF20     		movs	r0, #255
 166 003c FFF7FEFF 		bl	Chorus_Speed_Write
 134:main.c        ****     Control_Reg_10_Write(0xff);
 167              		.loc 1 134 0
 168 0040 FF20     		movs	r0, #255
 169 0042 FFF7FEFF 		bl	Control_Reg_10_Write
 135:main.c        ****     Control_Reg_11_Write(0xff);
 170              		.loc 1 135 0
 171 0046 FF20     		movs	r0, #255
 172 0048 FFF7FEFF 		bl	Control_Reg_11_Write
 136:main.c        ****     
 137:main.c        ****     Keys_Notes_5_Write(0x40);
 173              		.loc 1 137 0
 174 004c 4020     		movs	r0, #64
 175 004e FFF7FEFF 		bl	Keys_Notes_5_Write
 176              	.L24:
 138:main.c        ****     
 139:main.c        ****     
 140:main.c        ****     //Keys_Notes_5_Write(0x40);
 141:main.c        **** 
 142:main.c        ****     while(1u)
 143:main.c        ****     {
 144:main.c        ****         /* Host can send double SET_INTERFACE request */
 145:main.c        ****         if(0u != USB_IsConfigurationChanged())
 177              		.loc 1 145 0
 178 0052 FFF7FEFF 		bl	USB_IsConfigurationChanged
 179 0056 0346     		mov	r3, r0
 180 0058 002B     		cmp	r3, #0
 181 005a 11D0     		beq	.L7
 146:main.c        ****         {
 147:main.c        ****             /* Initialize IN endpoints when device configured */
 148:main.c        ****             if(0u != USB_GetConfiguration())   
 182              		.loc 1 148 0
 183 005c FFF7FEFF 		bl	USB_GetConfiguration
 184 0060 0346     		mov	r3, r0
 185 0062 002B     		cmp	r3, #0
 186 0064 0AD0     		beq	.L8
 149:main.c        ****             {
 150:main.c        ****                 /* Power ON CY8CKIT-044 board */
 151:main.c        ****                 MIDI_PWR_Write(0u); 
 187              		.loc 1 151 0
 188 0066 0020     		movs	r0, #0
 189 0068 FFF7FEFF 		bl	MIDI_PWR_Write
 152:main.c        ****                 
 153:main.c        ****                 /* Start ISR to determine sleep condition */		
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 7


 154:main.c        ****                 Sleep_isr_StartEx(SleepIsr);
 190              		.loc 1 154 0
 191 006c 7048     		ldr	r0, .L25
 192 006e FFF7FEFF 		bl	Sleep_isr_StartEx
 155:main.c        ****                 
 156:main.c        ****                 /* Start SleepTimer's operation */
 157:main.c        ****                 SleepTimer_Start();
 193              		.loc 1 157 0
 194 0072 FFF7FEFF 		bl	SleepTimer_Start
 158:main.c        ****                 
 159:main.c        ****             	/* Enable output endpoint */
 160:main.c        ****                 USB_MIDI_Init();
 195              		.loc 1 160 0
 196 0076 FFF7FEFF 		bl	USB_MIDI_Init
 197 007a 01E0     		b	.L7
 198              	.L8:
 161:main.c        ****             }
 162:main.c        ****             else
 163:main.c        ****             {
 164:main.c        ****                 SleepTimer_Stop();
 199              		.loc 1 164 0
 200 007c FFF7FEFF 		bl	SleepTimer_Stop
 201              	.L7:
 165:main.c        ****             }    
 166:main.c        ****         }        
 167:main.c        ****         
 168:main.c        ****         /* Service USB MIDI when device is configured */
 169:main.c        ****         if(0u != USB_GetConfiguration())    
 202              		.loc 1 169 0
 203 0080 FFF7FEFF 		bl	USB_GetConfiguration
 204 0084 0346     		mov	r3, r0
 205 0086 002B     		cmp	r3, #0
 206 0088 00F0D180 		beq	.L9
 170:main.c        ****         {
 171:main.c        ****             /* Call this API from UART RX ISR for Auto DMA mode */
 172:main.c        ****             #if(!USB_EP_MANAGEMENT_DMA_AUTO) 
 173:main.c        ****                 USB_MIDI_IN_Service();
 207              		.loc 1 173 0
 208 008c FFF7FEFF 		bl	USB_MIDI_IN_Service
 174:main.c        ****             #endif
 175:main.c        ****             /* In Manual EP Memory Management mode OUT_EP_Service() 
 176:main.c        ****             *  may have to be called from main foreground or from OUT EP ISR
 177:main.c        ****             */
 178:main.c        ****             #if(!USB_EP_MANAGEMENT_DMA_AUTO) 
 179:main.c        ****                 USB_MIDI_OUT_Service();
 209              		.loc 1 179 0
 210 0090 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 180:main.c        ****             #endif
 181:main.c        **** 
 182:main.c        ****             /* Sending Identity Reply Universal System Exclusive message 
 183:main.c        ****              * back to computer */
 184:main.c        ****             if(0u != (USB_MIDI1_InqFlags & USB_INQ_IDENTITY_REQ_FLAG))
 211              		.loc 1 184 0
 212 0094 674B     		ldr	r3, .L25+4
 213 0096 1B78     		ldrb	r3, [r3]
 214 0098 DBB2     		uxtb	r3, r3
 215 009a 03F00203 		and	r3, r3, #2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 8


 216 009e 002B     		cmp	r3, #0
 217 00a0 0CD0     		beq	.L10
 185:main.c        ****             {
 186:main.c        ****                 USB_PutUsbMidiIn(sizeof(MIDI_IDENTITY_REPLY), \
 218              		.loc 1 186 0
 219 00a2 0E20     		movs	r0, #14
 220 00a4 6449     		ldr	r1, .L25+8
 221 00a6 0022     		movs	r2, #0
 222 00a8 FFF7FEFF 		bl	USB_PutUsbMidiIn
 187:main.c        ****                             (uint8 *)MIDI_IDENTITY_REPLY, USB_MIDI_CABLE_00);
 188:main.c        ****                 USB_MIDI1_InqFlags &= ~USB_INQ_IDENTITY_REQ_FLAG;
 223              		.loc 1 188 0
 224 00ac 614B     		ldr	r3, .L25+4
 225 00ae 1B78     		ldrb	r3, [r3]
 226 00b0 DBB2     		uxtb	r3, r3
 227 00b2 23F00203 		bic	r3, r3, #2
 228 00b6 DAB2     		uxtb	r2, r3
 229 00b8 5E4B     		ldr	r3, .L25+4
 230 00ba 1A70     		strb	r2, [r3]
 231              	.L10:
 189:main.c        ****             }
 190:main.c        ****             #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 191:main.c        ****                 if(0u != (USB_MIDI2_InqFlags & USB_INQ_IDENTITY_REQ_FLAG))
 232              		.loc 1 191 0
 233 00bc 5F4B     		ldr	r3, .L25+12
 234 00be 1B78     		ldrb	r3, [r3]
 235 00c0 DBB2     		uxtb	r3, r3
 236 00c2 03F00203 		and	r3, r3, #2
 237 00c6 002B     		cmp	r3, #0
 238 00c8 0CD0     		beq	.L11
 192:main.c        ****                 {
 193:main.c        ****                     USB_PutUsbMidiIn(sizeof(MIDI_IDENTITY_REPLY), \
 239              		.loc 1 193 0
 240 00ca 0E20     		movs	r0, #14
 241 00cc 5A49     		ldr	r1, .L25+8
 242 00ce 1022     		movs	r2, #16
 243 00d0 FFF7FEFF 		bl	USB_PutUsbMidiIn
 194:main.c        ****                             (uint8 *)MIDI_IDENTITY_REPLY, USB_MIDI_CABLE_01);
 195:main.c        ****                     USB_MIDI2_InqFlags &= ~USB_INQ_IDENTITY_REQ_FLAG;
 244              		.loc 1 195 0
 245 00d4 594B     		ldr	r3, .L25+12
 246 00d6 1B78     		ldrb	r3, [r3]
 247 00d8 DBB2     		uxtb	r3, r3
 248 00da 23F00203 		bic	r3, r3, #2
 249 00de DAB2     		uxtb	r2, r3
 250 00e0 564B     		ldr	r3, .L25+12
 251 00e2 1A70     		strb	r2, [r3]
 252              	.L11:
 196:main.c        ****                 }
 197:main.c        ****             #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 198:main.c        ****             
 199:main.c        ****             /* Service Keys */
 200:main.c        ****     		if (0u == SW1_Read()) 
 253              		.loc 1 200 0
 254 00e4 FFF7FEFF 		bl	SW1_Read
 255 00e8 0346     		mov	r3, r0
 256 00ea 002B     		cmp	r3, #0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 9


 257 00ec 07D1     		bne	.L12
 201:main.c        ****             {
 202:main.c        ****                 csButtStates |= BUTT1;
 258              		.loc 1 202 0
 259 00ee 544B     		ldr	r3, .L25+16
 260 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 261 00f2 43F00103 		orr	r3, r3, #1
 262 00f6 DAB2     		uxtb	r2, r3
 263 00f8 514B     		ldr	r3, .L25+16
 264 00fa 1A70     		strb	r2, [r3]
 265 00fc 06E0     		b	.L13
 266              	.L12:
 203:main.c        ****             }
 204:main.c        ****             else
 205:main.c        ****             {
 206:main.c        ****                 csButtStates &= ~BUTT1;
 267              		.loc 1 206 0
 268 00fe 504B     		ldr	r3, .L25+16
 269 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 0102 23F00103 		bic	r3, r3, #1
 271 0106 DAB2     		uxtb	r2, r3
 272 0108 4D4B     		ldr	r3, .L25+16
 273 010a 1A70     		strb	r2, [r3]
 274              	.L13:
 207:main.c        ****             }
 208:main.c        ****     		if (0u == SW2_Read()) 
 275              		.loc 1 208 0
 276 010c FFF7FEFF 		bl	SW2_Read
 277 0110 0346     		mov	r3, r0
 278 0112 002B     		cmp	r3, #0
 279 0114 07D1     		bne	.L14
 209:main.c        ****             {
 210:main.c        ****                 csButtStates |= BUTT2;
 280              		.loc 1 210 0
 281 0116 4A4B     		ldr	r3, .L25+16
 282 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 283 011a 43F00203 		orr	r3, r3, #2
 284 011e DAB2     		uxtb	r2, r3
 285 0120 474B     		ldr	r3, .L25+16
 286 0122 1A70     		strb	r2, [r3]
 287 0124 06E0     		b	.L15
 288              	.L14:
 211:main.c        ****             }
 212:main.c        ****             else
 213:main.c        ****             {
 214:main.c        ****                 csButtStates &= ~BUTT2;
 289              		.loc 1 214 0
 290 0126 464B     		ldr	r3, .L25+16
 291 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 292 012a 23F00203 		bic	r3, r3, #2
 293 012e DAB2     		uxtb	r2, r3
 294 0130 434B     		ldr	r3, .L25+16
 295 0132 1A70     		strb	r2, [r3]
 296              	.L15:
 215:main.c        ****             }
 216:main.c        ****             /* Process any button change */
 217:main.c        ****     		if (0u != (csButtChange = csButtStates ^ csButtStatesOld)) 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 10


 297              		.loc 1 217 0
 298 0134 424B     		ldr	r3, .L25+16
 299 0136 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 300 0138 424B     		ldr	r3, .L25+20
 301 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302 013c 5340     		eors	r3, r3, r2
 303 013e DAB2     		uxtb	r2, r3
 304 0140 414B     		ldr	r3, .L25+24
 305 0142 1A70     		strb	r2, [r3]
 306 0144 404B     		ldr	r3, .L25+24
 307 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 308 0148 002B     		cmp	r3, #0
 309 014a 4CD0     		beq	.L16
 218:main.c        ****             {
 219:main.c        ****     			csButtStatesOld = csButtStates;
 310              		.loc 1 219 0
 311 014c 3C4B     		ldr	r3, .L25+16
 312 014e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 313 0150 3C4B     		ldr	r3, .L25+20
 314 0152 1A70     		strb	r2, [r3]
 220:main.c        **** 
 221:main.c        ****     			/* All buttons are mapped to Note-On/Off messages */
 222:main.c        ****     			midiMsg[MIDI_MSG_TYPE] = USB_MIDI_NOTE_ON;
 315              		.loc 1 222 0
 316 0154 9023     		movs	r3, #144
 317 0156 3B71     		strb	r3, [r7, #4]
 223:main.c        ****     			
 224:main.c        ****     			/* Button 1 */
 225:main.c        ****     			if (0u != (csButtChange & BUTT1)) 
 318              		.loc 1 225 0
 319 0158 3B4B     		ldr	r3, .L25+24
 320 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 321 015c 03F00103 		and	r3, r3, #1
 322 0160 002B     		cmp	r3, #0
 323 0162 12D0     		beq	.L17
 226:main.c        ****                 {
 227:main.c        ****     				/* Button determines note number */			
 228:main.c        ****     				midiMsg[MIDI_NOTE_NUMBER] = NOTE_72;
 324              		.loc 1 228 0
 325 0164 4823     		movs	r3, #72
 326 0166 7B71     		strb	r3, [r7, #5]
 229:main.c        ****     				if (0u != (csButtStates & BUTT1))
 327              		.loc 1 229 0
 328 0168 354B     		ldr	r3, .L25+16
 329 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 330 016c 03F00103 		and	r3, r3, #1
 331 0170 002B     		cmp	r3, #0
 332 0172 02D0     		beq	.L18
 230:main.c        ****                     {
 231:main.c        ****                         /* Note On */
 232:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_ON;		
 333              		.loc 1 232 0
 334 0174 6423     		movs	r3, #100
 335 0176 BB71     		strb	r3, [r7, #6]
 336 0178 01E0     		b	.L19
 337              	.L18:
 233:main.c        ****                     }
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 11


 234:main.c        ****     				else
 235:main.c        ****                     {
 236:main.c        ****                         /* Note Off */
 237:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_OFF;			
 338              		.loc 1 237 0
 339 017a 0023     		movs	r3, #0
 340 017c BB71     		strb	r3, [r7, #6]
 341              	.L19:
 238:main.c        ****                     }    
 239:main.c        ****         			/* Put MIDI Note-On/Off message into input endpoint */
 240:main.c        ****                     USB_PutUsbMidiIn(USB_3BYTE_COMMON, midiMsg, USB_MIDI_CABLE_00);
 342              		.loc 1 240 0
 343 017e 3B1D     		adds	r3, r7, #4
 344 0180 0320     		movs	r0, #3
 345 0182 1946     		mov	r1, r3
 346 0184 0022     		movs	r2, #0
 347 0186 FFF7FEFF 		bl	USB_PutUsbMidiIn
 348              	.L17:
 241:main.c        ****     			}
 242:main.c        **** 
 243:main.c        ****     			/* Button 2 */
 244:main.c        ****     			if (0u != (csButtChange & BUTT2))
 349              		.loc 1 244 0
 350 018a 2F4B     		ldr	r3, .L25+24
 351 018c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 352 018e 03F00203 		and	r3, r3, #2
 353 0192 002B     		cmp	r3, #0
 354 0194 27D0     		beq	.L16
 245:main.c        ****                 {
 246:main.c        ****     				/* Button determines note number */			
 247:main.c        ****     				midiMsg[MIDI_NOTE_NUMBER] = NOTE_76;
 355              		.loc 1 247 0
 356 0196 4C23     		movs	r3, #76
 357 0198 7B71     		strb	r3, [r7, #5]
 248:main.c        ****     				if (0u != (csButtStates & BUTT2))
 358              		.loc 1 248 0
 359 019a 294B     		ldr	r3, .L25+16
 360 019c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 361 019e 03F00203 		and	r3, r3, #2
 362 01a2 002B     		cmp	r3, #0
 363 01a4 02D0     		beq	.L20
 249:main.c        ****                     {
 250:main.c        ****                         /* Note On */
 251:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_ON;  
 364              		.loc 1 251 0
 365 01a6 6423     		movs	r3, #100
 366 01a8 BB71     		strb	r3, [r7, #6]
 367 01aa 01E0     		b	.L21
 368              	.L20:
 252:main.c        ****                     }
 253:main.c        ****     				else
 254:main.c        ****                     {
 255:main.c        ****                         /* Note Off */
 256:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_OFF; 
 369              		.loc 1 256 0
 370 01ac 0023     		movs	r3, #0
 371 01ae BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 12


 372              	.L21:
 257:main.c        ****                     }    
 258:main.c        ****         			/* Put MIDI Note-On/Off message into input endpoint */
 259:main.c        ****     				USB_PutUsbMidiIn(USB_3BYTE_COMMON, midiMsg, USB_MIDI_CABLE_00);
 373              		.loc 1 259 0
 374 01b0 3B1D     		adds	r3, r7, #4
 375 01b2 0320     		movs	r0, #3
 376 01b4 1946     		mov	r1, r3
 377 01b6 0022     		movs	r2, #0
 378 01b8 FFF7FEFF 		bl	USB_PutUsbMidiIn
 260:main.c        ****                     /* Second Note message */
 261:main.c        ****                     midiMsg[MIDI_MSG_TYPE] = USB_MIDI_NOTE_ON;
 379              		.loc 1 261 0
 380 01bc 9023     		movs	r3, #144
 381 01be 3B71     		strb	r3, [r7, #4]
 262:main.c        ****                 	midiMsg[MIDI_NOTE_NUMBER] = NOTE_72;
 382              		.loc 1 262 0
 383 01c0 4823     		movs	r3, #72
 384 01c2 7B71     		strb	r3, [r7, #5]
 263:main.c        ****                     if (0u != (csButtStates & BUTT2))
 385              		.loc 1 263 0
 386 01c4 1E4B     		ldr	r3, .L25+16
 387 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 388 01c8 03F00203 		and	r3, r3, #2
 389 01cc 002B     		cmp	r3, #0
 390 01ce 02D0     		beq	.L22
 264:main.c        ****                     {
 265:main.c        ****                         /* Note On */
 266:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_ON;		    
 391              		.loc 1 266 0
 392 01d0 6423     		movs	r3, #100
 393 01d2 BB71     		strb	r3, [r7, #6]
 394 01d4 01E0     		b	.L23
 395              	.L22:
 267:main.c        ****                     }
 268:main.c        ****     				else
 269:main.c        ****                     {
 270:main.c        ****                         /* Note Off */
 271:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_OFF;			
 396              		.loc 1 271 0
 397 01d6 0023     		movs	r3, #0
 398 01d8 BB71     		strb	r3, [r7, #6]
 399              	.L23:
 272:main.c        ****                     }    
 273:main.c        ****         			/* Put MIDI Note-On/Off message into input endpoint */
 274:main.c        ****                     USB_PutUsbMidiIn(USB_3BYTE_COMMON, midiMsg, USB_MIDI_CABLE_00);
 400              		.loc 1 274 0
 401 01da 3B1D     		adds	r3, r7, #4
 402 01dc 0320     		movs	r0, #3
 403 01de 1946     		mov	r1, r3
 404 01e0 0022     		movs	r2, #0
 405 01e2 FFF7FEFF 		bl	USB_PutUsbMidiIn
 406              	.L16:
 275:main.c        ****     			}
 276:main.c        ****                 #if(USB_EP_MANAGEMENT_DMA_AUTO) 
 277:main.c        ****                    #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 278:main.c        ****                         MIDI1_UART_DisableRxInt();
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 13


 279:main.c        ****                         #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 280:main.c        ****                             MIDI2_UART_DisableRxInt();
 281:main.c        ****                         #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 282:main.c        ****                     #endif /* End USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF */            
 283:main.c        ****                     USB_MIDI_IN_Service();
 284:main.c        ****                     #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 285:main.c        ****                         MIDI1_UART_EnableRxInt();
 286:main.c        ****                         #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 287:main.c        ****                             MIDI2_UART_EnableRxInt();
 288:main.c        ****                         #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 289:main.c        ****                     #endif /* End USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF */                
 290:main.c        ****                 #endif
 291:main.c        ****     		}
 292:main.c        ****         
 293:main.c        ****             /* Check if host requested USB Suspend */
 294:main.c        ****             if( usbActivityCounter >= USB_SUSPEND_TIMEOUT ) 
 407              		.loc 1 294 0
 408 01e6 194B     		ldr	r3, .L25+28
 409 01e8 1B78     		ldrb	r3, [r3]
 410 01ea DBB2     		uxtb	r3, r3
 411 01ec 012B     		cmp	r3, #1
 412 01ee 1ED9     		bls	.L9
 295:main.c        ****             {
 296:main.c        ****                 MIDI1_UART_Sleep();
 413              		.loc 1 296 0
 414 01f0 FFF7FEFF 		bl	MIDI1_UART_Sleep
 297:main.c        ****                 MIDI2_UART_Sleep();
 415              		.loc 1 297 0
 416 01f4 FFF7FEFF 		bl	MIDI2_UART_Sleep
 298:main.c        ****                 
 299:main.c        ****                 /* Power OFF CY8CKIT-044 board */
 300:main.c        ****                 MIDI_PWR_Write(1u);     
 417              		.loc 1 300 0
 418 01f8 0120     		movs	r0, #1
 419 01fa FFF7FEFF 		bl	MIDI_PWR_Write
 301:main.c        ****                 
 302:main.c        ****                 /***************************************************************
 303:main.c        ****                 * Disable USBFS block and set DP Interrupt for wake-up 
 304:main.c        ****                 * from sleep mode. 
 305:main.c        ****                 ***************************************************************/
 306:main.c        ****                 USB_Suspend(); 
 420              		.loc 1 306 0
 421 01fe FFF7FEFF 		bl	USB_Suspend
 307:main.c        ****                 /* Prepares system clocks for sleep mode */
 308:main.c        ****                 CyPmSaveClocks();
 422              		.loc 1 308 0
 423 0202 FFF7FEFF 		bl	CyPmSaveClocks
 309:main.c        ****                 /***************************************************************
 310:main.c        ****                 * Switch to the Sleep Mode for the PSoC 3 or PSoC 5LP devices:
 311:main.c        ****                 *  - PM_SLEEP_TIME_NONE: wakeup time is defined by PICU source
 312:main.c        ****                 *  - PM_SLEEP_SRC_PICU: PICU wakeup source 
 313:main.c        ****                 ***************************************************************/
 314:main.c        ****                 CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_PICU);
 424              		.loc 1 314 0
 425 0206 0020     		movs	r0, #0
 426 0208 4021     		movs	r1, #64
 427 020a FFF7FEFF 		bl	CyPmSleep
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 14


 315:main.c        ****                 /* Restore clock configuration */
 316:main.c        ****                 CyPmRestoreClocks();
 428              		.loc 1 316 0
 429 020e FFF7FEFF 		bl	CyPmRestoreClocks
 317:main.c        ****                 /* Enable USBFS block after power-down mode */
 318:main.c        ****                 USB_Resume();
 430              		.loc 1 318 0
 431 0212 FFF7FEFF 		bl	USB_Resume
 319:main.c        ****                 
 320:main.c        ****                 /* Enable output endpoint */
 321:main.c        ****                 USB_MIDI_Init();
 432              		.loc 1 321 0
 433 0216 FFF7FEFF 		bl	USB_MIDI_Init
 322:main.c        ****                 
 323:main.c        ****                 /* Power ON CY8CKIT-044 board */
 324:main.c        ****                 MIDI_PWR_Write(0u);
 434              		.loc 1 324 0
 435 021a 0020     		movs	r0, #0
 436 021c FFF7FEFF 		bl	MIDI_PWR_Write
 325:main.c        ****                 
 326:main.c        ****                 MIDI1_UART_Wakeup();
 437              		.loc 1 326 0
 438 0220 FFF7FEFF 		bl	MIDI1_UART_Wakeup
 327:main.c        ****                 MIDI2_UART_Wakeup();
 439              		.loc 1 327 0
 440 0224 FFF7FEFF 		bl	MIDI2_UART_Wakeup
 328:main.c        ****                 usbActivityCounter = 0u; /* Re-init USB Activity Counter*/
 441              		.loc 1 328 0
 442 0228 084B     		ldr	r3, .L25+28
 443 022a 0022     		movs	r2, #0
 444 022c 1A70     		strb	r2, [r3]
 445              	.L9:
 329:main.c        ****             }
 330:main.c        ****         }
 331:main.c        ****     }
 446              		.loc 1 331 0
 447 022e 10E7     		b	.L24
 448              	.L26:
 449              		.align	2
 450              	.L25:
 451 0230 00000000 		.word	SleepIsr
 452 0234 00000000 		.word	USB_MIDI1_InqFlags
 453 0238 00000000 		.word	MIDI_IDENTITY_REPLY
 454 023c 00000000 		.word	USB_MIDI2_InqFlags
 455 0240 00000000 		.word	csButtStates
 456 0244 00000000 		.word	csButtStatesOld
 457 0248 00000000 		.word	csButtChange
 458 024c 00000000 		.word	usbActivityCounter
 459              		.cfi_endproc
 460              	.LFE64:
 461              		.size	main, .-main
 462              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 463              		.align	2
 464              		.global	USB_callbackLocalMidiEvent
 465              		.thumb
 466              		.thumb_func
 467              		.type	USB_callbackLocalMidiEvent, %function
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 15


 468              	USB_callbackLocalMidiEvent:
 469              	.LFB65:
 332:main.c        **** }
 333:main.c        **** 
 334:main.c        **** 
 335:main.c        **** /*******************************************************************************
 336:main.c        **** * Function Name: USB_callbackLocalMidiEvent
 337:main.c        **** ********************************************************************************
 338:main.c        **** * Summary: Local processing of the USB MIDI out-events.
 339:main.c        **** *
 340:main.c        **** *******************************************************************************/
 341:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
 342:main.c        **** {
 470              		.loc 1 342 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 8
 473              		@ frame_needed = 1, uses_anonymous_args = 0
 474 0000 80B5     		push	{r7, lr}
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 7, -8
 477              		.cfi_offset 14, -4
 478 0002 82B0     		sub	sp, sp, #8
 479              		.cfi_def_cfa_offset 16
 480 0004 00AF     		add	r7, sp, #0
 481              		.cfi_def_cfa_register 7
 482 0006 0346     		mov	r3, r0
 483 0008 3960     		str	r1, [r7]
 484 000a FB71     		strb	r3, [r7, #7]
 343:main.c        ****     /* Support General System On/Off Message. */
 344:main.c        ****     if((0u == (USB_MIDI1_InqFlags & USB_INQ_SYSEX_FLAG)) \
 485              		.loc 1 344 0
 486 000c B74B     		ldr	r3, .L82
 487 000e 1B78     		ldrb	r3, [r3]
 488 0010 DBB2     		uxtb	r3, r3
 489 0012 03F00103 		and	r3, r3, #1
 490 0016 002B     		cmp	r3, #0
 491 0018 1AD1     		bne	.L28
 345:main.c        ****             && (0u != (inqFlagsOld & USB_INQ_SYSEX_FLAG)))
 492              		.loc 1 345 0
 493 001a B54B     		ldr	r3, .L82+4
 494 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 495 001e 03F00103 		and	r3, r3, #1
 496 0022 002B     		cmp	r3, #0
 497 0024 14D0     		beq	.L28
 346:main.c        ****     {
 347:main.c        ****         if(midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX_GEN_MESSAGE)
 498              		.loc 1 347 0
 499 0026 3B68     		ldr	r3, [r7]
 500 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 501 002a 092B     		cmp	r3, #9
 502 002c 10D1     		bne	.L28
 348:main.c        ****         {
 349:main.c        ****             if(midiMsg[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_SYSTEM_ON)
 503              		.loc 1 349 0
 504 002e 3B68     		ldr	r3, [r7]
 505 0030 0133     		adds	r3, r3, #1
 506 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 16


 507 0034 012B     		cmp	r3, #1
 508 0036 03D1     		bne	.L29
 350:main.c        ****             {
 351:main.c        ****                 MIDI_PWR_Write(0u); /* Power ON */
 509              		.loc 1 351 0
 510 0038 0020     		movs	r0, #0
 511 003a FFF7FEFF 		bl	MIDI_PWR_Write
 512 003e 07E0     		b	.L28
 513              	.L29:
 352:main.c        ****             }
 353:main.c        ****             else if(midiMsg[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_SYSTEM_OFF)
 514              		.loc 1 353 0
 515 0040 3B68     		ldr	r3, [r7]
 516 0042 0133     		adds	r3, r3, #1
 517 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 518 0046 022B     		cmp	r3, #2
 519 0048 02D1     		bne	.L28
 354:main.c        ****             {
 355:main.c        ****                 MIDI_PWR_Write(1u); /* Power OFF */
 520              		.loc 1 355 0
 521 004a 0120     		movs	r0, #1
 522 004c FFF7FEFF 		bl	MIDI_PWR_Write
 523              	.L28:
 356:main.c        ****             }
 357:main.c        ****         }
 358:main.c        ****     }
 359:main.c        ****     switch (midiMsg[USB_EVENT_BYTE0])
 524              		.loc 1 359 0
 525 0050 3B68     		ldr	r3, [r7]
 526 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 527 0054 902B     		cmp	r3, #144
 528 0056 06D0     		beq	.L31
 529 0058 B02B     		cmp	r3, #176
 530 005a 00F06582 		beq	.L32
 531 005e 802B     		cmp	r3, #128
 532 0060 00F0C481 		beq	.L33
 533 0064 2DE3     		b	.L30
 534              	.L31:
 360:main.c        ****     //if(midiMsg[USB_EVENT_BYTE0] == USB_MIDI_NOTE_ON)
 361:main.c        ****     {
 362:main.c        ****     case USB_MIDI_NOTE_ON:
 363:main.c        ****         if(midiMsg[USB_EVENT_BYTE2] == 0x00)  //Note On with velocity 0 should be treated like note
 535              		.loc 1 363 0
 536 0066 3B68     		ldr	r3, [r7]
 537 0068 0233     		adds	r3, r3, #2
 538 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 539 006c 002B     		cmp	r3, #0
 540 006e 40F0E580 		bne	.L34
 364:main.c        ****         {
 365:main.c        ****         switch (midiMsg[USB_EVENT_BYTE1]/8)
 541              		.loc 1 365 0
 542 0072 3B68     		ldr	r3, [r7]
 543 0074 0133     		adds	r3, r3, #1
 544 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 545 0078 DB08     		lsrs	r3, r3, #3
 546 007a DBB2     		uxtb	r3, r3
 547 007c 082B     		cmp	r3, #8
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 17


 548 007e 00F2D980 		bhi	.L35
 549 0082 01A2     		adr	r2, .L37
 550 0084 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 551              		.p2align 2
 552              	.L37:
 553 0088 AD000000 		.word	.L36+1
 554 008c D5000000 		.word	.L38+1
 555 0090 01010000 		.word	.L39+1
 556 0094 2D010000 		.word	.L40+1
 557 0098 59010000 		.word	.L41+1
 558 009c 85010000 		.word	.L42+1
 559 00a0 B1010000 		.word	.L43+1
 560 00a4 DD010000 		.word	.L44+1
 561 00a8 09020000 		.word	.L45+1
 562              		.p2align 1
 563              	.L36:
 366:main.c        ****             {
 367:main.c        ****                 case 0: 
 368:main.c        ****                 
 369:main.c        ****                    Keys_Notes_1_Write(Keys_Notes_1_Read() & ~(0x01 << midiMsg[USB_EVENT_BYTE1]));
 564              		.loc 1 369 0
 565 00ac FFF7FEFF 		bl	Keys_Notes_1_Read
 566 00b0 0346     		mov	r3, r0
 567 00b2 DAB2     		uxtb	r2, r3
 568 00b4 3B68     		ldr	r3, [r7]
 569 00b6 0133     		adds	r3, r3, #1
 570 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 571 00ba 1946     		mov	r1, r3
 572 00bc 0123     		movs	r3, #1
 573 00be 8B40     		lsls	r3, r3, r1
 574 00c0 DBB2     		uxtb	r3, r3
 575 00c2 DB43     		mvns	r3, r3
 576 00c4 DBB2     		uxtb	r3, r3
 577 00c6 1340     		ands	r3, r3, r2
 578 00c8 DBB2     		uxtb	r3, r3
 579 00ca DBB2     		uxtb	r3, r3
 580 00cc 1846     		mov	r0, r3
 581 00ce FFF7FEFF 		bl	Keys_Notes_1_Write
 370:main.c        ****                    //Keys_Notes_4_Write(0x40);
 371:main.c        ****                     break;
 582              		.loc 1 371 0
 583 00d2 AFE0     		b	.L35
 584              	.L38:
 372:main.c        ****                 
 373:main.c        ****                 case 1:
 374:main.c        ****                 
 375:main.c        ****                    Keys_Notes_2_Write(Keys_Notes_2_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-8))
 585              		.loc 1 375 0
 586 00d4 FFF7FEFF 		bl	Keys_Notes_2_Read
 587 00d8 0346     		mov	r3, r0
 588 00da D9B2     		uxtb	r1, r3
 589 00dc 3B68     		ldr	r3, [r7]
 590 00de 0133     		adds	r3, r3, #1
 591 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 592 00e2 083B     		subs	r3, r3, #8
 593 00e4 0122     		movs	r2, #1
 594 00e6 02FA03F3 		lsl	r3, r2, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 18


 595 00ea DBB2     		uxtb	r3, r3
 596 00ec DB43     		mvns	r3, r3
 597 00ee DBB2     		uxtb	r3, r3
 598 00f0 0A46     		mov	r2, r1
 599 00f2 1340     		ands	r3, r3, r2
 600 00f4 DBB2     		uxtb	r3, r3
 601 00f6 DBB2     		uxtb	r3, r3
 602 00f8 1846     		mov	r0, r3
 603 00fa FFF7FEFF 		bl	Keys_Notes_2_Write
 376:main.c        ****                    // Keys_Notes_4_Write(0x02);
 377:main.c        ****                     break;
 604              		.loc 1 377 0
 605 00fe 99E0     		b	.L35
 606              	.L39:
 378:main.c        ****                 
 379:main.c        ****                 case 2:
 380:main.c        ****                 
 381:main.c        ****                    Keys_Notes_3_Write(Keys_Notes_3_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-16)
 607              		.loc 1 381 0
 608 0100 FFF7FEFF 		bl	Keys_Notes_3_Read
 609 0104 0346     		mov	r3, r0
 610 0106 D9B2     		uxtb	r1, r3
 611 0108 3B68     		ldr	r3, [r7]
 612 010a 0133     		adds	r3, r3, #1
 613 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 614 010e 103B     		subs	r3, r3, #16
 615 0110 0122     		movs	r2, #1
 616 0112 02FA03F3 		lsl	r3, r2, r3
 617 0116 DBB2     		uxtb	r3, r3
 618 0118 DB43     		mvns	r3, r3
 619 011a DBB2     		uxtb	r3, r3
 620 011c 0A46     		mov	r2, r1
 621 011e 1340     		ands	r3, r3, r2
 622 0120 DBB2     		uxtb	r3, r3
 623 0122 DBB2     		uxtb	r3, r3
 624 0124 1846     		mov	r0, r3
 625 0126 FFF7FEFF 		bl	Keys_Notes_3_Write
 382:main.c        ****                    // Keys_Notes_4_Write(0x04);
 383:main.c        ****                     break;
 626              		.loc 1 383 0
 627 012a 83E0     		b	.L35
 628              	.L40:
 384:main.c        ****                 
 385:main.c        ****                 case 3:
 386:main.c        ****                 
 387:main.c        ****                    Keys_Notes_4_Write(Keys_Notes_4_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-24)
 629              		.loc 1 387 0
 630 012c FFF7FEFF 		bl	Keys_Notes_4_Read
 631 0130 0346     		mov	r3, r0
 632 0132 D9B2     		uxtb	r1, r3
 633 0134 3B68     		ldr	r3, [r7]
 634 0136 0133     		adds	r3, r3, #1
 635 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 636 013a 183B     		subs	r3, r3, #24
 637 013c 0122     		movs	r2, #1
 638 013e 02FA03F3 		lsl	r3, r2, r3
 639 0142 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 19


 640 0144 DB43     		mvns	r3, r3
 641 0146 DBB2     		uxtb	r3, r3
 642 0148 0A46     		mov	r2, r1
 643 014a 1340     		ands	r3, r3, r2
 644 014c DBB2     		uxtb	r3, r3
 645 014e DBB2     		uxtb	r3, r3
 646 0150 1846     		mov	r0, r3
 647 0152 FFF7FEFF 		bl	Keys_Notes_4_Write
 388:main.c        ****                   //  Keys_Notes_4_Write(0x08);
 389:main.c        ****                     break;
 648              		.loc 1 389 0
 649 0156 6DE0     		b	.L35
 650              	.L41:
 390:main.c        ****                 
 391:main.c        ****                 case 4:
 392:main.c        ****                 
 393:main.c        ****                    Keys_Notes_5_Write(Keys_Notes_5_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-32)
 651              		.loc 1 393 0
 652 0158 FFF7FEFF 		bl	Keys_Notes_5_Read
 653 015c 0346     		mov	r3, r0
 654 015e D9B2     		uxtb	r1, r3
 655 0160 3B68     		ldr	r3, [r7]
 656 0162 0133     		adds	r3, r3, #1
 657 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 658 0166 203B     		subs	r3, r3, #32
 659 0168 0122     		movs	r2, #1
 660 016a 02FA03F3 		lsl	r3, r2, r3
 661 016e DBB2     		uxtb	r3, r3
 662 0170 DB43     		mvns	r3, r3
 663 0172 DBB2     		uxtb	r3, r3
 664 0174 0A46     		mov	r2, r1
 665 0176 1340     		ands	r3, r3, r2
 666 0178 DBB2     		uxtb	r3, r3
 667 017a DBB2     		uxtb	r3, r3
 668 017c 1846     		mov	r0, r3
 669 017e FFF7FEFF 		bl	Keys_Notes_5_Write
 394:main.c        ****                  //   Keys_Notes_4_Write(0x10);
 395:main.c        ****                     break;
 670              		.loc 1 395 0
 671 0182 57E0     		b	.L35
 672              	.L42:
 396:main.c        ****                                 
 397:main.c        ****                 case 5:
 398:main.c        ****                 
 399:main.c        ****                    Keys_Notes_6_Write(Keys_Notes_6_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-40)
 673              		.loc 1 399 0
 674 0184 FFF7FEFF 		bl	Keys_Notes_6_Read
 675 0188 0346     		mov	r3, r0
 676 018a D9B2     		uxtb	r1, r3
 677 018c 3B68     		ldr	r3, [r7]
 678 018e 0133     		adds	r3, r3, #1
 679 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 680 0192 283B     		subs	r3, r3, #40
 681 0194 0122     		movs	r2, #1
 682 0196 02FA03F3 		lsl	r3, r2, r3
 683 019a DBB2     		uxtb	r3, r3
 684 019c DB43     		mvns	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 20


 685 019e DBB2     		uxtb	r3, r3
 686 01a0 0A46     		mov	r2, r1
 687 01a2 1340     		ands	r3, r3, r2
 688 01a4 DBB2     		uxtb	r3, r3
 689 01a6 DBB2     		uxtb	r3, r3
 690 01a8 1846     		mov	r0, r3
 691 01aa FFF7FEFF 		bl	Keys_Notes_6_Write
 400:main.c        ****                    break;     
 692              		.loc 1 400 0
 693 01ae 41E0     		b	.L35
 694              	.L43:
 401:main.c        ****                 case 6:
 402:main.c        ****                 
 403:main.c        ****                    Chords_Notes_Write(Chords_Notes_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-48)
 695              		.loc 1 403 0
 696 01b0 FFF7FEFF 		bl	Chords_Notes_Read
 697 01b4 0346     		mov	r3, r0
 698 01b6 D9B2     		uxtb	r1, r3
 699 01b8 3B68     		ldr	r3, [r7]
 700 01ba 0133     		adds	r3, r3, #1
 701 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 702 01be 303B     		subs	r3, r3, #48
 703 01c0 0122     		movs	r2, #1
 704 01c2 02FA03F3 		lsl	r3, r2, r3
 705 01c6 DBB2     		uxtb	r3, r3
 706 01c8 DB43     		mvns	r3, r3
 707 01ca DBB2     		uxtb	r3, r3
 708 01cc 0A46     		mov	r2, r1
 709 01ce 1340     		ands	r3, r3, r2
 710 01d0 DBB2     		uxtb	r3, r3
 711 01d2 DBB2     		uxtb	r3, r3
 712 01d4 1846     		mov	r0, r3
 713 01d6 FFF7FEFF 		bl	Chords_Notes_Write
 404:main.c        ****                    break;    
 714              		.loc 1 404 0
 715 01da 2BE0     		b	.L35
 716              	.L44:
 405:main.c        ****                 case 7:
 406:main.c        ****                 
 407:main.c        ****                    Chords_Bass_Notes_Write(Chords_Bass_Notes_Read() & ~(0x01 << (midiMsg[USB_EVENT_
 717              		.loc 1 407 0
 718 01dc FFF7FEFF 		bl	Chords_Bass_Notes_Read
 719 01e0 0346     		mov	r3, r0
 720 01e2 D9B2     		uxtb	r1, r3
 721 01e4 3B68     		ldr	r3, [r7]
 722 01e6 0133     		adds	r3, r3, #1
 723 01e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 724 01ea 383B     		subs	r3, r3, #56
 725 01ec 0122     		movs	r2, #1
 726 01ee 02FA03F3 		lsl	r3, r2, r3
 727 01f2 DBB2     		uxtb	r3, r3
 728 01f4 DB43     		mvns	r3, r3
 729 01f6 DBB2     		uxtb	r3, r3
 730 01f8 0A46     		mov	r2, r1
 731 01fa 1340     		ands	r3, r3, r2
 732 01fc DBB2     		uxtb	r3, r3
 733 01fe DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 21


 734 0200 1846     		mov	r0, r3
 735 0202 FFF7FEFF 		bl	Chords_Bass_Notes_Write
 408:main.c        ****                    break;    
 736              		.loc 1 408 0
 737 0206 15E0     		b	.L35
 738              	.L45:
 409:main.c        ****                 case 8:
 410:main.c        ****                 
 411:main.c        ****                    Bass_Notes_Write(Bass_Notes_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-64)));
 739              		.loc 1 411 0
 740 0208 FFF7FEFF 		bl	Bass_Notes_Read
 741 020c 0346     		mov	r3, r0
 742 020e D9B2     		uxtb	r1, r3
 743 0210 3B68     		ldr	r3, [r7]
 744 0212 0133     		adds	r3, r3, #1
 745 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 746 0216 403B     		subs	r3, r3, #64
 747 0218 0122     		movs	r2, #1
 748 021a 02FA03F3 		lsl	r3, r2, r3
 749 021e DBB2     		uxtb	r3, r3
 750 0220 DB43     		mvns	r3, r3
 751 0222 DBB2     		uxtb	r3, r3
 752 0224 0A46     		mov	r2, r1
 753 0226 1340     		ands	r3, r3, r2
 754 0228 DBB2     		uxtb	r3, r3
 755 022a DBB2     		uxtb	r3, r3
 756 022c 1846     		mov	r0, r3
 757 022e FFF7FEFF 		bl	Bass_Notes_Write
 412:main.c        ****                    break;                    
 758              		.loc 1 412 0
 759 0232 00BF     		nop
 760              	.L35:
 413:main.c        ****             }
 414:main.c        ****             LED_OutA_Write(0);
 761              		.loc 1 414 0
 762 0234 0020     		movs	r0, #0
 763 0236 FFF7FEFF 		bl	LED_OutA_Write
 415:main.c        ****         }
 416:main.c        ****         else    
 417:main.c        ****         {
 418:main.c        ****             switch (midiMsg[USB_EVENT_BYTE1]/8)
 419:main.c        ****             {
 420:main.c        ****                 case 0: 
 421:main.c        ****                 
 422:main.c        ****                    Keys_Notes_1_Write(Keys_Notes_1_Read() | 0x01 << midiMsg[USB_EVENT_BYTE1]);
 423:main.c        ****                     break;
 424:main.c        ****                 
 425:main.c        ****                 case 1:
 426:main.c        ****                 
 427:main.c        ****                    Keys_Notes_2_Write(Keys_Notes_2_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-8)); 
 428:main.c        ****                     break;
 429:main.c        ****                 
 430:main.c        ****                 case 2:
 431:main.c        ****                 
 432:main.c        ****                    Keys_Notes_3_Write(Keys_Notes_3_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-16));
 433:main.c        ****                     break;
 434:main.c        ****                 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 22


 435:main.c        ****                 case 3:
 436:main.c        ****                 
 437:main.c        ****                    Keys_Notes_4_Write(Keys_Notes_4_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-24));
 438:main.c        ****                     break;
 439:main.c        ****                 
 440:main.c        ****                 case 4:
 441:main.c        ****                 
 442:main.c        ****                    Keys_Notes_5_Write(Keys_Notes_5_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-32));
 443:main.c        ****                     break;
 444:main.c        ****                                 
 445:main.c        ****                 case 5:
 446:main.c        ****                 
 447:main.c        ****                    Keys_Notes_6_Write(Keys_Notes_6_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-40));
 448:main.c        ****                     break; 
 449:main.c        ****                 case 6:
 450:main.c        ****                 
 451:main.c        ****                    Chords_Notes_Write(Chords_Notes_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-48));
 452:main.c        ****                     break; 
 453:main.c        ****                 case 7:
 454:main.c        ****                 
 455:main.c        ****                    Chords_Bass_Notes_Write(Chords_Bass_Notes_Read() | 0x01 << (midiMsg[USB_EVENT_BY
 456:main.c        ****                     break;
 457:main.c        ****                 case 8:
 458:main.c        ****                 
 459:main.c        ****                    Bass_Notes_Write(Bass_Notes_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-64));
 460:main.c        ****                     break;                   
 461:main.c        ****             }
 462:main.c        **** 
 463:main.c        ****             LED_OutA_Write(1);
 464:main.c        ****         }
 465:main.c        ****         break;  
 764              		.loc 1 465 0
 765 023a 42E2     		b	.L30
 766              	.L34:
 418:main.c        ****             {
 767              		.loc 1 418 0
 768 023c 3B68     		ldr	r3, [r7]
 769 023e 0133     		adds	r3, r3, #1
 770 0240 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 771 0242 DB08     		lsrs	r3, r3, #3
 772 0244 DBB2     		uxtb	r3, r3
 773 0246 082B     		cmp	r3, #8
 774 0248 00F2CC80 		bhi	.L47
 775 024c 01A2     		adr	r2, .L49
 776 024e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 777 0252 00BF     		.p2align 2
 778              	.L49:
 779 0254 79020000 		.word	.L48+1
 780 0258 9D020000 		.word	.L50+1
 781 025c C5020000 		.word	.L51+1
 782 0260 F5020000 		.word	.L52+1
 783 0264 1D030000 		.word	.L53+1
 784 0268 45030000 		.word	.L54+1
 785 026c 6D030000 		.word	.L55+1
 786 0270 95030000 		.word	.L56+1
 787 0274 BD030000 		.word	.L57+1
 788              		.p2align 1
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 23


 789              	.L48:
 422:main.c        ****                     break;
 790              		.loc 1 422 0
 791 0278 FFF7FEFF 		bl	Keys_Notes_1_Read
 792 027c 0346     		mov	r3, r0
 793 027e DAB2     		uxtb	r2, r3
 794 0280 3B68     		ldr	r3, [r7]
 795 0282 0133     		adds	r3, r3, #1
 796 0284 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 797 0286 1946     		mov	r1, r3
 798 0288 0123     		movs	r3, #1
 799 028a 8B40     		lsls	r3, r3, r1
 800 028c DBB2     		uxtb	r3, r3
 801 028e 1343     		orrs	r3, r3, r2
 802 0290 DBB2     		uxtb	r3, r3
 803 0292 DBB2     		uxtb	r3, r3
 804 0294 1846     		mov	r0, r3
 805 0296 FFF7FEFF 		bl	Keys_Notes_1_Write
 423:main.c        ****                 
 806              		.loc 1 423 0
 807 029a A3E0     		b	.L47
 808              	.L50:
 427:main.c        ****                     break;
 809              		.loc 1 427 0
 810 029c FFF7FEFF 		bl	Keys_Notes_2_Read
 811 02a0 0346     		mov	r3, r0
 812 02a2 D9B2     		uxtb	r1, r3
 813 02a4 3B68     		ldr	r3, [r7]
 814 02a6 0133     		adds	r3, r3, #1
 815 02a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 816 02aa 083B     		subs	r3, r3, #8
 817 02ac 0122     		movs	r2, #1
 818 02ae 02FA03F3 		lsl	r3, r2, r3
 819 02b2 DBB2     		uxtb	r3, r3
 820 02b4 0A46     		mov	r2, r1
 821 02b6 1343     		orrs	r3, r3, r2
 822 02b8 DBB2     		uxtb	r3, r3
 823 02ba DBB2     		uxtb	r3, r3
 824 02bc 1846     		mov	r0, r3
 825 02be FFF7FEFF 		bl	Keys_Notes_2_Write
 428:main.c        ****                 
 826              		.loc 1 428 0
 827 02c2 8FE0     		b	.L47
 828              	.L51:
 432:main.c        ****                     break;
 829              		.loc 1 432 0
 830 02c4 FFF7FEFF 		bl	Keys_Notes_3_Read
 831 02c8 0346     		mov	r3, r0
 832 02ca D9B2     		uxtb	r1, r3
 833 02cc 3B68     		ldr	r3, [r7]
 834 02ce 0133     		adds	r3, r3, #1
 835 02d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 836 02d2 103B     		subs	r3, r3, #16
 837 02d4 0122     		movs	r2, #1
 838 02d6 02FA03F3 		lsl	r3, r2, r3
 839 02da DBB2     		uxtb	r3, r3
 840 02dc 0A46     		mov	r2, r1
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 24


 841 02de 1343     		orrs	r3, r3, r2
 842 02e0 DBB2     		uxtb	r3, r3
 843 02e2 DBB2     		uxtb	r3, r3
 844 02e4 1846     		mov	r0, r3
 845 02e6 FFF7FEFF 		bl	Keys_Notes_3_Write
 433:main.c        ****                 
 846              		.loc 1 433 0
 847 02ea 7BE0     		b	.L47
 848              	.L83:
 849              		.align	2
 850              	.L82:
 851 02ec 00000000 		.word	USB_MIDI1_InqFlags
 852 02f0 00000000 		.word	inqFlagsOld
 853              	.L52:
 437:main.c        ****                     break;
 854              		.loc 1 437 0
 855 02f4 FFF7FEFF 		bl	Keys_Notes_4_Read
 856 02f8 0346     		mov	r3, r0
 857 02fa D9B2     		uxtb	r1, r3
 858 02fc 3B68     		ldr	r3, [r7]
 859 02fe 0133     		adds	r3, r3, #1
 860 0300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 861 0302 183B     		subs	r3, r3, #24
 862 0304 0122     		movs	r2, #1
 863 0306 02FA03F3 		lsl	r3, r2, r3
 864 030a DBB2     		uxtb	r3, r3
 865 030c 0A46     		mov	r2, r1
 866 030e 1343     		orrs	r3, r3, r2
 867 0310 DBB2     		uxtb	r3, r3
 868 0312 DBB2     		uxtb	r3, r3
 869 0314 1846     		mov	r0, r3
 870 0316 FFF7FEFF 		bl	Keys_Notes_4_Write
 438:main.c        ****                 
 871              		.loc 1 438 0
 872 031a 63E0     		b	.L47
 873              	.L53:
 442:main.c        ****                     break;
 874              		.loc 1 442 0
 875 031c FFF7FEFF 		bl	Keys_Notes_5_Read
 876 0320 0346     		mov	r3, r0
 877 0322 D9B2     		uxtb	r1, r3
 878 0324 3B68     		ldr	r3, [r7]
 879 0326 0133     		adds	r3, r3, #1
 880 0328 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 881 032a 203B     		subs	r3, r3, #32
 882 032c 0122     		movs	r2, #1
 883 032e 02FA03F3 		lsl	r3, r2, r3
 884 0332 DBB2     		uxtb	r3, r3
 885 0334 0A46     		mov	r2, r1
 886 0336 1343     		orrs	r3, r3, r2
 887 0338 DBB2     		uxtb	r3, r3
 888 033a DBB2     		uxtb	r3, r3
 889 033c 1846     		mov	r0, r3
 890 033e FFF7FEFF 		bl	Keys_Notes_5_Write
 443:main.c        ****                                 
 891              		.loc 1 443 0
 892 0342 4FE0     		b	.L47
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 25


 893              	.L54:
 447:main.c        ****                     break; 
 894              		.loc 1 447 0
 895 0344 FFF7FEFF 		bl	Keys_Notes_6_Read
 896 0348 0346     		mov	r3, r0
 897 034a D9B2     		uxtb	r1, r3
 898 034c 3B68     		ldr	r3, [r7]
 899 034e 0133     		adds	r3, r3, #1
 900 0350 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 901 0352 283B     		subs	r3, r3, #40
 902 0354 0122     		movs	r2, #1
 903 0356 02FA03F3 		lsl	r3, r2, r3
 904 035a DBB2     		uxtb	r3, r3
 905 035c 0A46     		mov	r2, r1
 906 035e 1343     		orrs	r3, r3, r2
 907 0360 DBB2     		uxtb	r3, r3
 908 0362 DBB2     		uxtb	r3, r3
 909 0364 1846     		mov	r0, r3
 910 0366 FFF7FEFF 		bl	Keys_Notes_6_Write
 448:main.c        ****                 case 6:
 911              		.loc 1 448 0
 912 036a 3BE0     		b	.L47
 913              	.L55:
 451:main.c        ****                     break; 
 914              		.loc 1 451 0
 915 036c FFF7FEFF 		bl	Chords_Notes_Read
 916 0370 0346     		mov	r3, r0
 917 0372 D9B2     		uxtb	r1, r3
 918 0374 3B68     		ldr	r3, [r7]
 919 0376 0133     		adds	r3, r3, #1
 920 0378 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 921 037a 303B     		subs	r3, r3, #48
 922 037c 0122     		movs	r2, #1
 923 037e 02FA03F3 		lsl	r3, r2, r3
 924 0382 DBB2     		uxtb	r3, r3
 925 0384 0A46     		mov	r2, r1
 926 0386 1343     		orrs	r3, r3, r2
 927 0388 DBB2     		uxtb	r3, r3
 928 038a DBB2     		uxtb	r3, r3
 929 038c 1846     		mov	r0, r3
 930 038e FFF7FEFF 		bl	Chords_Notes_Write
 452:main.c        ****                 case 7:
 931              		.loc 1 452 0
 932 0392 27E0     		b	.L47
 933              	.L56:
 455:main.c        ****                     break;
 934              		.loc 1 455 0
 935 0394 FFF7FEFF 		bl	Chords_Bass_Notes_Read
 936 0398 0346     		mov	r3, r0
 937 039a D9B2     		uxtb	r1, r3
 938 039c 3B68     		ldr	r3, [r7]
 939 039e 0133     		adds	r3, r3, #1
 940 03a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 941 03a2 383B     		subs	r3, r3, #56
 942 03a4 0122     		movs	r2, #1
 943 03a6 02FA03F3 		lsl	r3, r2, r3
 944 03aa DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 26


 945 03ac 0A46     		mov	r2, r1
 946 03ae 1343     		orrs	r3, r3, r2
 947 03b0 DBB2     		uxtb	r3, r3
 948 03b2 DBB2     		uxtb	r3, r3
 949 03b4 1846     		mov	r0, r3
 950 03b6 FFF7FEFF 		bl	Chords_Bass_Notes_Write
 456:main.c        ****                 case 8:
 951              		.loc 1 456 0
 952 03ba 13E0     		b	.L47
 953              	.L57:
 459:main.c        ****                     break;                   
 954              		.loc 1 459 0
 955 03bc FFF7FEFF 		bl	Bass_Notes_Read
 956 03c0 0346     		mov	r3, r0
 957 03c2 D9B2     		uxtb	r1, r3
 958 03c4 3B68     		ldr	r3, [r7]
 959 03c6 0133     		adds	r3, r3, #1
 960 03c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 961 03ca 403B     		subs	r3, r3, #64
 962 03cc 0122     		movs	r2, #1
 963 03ce 02FA03F3 		lsl	r3, r2, r3
 964 03d2 DBB2     		uxtb	r3, r3
 965 03d4 0A46     		mov	r2, r1
 966 03d6 1343     		orrs	r3, r3, r2
 967 03d8 DBB2     		uxtb	r3, r3
 968 03da DBB2     		uxtb	r3, r3
 969 03dc 1846     		mov	r0, r3
 970 03de FFF7FEFF 		bl	Bass_Notes_Write
 460:main.c        ****             }
 971              		.loc 1 460 0
 972 03e2 00BF     		nop
 973              	.L47:
 463:main.c        ****         }
 974              		.loc 1 463 0
 975 03e4 0120     		movs	r0, #1
 976 03e6 FFF7FEFF 		bl	LED_OutA_Write
 977              		.loc 1 465 0
 978 03ea 6AE1     		b	.L30
 979              	.L33:
 466:main.c        ****         
 467:main.c        ****     //if(midiMsg[USB_EVENT_BYTE0] == USB_MIDI_NOTE_OFF)
 468:main.c        ****     case USB_MIDI_NOTE_OFF:
 469:main.c        ****         
 470:main.c        ****         switch (midiMsg[USB_EVENT_BYTE1]/8)
 980              		.loc 1 470 0
 981 03ec 3B68     		ldr	r3, [r7]
 982 03ee 0133     		adds	r3, r3, #1
 983 03f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 984 03f2 DB08     		lsrs	r3, r3, #3
 985 03f4 DBB2     		uxtb	r3, r3
 986 03f6 052B     		cmp	r3, #5
 987 03f8 00F29280 		bhi	.L58
 988 03fc 01A2     		adr	r2, .L60
 989 03fe 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 990 0402 00BF     		.p2align 2
 991              	.L60:
 992 0404 1D040000 		.word	.L59+1
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 27


 993 0408 45040000 		.word	.L61+1
 994 040c 71040000 		.word	.L62+1
 995 0410 9D040000 		.word	.L63+1
 996 0414 C9040000 		.word	.L64+1
 997 0418 F5040000 		.word	.L65+1
 998              		.p2align 1
 999              	.L59:
 471:main.c        ****             {
 472:main.c        ****                 case 0: 
 473:main.c        ****                 
 474:main.c        ****                    Keys_Notes_1_Write(Keys_Notes_1_Read() & ~(0x01 << midiMsg[USB_EVENT_BYTE1]));
 1000              		.loc 1 474 0
 1001 041c FFF7FEFF 		bl	Keys_Notes_1_Read
 1002 0420 0346     		mov	r3, r0
 1003 0422 DAB2     		uxtb	r2, r3
 1004 0424 3B68     		ldr	r3, [r7]
 1005 0426 0133     		adds	r3, r3, #1
 1006 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1007 042a 1946     		mov	r1, r3
 1008 042c 0123     		movs	r3, #1
 1009 042e 8B40     		lsls	r3, r3, r1
 1010 0430 DBB2     		uxtb	r3, r3
 1011 0432 DB43     		mvns	r3, r3
 1012 0434 DBB2     		uxtb	r3, r3
 1013 0436 1340     		ands	r3, r3, r2
 1014 0438 DBB2     		uxtb	r3, r3
 1015 043a DBB2     		uxtb	r3, r3
 1016 043c 1846     		mov	r0, r3
 1017 043e FFF7FEFF 		bl	Keys_Notes_1_Write
 475:main.c        ****                    //Keys_Notes_4_Write(0x40);
 476:main.c        ****                     break;
 1018              		.loc 1 476 0
 1019 0442 6DE0     		b	.L58
 1020              	.L61:
 477:main.c        ****                 
 478:main.c        ****                 case 1:
 479:main.c        ****                 
 480:main.c        ****                    Keys_Notes_2_Write(Keys_Notes_2_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-8))
 1021              		.loc 1 480 0
 1022 0444 FFF7FEFF 		bl	Keys_Notes_2_Read
 1023 0448 0346     		mov	r3, r0
 1024 044a D9B2     		uxtb	r1, r3
 1025 044c 3B68     		ldr	r3, [r7]
 1026 044e 0133     		adds	r3, r3, #1
 1027 0450 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1028 0452 083B     		subs	r3, r3, #8
 1029 0454 0122     		movs	r2, #1
 1030 0456 02FA03F3 		lsl	r3, r2, r3
 1031 045a DBB2     		uxtb	r3, r3
 1032 045c DB43     		mvns	r3, r3
 1033 045e DBB2     		uxtb	r3, r3
 1034 0460 0A46     		mov	r2, r1
 1035 0462 1340     		ands	r3, r3, r2
 1036 0464 DBB2     		uxtb	r3, r3
 1037 0466 DBB2     		uxtb	r3, r3
 1038 0468 1846     		mov	r0, r3
 1039 046a FFF7FEFF 		bl	Keys_Notes_2_Write
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 28


 481:main.c        ****                    // Keys_Notes_4_Write(0x02);
 482:main.c        ****                     break;
 1040              		.loc 1 482 0
 1041 046e 57E0     		b	.L58
 1042              	.L62:
 483:main.c        ****                 
 484:main.c        ****                 case 2:
 485:main.c        ****                 
 486:main.c        ****                    Keys_Notes_3_Write(Keys_Notes_3_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-16)
 1043              		.loc 1 486 0
 1044 0470 FFF7FEFF 		bl	Keys_Notes_3_Read
 1045 0474 0346     		mov	r3, r0
 1046 0476 D9B2     		uxtb	r1, r3
 1047 0478 3B68     		ldr	r3, [r7]
 1048 047a 0133     		adds	r3, r3, #1
 1049 047c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1050 047e 103B     		subs	r3, r3, #16
 1051 0480 0122     		movs	r2, #1
 1052 0482 02FA03F3 		lsl	r3, r2, r3
 1053 0486 DBB2     		uxtb	r3, r3
 1054 0488 DB43     		mvns	r3, r3
 1055 048a DBB2     		uxtb	r3, r3
 1056 048c 0A46     		mov	r2, r1
 1057 048e 1340     		ands	r3, r3, r2
 1058 0490 DBB2     		uxtb	r3, r3
 1059 0492 DBB2     		uxtb	r3, r3
 1060 0494 1846     		mov	r0, r3
 1061 0496 FFF7FEFF 		bl	Keys_Notes_3_Write
 487:main.c        ****                    // Keys_Notes_4_Write(0x04);
 488:main.c        ****                     break;
 1062              		.loc 1 488 0
 1063 049a 41E0     		b	.L58
 1064              	.L63:
 489:main.c        ****                 
 490:main.c        ****                 case 3:
 491:main.c        ****                 
 492:main.c        ****                    Keys_Notes_4_Write(Keys_Notes_4_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-24)
 1065              		.loc 1 492 0
 1066 049c FFF7FEFF 		bl	Keys_Notes_4_Read
 1067 04a0 0346     		mov	r3, r0
 1068 04a2 D9B2     		uxtb	r1, r3
 1069 04a4 3B68     		ldr	r3, [r7]
 1070 04a6 0133     		adds	r3, r3, #1
 1071 04a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1072 04aa 183B     		subs	r3, r3, #24
 1073 04ac 0122     		movs	r2, #1
 1074 04ae 02FA03F3 		lsl	r3, r2, r3
 1075 04b2 DBB2     		uxtb	r3, r3
 1076 04b4 DB43     		mvns	r3, r3
 1077 04b6 DBB2     		uxtb	r3, r3
 1078 04b8 0A46     		mov	r2, r1
 1079 04ba 1340     		ands	r3, r3, r2
 1080 04bc DBB2     		uxtb	r3, r3
 1081 04be DBB2     		uxtb	r3, r3
 1082 04c0 1846     		mov	r0, r3
 1083 04c2 FFF7FEFF 		bl	Keys_Notes_4_Write
 493:main.c        ****                   //  Keys_Notes_4_Write(0x08);
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 29


 494:main.c        ****                     break;
 1084              		.loc 1 494 0
 1085 04c6 2BE0     		b	.L58
 1086              	.L64:
 495:main.c        ****                 
 496:main.c        ****                 case 4:
 497:main.c        ****                 
 498:main.c        ****                    Keys_Notes_5_Write(Keys_Notes_5_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-32)
 1087              		.loc 1 498 0
 1088 04c8 FFF7FEFF 		bl	Keys_Notes_5_Read
 1089 04cc 0346     		mov	r3, r0
 1090 04ce D9B2     		uxtb	r1, r3
 1091 04d0 3B68     		ldr	r3, [r7]
 1092 04d2 0133     		adds	r3, r3, #1
 1093 04d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1094 04d6 203B     		subs	r3, r3, #32
 1095 04d8 0122     		movs	r2, #1
 1096 04da 02FA03F3 		lsl	r3, r2, r3
 1097 04de DBB2     		uxtb	r3, r3
 1098 04e0 DB43     		mvns	r3, r3
 1099 04e2 DBB2     		uxtb	r3, r3
 1100 04e4 0A46     		mov	r2, r1
 1101 04e6 1340     		ands	r3, r3, r2
 1102 04e8 DBB2     		uxtb	r3, r3
 1103 04ea DBB2     		uxtb	r3, r3
 1104 04ec 1846     		mov	r0, r3
 1105 04ee FFF7FEFF 		bl	Keys_Notes_5_Write
 499:main.c        ****                  //   Keys_Notes_4_Write(0x10);
 500:main.c        ****                     break;
 1106              		.loc 1 500 0
 1107 04f2 15E0     		b	.L58
 1108              	.L65:
 501:main.c        ****                                 
 502:main.c        ****                 case 5:
 503:main.c        ****                 
 504:main.c        ****                    Keys_Notes_6_Write(Keys_Notes_6_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-40)
 1109              		.loc 1 504 0
 1110 04f4 FFF7FEFF 		bl	Keys_Notes_6_Read
 1111 04f8 0346     		mov	r3, r0
 1112 04fa D9B2     		uxtb	r1, r3
 1113 04fc 3B68     		ldr	r3, [r7]
 1114 04fe 0133     		adds	r3, r3, #1
 1115 0500 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1116 0502 283B     		subs	r3, r3, #40
 1117 0504 0122     		movs	r2, #1
 1118 0506 02FA03F3 		lsl	r3, r2, r3
 1119 050a DBB2     		uxtb	r3, r3
 1120 050c DB43     		mvns	r3, r3
 1121 050e DBB2     		uxtb	r3, r3
 1122 0510 0A46     		mov	r2, r1
 1123 0512 1340     		ands	r3, r3, r2
 1124 0514 DBB2     		uxtb	r3, r3
 1125 0516 DBB2     		uxtb	r3, r3
 1126 0518 1846     		mov	r0, r3
 1127 051a FFF7FEFF 		bl	Keys_Notes_6_Write
 505:main.c        ****                   //  Keys_Notes_4_Write(0x20);
 506:main.c        ****                     break;           
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 30


 1128              		.loc 1 506 0
 1129 051e 00BF     		nop
 1130              	.L58:
 507:main.c        ****             }
 508:main.c        ****             LED_OutA_Write(0);
 1131              		.loc 1 508 0
 1132 0520 0020     		movs	r0, #0
 1133 0522 FFF7FEFF 		bl	LED_OutA_Write
 509:main.c        ****             break;
 1134              		.loc 1 509 0
 1135 0526 CCE0     		b	.L30
 1136              	.L32:
 510:main.c        ****     case USB_MIDI_CONTROL_CHANGE:
 511:main.c        ****             switch (midiMsg[USB_EVENT_BYTE1]/8)
 1137              		.loc 1 511 0
 1138 0528 3B68     		ldr	r3, [r7]
 1139 052a 0133     		adds	r3, r3, #1
 1140 052c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1141 052e DB08     		lsrs	r3, r3, #3
 1142 0530 DBB2     		uxtb	r3, r3
 1143 0532 032B     		cmp	r3, #3
 1144 0534 00F2C480 		bhi	.L80
 1145 0538 01A2     		adr	r2, .L68
 1146 053a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1147 053e 00BF     		.p2align 2
 1148              	.L68:
 1149 0540 51050000 		.word	.L67+1
 1150 0544 A7050000 		.word	.L69+1
 1151 0548 05060000 		.word	.L70+1
 1152 054c 63060000 		.word	.L71+1
 1153              		.p2align 1
 1154              	.L67:
 512:main.c        ****             {
 513:main.c        ****                 case 0: 
 514:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1155              		.loc 1 514 0
 1156 0550 3B68     		ldr	r3, [r7]
 1157 0552 0233     		adds	r3, r3, #2
 1158 0554 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1159 0556 3E2B     		cmp	r3, #62
 1160 0558 13D8     		bhi	.L72
 515:main.c        ****                     {
 516:main.c        ****                     Tabs_1_Write(Tabs_1_Read() & ~(0x01 << midiMsg[USB_EVENT_BYTE1]));
 1161              		.loc 1 516 0
 1162 055a FFF7FEFF 		bl	Tabs_1_Read
 1163 055e 0346     		mov	r3, r0
 1164 0560 DAB2     		uxtb	r2, r3
 1165 0562 3B68     		ldr	r3, [r7]
 1166 0564 0133     		adds	r3, r3, #1
 1167 0566 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1168 0568 1946     		mov	r1, r3
 1169 056a 0123     		movs	r3, #1
 1170 056c 8B40     		lsls	r3, r3, r1
 1171 056e DBB2     		uxtb	r3, r3
 1172 0570 DB43     		mvns	r3, r3
 1173 0572 DBB2     		uxtb	r3, r3
 1174 0574 1340     		ands	r3, r3, r2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 31


 1175 0576 DBB2     		uxtb	r3, r3
 1176 0578 DBB2     		uxtb	r3, r3
 1177 057a 1846     		mov	r0, r3
 1178 057c FFF7FEFF 		bl	Tabs_1_Write
 517:main.c        ****                     }
 518:main.c        ****                     else
 519:main.c        ****                     {
 520:main.c        ****                     Tabs_1_Write(Tabs_1_Read() | (0x01 << midiMsg[USB_EVENT_BYTE1]));    
 521:main.c        ****                     }
 522:main.c        ****                     break;
 1179              		.loc 1 522 0
 1180 0580 9EE0     		b	.L66
 1181              	.L72:
 520:main.c        ****                     }
 1182              		.loc 1 520 0
 1183 0582 FFF7FEFF 		bl	Tabs_1_Read
 1184 0586 0346     		mov	r3, r0
 1185 0588 DAB2     		uxtb	r2, r3
 1186 058a 3B68     		ldr	r3, [r7]
 1187 058c 0133     		adds	r3, r3, #1
 1188 058e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1189 0590 1946     		mov	r1, r3
 1190 0592 0123     		movs	r3, #1
 1191 0594 8B40     		lsls	r3, r3, r1
 1192 0596 DBB2     		uxtb	r3, r3
 1193 0598 1343     		orrs	r3, r3, r2
 1194 059a DBB2     		uxtb	r3, r3
 1195 059c DBB2     		uxtb	r3, r3
 1196 059e 1846     		mov	r0, r3
 1197 05a0 FFF7FEFF 		bl	Tabs_1_Write
 1198              		.loc 1 522 0
 1199 05a4 8CE0     		b	.L66
 1200              	.L69:
 523:main.c        ****                 
 524:main.c        ****                 case 1:
 525:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1201              		.loc 1 525 0
 1202 05a6 3B68     		ldr	r3, [r7]
 1203 05a8 0233     		adds	r3, r3, #2
 1204 05aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1205 05ac 3E2B     		cmp	r3, #62
 1206 05ae 15D8     		bhi	.L74
 526:main.c        ****                     {
 527:main.c        ****                     Tabs_2_Write(Tabs_2_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-8)));
 1207              		.loc 1 527 0
 1208 05b0 FFF7FEFF 		bl	Tabs_2_Read
 1209 05b4 0346     		mov	r3, r0
 1210 05b6 D9B2     		uxtb	r1, r3
 1211 05b8 3B68     		ldr	r3, [r7]
 1212 05ba 0133     		adds	r3, r3, #1
 1213 05bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1214 05be 083B     		subs	r3, r3, #8
 1215 05c0 0122     		movs	r2, #1
 1216 05c2 02FA03F3 		lsl	r3, r2, r3
 1217 05c6 DBB2     		uxtb	r3, r3
 1218 05c8 DB43     		mvns	r3, r3
 1219 05ca DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 32


 1220 05cc 0A46     		mov	r2, r1
 1221 05ce 1340     		ands	r3, r3, r2
 1222 05d0 DBB2     		uxtb	r3, r3
 1223 05d2 DBB2     		uxtb	r3, r3
 1224 05d4 1846     		mov	r0, r3
 1225 05d6 FFF7FEFF 		bl	Tabs_2_Write
 528:main.c        ****                     }
 529:main.c        ****                     else
 530:main.c        ****                     {
 531:main.c        ****                     Tabs_2_Write(Tabs_2_Read() | (0x01 << (midiMsg[USB_EVENT_BYTE1]-8)));    
 532:main.c        ****                     }
 533:main.c        ****                     break;
 1226              		.loc 1 533 0
 1227 05da 71E0     		b	.L66
 1228              	.L74:
 531:main.c        ****                     }
 1229              		.loc 1 531 0
 1230 05dc FFF7FEFF 		bl	Tabs_2_Read
 1231 05e0 0346     		mov	r3, r0
 1232 05e2 D9B2     		uxtb	r1, r3
 1233 05e4 3B68     		ldr	r3, [r7]
 1234 05e6 0133     		adds	r3, r3, #1
 1235 05e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1236 05ea 083B     		subs	r3, r3, #8
 1237 05ec 0122     		movs	r2, #1
 1238 05ee 02FA03F3 		lsl	r3, r2, r3
 1239 05f2 DBB2     		uxtb	r3, r3
 1240 05f4 0A46     		mov	r2, r1
 1241 05f6 1343     		orrs	r3, r3, r2
 1242 05f8 DBB2     		uxtb	r3, r3
 1243 05fa DBB2     		uxtb	r3, r3
 1244 05fc 1846     		mov	r0, r3
 1245 05fe FFF7FEFF 		bl	Tabs_2_Write
 1246              		.loc 1 533 0
 1247 0602 5DE0     		b	.L66
 1248              	.L70:
 534:main.c        ****                 
 535:main.c        ****                 case 2:
 536:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1249              		.loc 1 536 0
 1250 0604 3B68     		ldr	r3, [r7]
 1251 0606 0233     		adds	r3, r3, #2
 1252 0608 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1253 060a 3E2B     		cmp	r3, #62
 1254 060c 15D8     		bhi	.L76
 537:main.c        ****                     {
 538:main.c        ****                     Tabs_3_Write(Tabs_3_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-16)));
 1255              		.loc 1 538 0
 1256 060e FFF7FEFF 		bl	Tabs_3_Read
 1257 0612 0346     		mov	r3, r0
 1258 0614 D9B2     		uxtb	r1, r3
 1259 0616 3B68     		ldr	r3, [r7]
 1260 0618 0133     		adds	r3, r3, #1
 1261 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1262 061c 103B     		subs	r3, r3, #16
 1263 061e 0122     		movs	r2, #1
 1264 0620 02FA03F3 		lsl	r3, r2, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 33


 1265 0624 DBB2     		uxtb	r3, r3
 1266 0626 DB43     		mvns	r3, r3
 1267 0628 DBB2     		uxtb	r3, r3
 1268 062a 0A46     		mov	r2, r1
 1269 062c 1340     		ands	r3, r3, r2
 1270 062e DBB2     		uxtb	r3, r3
 1271 0630 DBB2     		uxtb	r3, r3
 1272 0632 1846     		mov	r0, r3
 1273 0634 FFF7FEFF 		bl	Tabs_3_Write
 539:main.c        ****                     }
 540:main.c        ****                     else
 541:main.c        ****                     {
 542:main.c        ****                     Tabs_3_Write(Tabs_3_Read() | (0x01 << (midiMsg[USB_EVENT_BYTE1]-16)));    
 543:main.c        ****                     }
 544:main.c        ****                     break;
 1274              		.loc 1 544 0
 1275 0638 42E0     		b	.L66
 1276              	.L76:
 542:main.c        ****                     }
 1277              		.loc 1 542 0
 1278 063a FFF7FEFF 		bl	Tabs_3_Read
 1279 063e 0346     		mov	r3, r0
 1280 0640 D9B2     		uxtb	r1, r3
 1281 0642 3B68     		ldr	r3, [r7]
 1282 0644 0133     		adds	r3, r3, #1
 1283 0646 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1284 0648 103B     		subs	r3, r3, #16
 1285 064a 0122     		movs	r2, #1
 1286 064c 02FA03F3 		lsl	r3, r2, r3
 1287 0650 DBB2     		uxtb	r3, r3
 1288 0652 0A46     		mov	r2, r1
 1289 0654 1343     		orrs	r3, r3, r2
 1290 0656 DBB2     		uxtb	r3, r3
 1291 0658 DBB2     		uxtb	r3, r3
 1292 065a 1846     		mov	r0, r3
 1293 065c FFF7FEFF 		bl	Tabs_3_Write
 1294              		.loc 1 544 0
 1295 0660 2EE0     		b	.L66
 1296              	.L71:
 545:main.c        ****                 
 546:main.c        ****                 case 3:
 547:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1297              		.loc 1 547 0
 1298 0662 3B68     		ldr	r3, [r7]
 1299 0664 0233     		adds	r3, r3, #2
 1300 0666 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1301 0668 3E2B     		cmp	r3, #62
 1302 066a 15D8     		bhi	.L78
 548:main.c        ****                     {
 549:main.c        ****                     Tabs_4_Write(Tabs_4_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-32)));
 1303              		.loc 1 549 0
 1304 066c FFF7FEFF 		bl	Tabs_4_Read
 1305 0670 0346     		mov	r3, r0
 1306 0672 D9B2     		uxtb	r1, r3
 1307 0674 3B68     		ldr	r3, [r7]
 1308 0676 0133     		adds	r3, r3, #1
 1309 0678 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 34


 1310 067a 203B     		subs	r3, r3, #32
 1311 067c 0122     		movs	r2, #1
 1312 067e 02FA03F3 		lsl	r3, r2, r3
 1313 0682 DBB2     		uxtb	r3, r3
 1314 0684 DB43     		mvns	r3, r3
 1315 0686 DBB2     		uxtb	r3, r3
 1316 0688 0A46     		mov	r2, r1
 1317 068a 1340     		ands	r3, r3, r2
 1318 068c DBB2     		uxtb	r3, r3
 1319 068e DBB2     		uxtb	r3, r3
 1320 0690 1846     		mov	r0, r3
 1321 0692 FFF7FEFF 		bl	Tabs_4_Write
 550:main.c        ****                     }
 551:main.c        ****                     else
 552:main.c        ****                     {
 553:main.c        ****                     Tabs_4_Write(Tabs_4_Read() | (0x01 << (midiMsg[USB_EVENT_BYTE1]-32)));    
 554:main.c        ****                     }
 555:main.c        ****                     break;
 1322              		.loc 1 555 0
 1323 0696 12E0     		b	.L81
 1324              	.L78:
 553:main.c        ****                     }
 1325              		.loc 1 553 0
 1326 0698 FFF7FEFF 		bl	Tabs_4_Read
 1327 069c 0346     		mov	r3, r0
 1328 069e D9B2     		uxtb	r1, r3
 1329 06a0 3B68     		ldr	r3, [r7]
 1330 06a2 0133     		adds	r3, r3, #1
 1331 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1332 06a6 203B     		subs	r3, r3, #32
 1333 06a8 0122     		movs	r2, #1
 1334 06aa 02FA03F3 		lsl	r3, r2, r3
 1335 06ae DBB2     		uxtb	r3, r3
 1336 06b0 0A46     		mov	r2, r1
 1337 06b2 1343     		orrs	r3, r3, r2
 1338 06b4 DBB2     		uxtb	r3, r3
 1339 06b6 DBB2     		uxtb	r3, r3
 1340 06b8 1846     		mov	r0, r3
 1341 06ba FFF7FEFF 		bl	Tabs_4_Write
 1342              	.L81:
 1343              		.loc 1 555 0
 1344 06be 00BF     		nop
 1345              	.L66:
 1346              	.L80:
 556:main.c        ****              
 557:main.c        ****             }
 558:main.c        ****             break;        
 1347              		.loc 1 558 0
 1348 06c0 00BF     		nop
 1349              	.L30:
 559:main.c        ****     }
 560:main.c        ****     
 561:main.c        ****     
 562:main.c        ****     inqFlagsOld = USB_MIDI1_InqFlags;
 1350              		.loc 1 562 0
 1351 06c2 044B     		ldr	r3, .L84
 1352 06c4 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 35


 1353 06c6 DAB2     		uxtb	r2, r3
 1354 06c8 034B     		ldr	r3, .L84+4
 1355 06ca 1A70     		strb	r2, [r3]
 563:main.c        ****     cable = cable;
 564:main.c        **** }    
 1356              		.loc 1 564 0
 1357 06cc 0837     		adds	r7, r7, #8
 1358              		.cfi_def_cfa_offset 8
 1359 06ce BD46     		mov	sp, r7
 1360              		.cfi_def_cfa_register 13
 1361              		@ sp needed
 1362 06d0 80BD     		pop	{r7, pc}
 1363              	.L85:
 1364 06d2 00BF     		.align	2
 1365              	.L84:
 1366 06d4 00000000 		.word	USB_MIDI1_InqFlags
 1367 06d8 00000000 		.word	inqFlagsOld
 1368              		.cfi_endproc
 1369              	.LFE65:
 1370              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 1371              		.section	.text.USB_MIDI1_ProcessUsbOut_EntryCallback,"ax",%progbits
 1372              		.align	2
 1373              		.global	USB_MIDI1_ProcessUsbOut_EntryCallback
 1374              		.thumb
 1375              		.thumb_func
 1376              		.type	USB_MIDI1_ProcessUsbOut_EntryCallback, %function
 1377              	USB_MIDI1_ProcessUsbOut_EntryCallback:
 1378              	.LFB66:
 565:main.c        **** 
 566:main.c        **** 
 567:main.c        **** /*******************************************************************************
 568:main.c        **** * Function Name: USB_MIDI1_ProcessUsbOut_EntryCallback
 569:main.c        **** ********************************************************************************
 570:main.c        **** * Summary:  Turn the LED_OutA on at the beginning of the function
 571:main.c        **** * USB_MIDI1_ProcessUsbOut() when data comes to be put in the UART1 out
 572:main.c        **** * buffer.
 573:main.c        **** * 
 574:main.c        **** *******************************************************************************/
 575:main.c        **** void USB_MIDI1_ProcessUsbOut_EntryCallback(void)
 576:main.c        **** {
 1379              		.loc 1 576 0
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 0
 1382              		@ frame_needed = 1, uses_anonymous_args = 0
 1383              		@ link register save eliminated.
 1384 0000 80B4     		push	{r7}
 1385              		.cfi_def_cfa_offset 4
 1386              		.cfi_offset 7, -4
 1387 0002 00AF     		add	r7, sp, #0
 1388              		.cfi_def_cfa_register 7
 577:main.c        ****   //  LED_OutA_Write(1);
 578:main.c        **** }
 1389              		.loc 1 578 0
 1390 0004 BD46     		mov	sp, r7
 1391              		.cfi_def_cfa_register 13
 1392              		@ sp needed
 1393 0006 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 36


 1394              		.cfi_restore 7
 1395              		.cfi_def_cfa_offset 0
 1396 000a 7047     		bx	lr
 1397              		.cfi_endproc
 1398              	.LFE66:
 1399              		.size	USB_MIDI1_ProcessUsbOut_EntryCallback, .-USB_MIDI1_ProcessUsbOut_EntryCallback
 1400              		.section	.text.USB_MIDI1_ProcessUsbOut_ExitCallback,"ax",%progbits
 1401              		.align	2
 1402              		.global	USB_MIDI1_ProcessUsbOut_ExitCallback
 1403              		.thumb
 1404              		.thumb_func
 1405              		.type	USB_MIDI1_ProcessUsbOut_ExitCallback, %function
 1406              	USB_MIDI1_ProcessUsbOut_ExitCallback:
 1407              	.LFB67:
 579:main.c        **** 
 580:main.c        **** 
 581:main.c        **** /*******************************************************************************
 582:main.c        **** * Function Name: USB_MIDI1_ProcessUsbOut_ExitCallback
 583:main.c        **** ********************************************************************************
 584:main.c        **** * Summary:  Turn the LED_OutA off at the end of the function  
 585:main.c        **** * USB_MIDI1_ProcessUsbOut() when data is put in the UART1 out-buffer.
 586:main.c        **** * 
 587:main.c        **** *******************************************************************************/
 588:main.c        **** void USB_MIDI1_ProcessUsbOut_ExitCallback(void)
 589:main.c        **** {
 1408              		.loc 1 589 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
 1411              		@ frame_needed = 1, uses_anonymous_args = 0
 1412              		@ link register save eliminated.
 1413 0000 80B4     		push	{r7}
 1414              		.cfi_def_cfa_offset 4
 1415              		.cfi_offset 7, -4
 1416 0002 00AF     		add	r7, sp, #0
 1417              		.cfi_def_cfa_register 7
 590:main.c        ****   //  LED_OutA_Write(0);
 591:main.c        **** }
 1418              		.loc 1 591 0
 1419 0004 BD46     		mov	sp, r7
 1420              		.cfi_def_cfa_register 13
 1421              		@ sp needed
 1422 0006 5DF8047B 		ldr	r7, [sp], #4
 1423              		.cfi_restore 7
 1424              		.cfi_def_cfa_offset 0
 1425 000a 7047     		bx	lr
 1426              		.cfi_endproc
 1427              	.LFE67:
 1428              		.size	USB_MIDI1_ProcessUsbOut_ExitCallback, .-USB_MIDI1_ProcessUsbOut_ExitCallback
 1429              		.section	.text.USB_MIDI2_ProcessUsbOut_EntryCallback,"ax",%progbits
 1430              		.align	2
 1431              		.global	USB_MIDI2_ProcessUsbOut_EntryCallback
 1432              		.thumb
 1433              		.thumb_func
 1434              		.type	USB_MIDI2_ProcessUsbOut_EntryCallback, %function
 1435              	USB_MIDI2_ProcessUsbOut_EntryCallback:
 1436              	.LFB68:
 592:main.c        **** 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 37


 593:main.c        **** 
 594:main.c        **** /*******************************************************************************
 595:main.c        **** * Function Name: USB_MIDI2_ProcessUsbOut_EntryCallback
 596:main.c        **** ********************************************************************************
 597:main.c        **** * Summary:  Turn the LED_OutB on at the beginning of the function  
 598:main.c        **** * USB_MIDI2_ProcessUsbOut() when data comes to be put in the UART2 out- 
 599:main.c        **** * buffer  
 600:main.c        **** * 
 601:main.c        **** *******************************************************************************/
 602:main.c        **** void USB_MIDI2_ProcessUsbOut_EntryCallback(void)
 603:main.c        **** {
 1437              		.loc 1 603 0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 1, uses_anonymous_args = 0
 1441 0000 80B5     		push	{r7, lr}
 1442              		.cfi_def_cfa_offset 8
 1443              		.cfi_offset 7, -8
 1444              		.cfi_offset 14, -4
 1445 0002 00AF     		add	r7, sp, #0
 1446              		.cfi_def_cfa_register 7
 604:main.c        ****     LED_OutB_Write(1);
 1447              		.loc 1 604 0
 1448 0004 0120     		movs	r0, #1
 1449 0006 FFF7FEFF 		bl	LED_OutB_Write
 605:main.c        **** }
 1450              		.loc 1 605 0
 1451 000a 80BD     		pop	{r7, pc}
 1452              		.cfi_endproc
 1453              	.LFE68:
 1454              		.size	USB_MIDI2_ProcessUsbOut_EntryCallback, .-USB_MIDI2_ProcessUsbOut_EntryCallback
 1455              		.section	.text.USB_MIDI2_ProcessUsbOut_ExitCallback,"ax",%progbits
 1456              		.align	2
 1457              		.global	USB_MIDI2_ProcessUsbOut_ExitCallback
 1458              		.thumb
 1459              		.thumb_func
 1460              		.type	USB_MIDI2_ProcessUsbOut_ExitCallback, %function
 1461              	USB_MIDI2_ProcessUsbOut_ExitCallback:
 1462              	.LFB69:
 606:main.c        **** 
 607:main.c        **** 
 608:main.c        **** /*******************************************************************************
 609:main.c        **** * Function Name: USB_MIDI2_ProcessUsbOut_ExitCallback
 610:main.c        **** ********************************************************************************
 611:main.c        **** * Summary:  Turn the LED_OutB off at the end of the function  
 612:main.c        **** * USB_MIDI2_ProcessUsbOut() when data is put in the UART2 out-buffer.
 613:main.c        **** * 
 614:main.c        **** *******************************************************************************/
 615:main.c        **** void USB_MIDI2_ProcessUsbOut_ExitCallback(void)
 616:main.c        **** {
 1463              		.loc 1 616 0
 1464              		.cfi_startproc
 1465              		@ args = 0, pretend = 0, frame = 0
 1466              		@ frame_needed = 1, uses_anonymous_args = 0
 1467 0000 80B5     		push	{r7, lr}
 1468              		.cfi_def_cfa_offset 8
 1469              		.cfi_offset 7, -8
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 38


 1470              		.cfi_offset 14, -4
 1471 0002 00AF     		add	r7, sp, #0
 1472              		.cfi_def_cfa_register 7
 617:main.c        ****     LED_OutB_Write(0);
 1473              		.loc 1 617 0
 1474 0004 0020     		movs	r0, #0
 1475 0006 FFF7FEFF 		bl	LED_OutB_Write
 618:main.c        **** }
 1476              		.loc 1 618 0
 1477 000a 80BD     		pop	{r7, pc}
 1478              		.cfi_endproc
 1479              	.LFE69:
 1480              		.size	USB_MIDI2_ProcessUsbOut_ExitCallback, .-USB_MIDI2_ProcessUsbOut_ExitCallback
 1481              		.section	.text.MIDI1_UART_RXISR_EntryCallback,"ax",%progbits
 1482              		.align	2
 1483              		.global	MIDI1_UART_RXISR_EntryCallback
 1484              		.thumb
 1485              		.thumb_func
 1486              		.type	MIDI1_UART_RXISR_EntryCallback, %function
 1487              	MIDI1_UART_RXISR_EntryCallback:
 1488              	.LFB70:
 619:main.c        **** 
 620:main.c        **** 
 621:main.c        **** /*******************************************************************************
 622:main.c        **** * Function Name: MIDI1_UART_RXISR_EntryCallback
 623:main.c        **** ********************************************************************************
 624:main.c        **** * Summary:  Turn the LED_InA on at the beginning of the MIDI1_UART_RXISR ISR  
 625:main.c        **** * when data comes to UART1 to be put in the USBFS_MIDI IN endpoint
 626:main.c        **** * buffer.
 627:main.c        **** *
 628:main.c        **** *******************************************************************************/
 629:main.c        **** void MIDI1_UART_RXISR_EntryCallback(void)
 630:main.c        **** {
 1489              		.loc 1 630 0
 1490              		.cfi_startproc
 1491              		@ args = 0, pretend = 0, frame = 0
 1492              		@ frame_needed = 1, uses_anonymous_args = 0
 1493 0000 80B5     		push	{r7, lr}
 1494              		.cfi_def_cfa_offset 8
 1495              		.cfi_offset 7, -8
 1496              		.cfi_offset 14, -4
 1497 0002 00AF     		add	r7, sp, #0
 1498              		.cfi_def_cfa_register 7
 631:main.c        ****     /* These LEDs indicate MIDI input activity */
 632:main.c        ****     LED_InA_Write(1);
 1499              		.loc 1 632 0
 1500 0004 0120     		movs	r0, #1
 1501 0006 FFF7FEFF 		bl	LED_InA_Write
 633:main.c        **** }
 1502              		.loc 1 633 0
 1503 000a 80BD     		pop	{r7, pc}
 1504              		.cfi_endproc
 1505              	.LFE70:
 1506              		.size	MIDI1_UART_RXISR_EntryCallback, .-MIDI1_UART_RXISR_EntryCallback
 1507              		.section	.text.MIDI1_UART_RXISR_ExitCallback,"ax",%progbits
 1508              		.align	2
 1509              		.global	MIDI1_UART_RXISR_ExitCallback
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 39


 1510              		.thumb
 1511              		.thumb_func
 1512              		.type	MIDI1_UART_RXISR_ExitCallback, %function
 1513              	MIDI1_UART_RXISR_ExitCallback:
 1514              	.LFB71:
 634:main.c        **** 
 635:main.c        **** 
 636:main.c        **** /*******************************************************************************
 637:main.c        **** * Function Name: MIDI1_UART_RXISR_ExitCallback
 638:main.c        **** ********************************************************************************
 639:main.c        **** * Summary:  Turn the LED_InA off at the end of the MIDI1_UART_RXISR ISR  
 640:main.c        **** * when data is put in the USBFS_MIDI IN endpoint buffer.
 641:main.c        **** *
 642:main.c        **** *******************************************************************************/
 643:main.c        **** void MIDI1_UART_RXISR_ExitCallback(void)
 644:main.c        **** {
 1515              		.loc 1 644 0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 1, uses_anonymous_args = 0
 1519 0000 80B5     		push	{r7, lr}
 1520              		.cfi_def_cfa_offset 8
 1521              		.cfi_offset 7, -8
 1522              		.cfi_offset 14, -4
 1523 0002 00AF     		add	r7, sp, #0
 1524              		.cfi_def_cfa_register 7
 645:main.c        ****     #if (USB_EP_MANAGEMENT_DMA_AUTO) 
 646:main.c        ****         USB_MIDI_IN_Service();
 647:main.c        ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 648:main.c        ****     
 649:main.c        ****     LED_InA_Write(0);
 1525              		.loc 1 649 0
 1526 0004 0020     		movs	r0, #0
 1527 0006 FFF7FEFF 		bl	LED_InA_Write
 650:main.c        **** }
 1528              		.loc 1 650 0
 1529 000a 80BD     		pop	{r7, pc}
 1530              		.cfi_endproc
 1531              	.LFE71:
 1532              		.size	MIDI1_UART_RXISR_ExitCallback, .-MIDI1_UART_RXISR_ExitCallback
 1533              		.section	.text.MIDI2_UART_RXISR_EntryCallback,"ax",%progbits
 1534              		.align	2
 1535              		.global	MIDI2_UART_RXISR_EntryCallback
 1536              		.thumb
 1537              		.thumb_func
 1538              		.type	MIDI2_UART_RXISR_EntryCallback, %function
 1539              	MIDI2_UART_RXISR_EntryCallback:
 1540              	.LFB72:
 651:main.c        **** 
 652:main.c        **** 
 653:main.c        **** /*******************************************************************************
 654:main.c        **** * Function Name: MIDI2_UART_RXISR_EntryCallback
 655:main.c        **** ********************************************************************************
 656:main.c        **** * Summary:  Turn the LED_InB on at the beginning of the MIDI2_UART_RXISR ISR  
 657:main.c        **** * when data comes to UART2 to be put in the USBFS_MIDI IN endpoint  
 658:main.c        **** * buffer.
 659:main.c        **** *
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 40


 660:main.c        **** *******************************************************************************/
 661:main.c        **** void MIDI2_UART_RXISR_EntryCallback(void)
 662:main.c        **** {
 1541              		.loc 1 662 0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 0
 1544              		@ frame_needed = 1, uses_anonymous_args = 0
 1545 0000 80B5     		push	{r7, lr}
 1546              		.cfi_def_cfa_offset 8
 1547              		.cfi_offset 7, -8
 1548              		.cfi_offset 14, -4
 1549 0002 00AF     		add	r7, sp, #0
 1550              		.cfi_def_cfa_register 7
 663:main.c        ****     /* These LEDs indicate MIDI input activity */
 664:main.c        ****     LED_InB_Write(1);
 1551              		.loc 1 664 0
 1552 0004 0120     		movs	r0, #1
 1553 0006 FFF7FEFF 		bl	LED_InB_Write
 665:main.c        **** }
 1554              		.loc 1 665 0
 1555 000a 80BD     		pop	{r7, pc}
 1556              		.cfi_endproc
 1557              	.LFE72:
 1558              		.size	MIDI2_UART_RXISR_EntryCallback, .-MIDI2_UART_RXISR_EntryCallback
 1559              		.section	.text.MIDI2_UART_RXISR_ExitCallback,"ax",%progbits
 1560              		.align	2
 1561              		.global	MIDI2_UART_RXISR_ExitCallback
 1562              		.thumb
 1563              		.thumb_func
 1564              		.type	MIDI2_UART_RXISR_ExitCallback, %function
 1565              	MIDI2_UART_RXISR_ExitCallback:
 1566              	.LFB73:
 666:main.c        **** 
 667:main.c        **** 
 668:main.c        **** /*******************************************************************************
 669:main.c        **** * Function Name: MIDI2_UART_RXISR_ExitCallback
 670:main.c        **** ********************************************************************************
 671:main.c        **** * Summary:  Turn the LED_InB off at the end of the MIDI2_UART_RXISR ISR  
 672:main.c        **** * when data is put in the USBFS_MIDI IN endpoint buffer
 673:main.c        **** *
 674:main.c        **** *******************************************************************************/
 675:main.c        **** void MIDI2_UART_RXISR_ExitCallback(void)
 676:main.c        **** {
 1567              		.loc 1 676 0
 1568              		.cfi_startproc
 1569              		@ args = 0, pretend = 0, frame = 0
 1570              		@ frame_needed = 1, uses_anonymous_args = 0
 1571 0000 80B5     		push	{r7, lr}
 1572              		.cfi_def_cfa_offset 8
 1573              		.cfi_offset 7, -8
 1574              		.cfi_offset 14, -4
 1575 0002 00AF     		add	r7, sp, #0
 1576              		.cfi_def_cfa_register 7
 677:main.c        ****     #if (USB_EP_MANAGEMENT_DMA_AUTO) 
 678:main.c        ****         USB_MIDI_IN_Service();
 679:main.c        ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 680:main.c        ****     
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 41


 681:main.c        ****     LED_InB_Write(0);
 1577              		.loc 1 681 0
 1578 0004 0020     		movs	r0, #0
 1579 0006 FFF7FEFF 		bl	LED_InB_Write
 682:main.c        **** }
 1580              		.loc 1 682 0
 1581 000a 80BD     		pop	{r7, pc}
 1582              		.cfi_endproc
 1583              	.LFE73:
 1584              		.size	MIDI2_UART_RXISR_ExitCallback, .-MIDI2_UART_RXISR_ExitCallback
 1585              		.text
 1586              	.Letext0:
 1587              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1588              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1589              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1590              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1591              		.section	.debug_info,"",%progbits
 1592              	.Ldebug_info0:
 1593 0000 61020000 		.4byte	0x261
 1594 0004 0400     		.2byte	0x4
 1595 0006 00000000 		.4byte	.Ldebug_abbrev0
 1596 000a 04       		.byte	0x4
 1597 000b 01       		.uleb128 0x1
 1598 000c 53000000 		.4byte	.LASF38
 1599 0010 01       		.byte	0x1
 1600 0011 D2020000 		.4byte	.LASF39
 1601 0015 6C010000 		.4byte	.LASF40
 1602 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1603 001d 00000000 		.4byte	0
 1604 0021 00000000 		.4byte	.Ldebug_line0
 1605 0025 02       		.uleb128 0x2
 1606 0026 01       		.byte	0x1
 1607 0027 06       		.byte	0x6
 1608 0028 1A030000 		.4byte	.LASF0
 1609 002c 02       		.uleb128 0x2
 1610 002d 01       		.byte	0x1
 1611 002e 08       		.byte	0x8
 1612 002f 26010000 		.4byte	.LASF1
 1613 0033 02       		.uleb128 0x2
 1614 0034 02       		.byte	0x2
 1615 0035 05       		.byte	0x5
 1616 0036 01030000 		.4byte	.LASF2
 1617 003a 02       		.uleb128 0x2
 1618 003b 02       		.byte	0x2
 1619 003c 07       		.byte	0x7
 1620 003d 46010000 		.4byte	.LASF3
 1621 0041 03       		.uleb128 0x3
 1622 0042 2A000000 		.4byte	.LASF9
 1623 0046 02       		.byte	0x2
 1624 0047 3F       		.byte	0x3f
 1625 0048 4C000000 		.4byte	0x4c
 1626 004c 02       		.uleb128 0x2
 1627 004d 04       		.byte	0x4
 1628 004e 05       		.byte	0x5
 1629 004f 11030000 		.4byte	.LASF4
 1630 0053 02       		.uleb128 0x2
 1631 0054 04       		.byte	0x4
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 42


 1632 0055 07       		.byte	0x7
 1633 0056 34010000 		.4byte	.LASF5
 1634 005a 02       		.uleb128 0x2
 1635 005b 08       		.byte	0x8
 1636 005c 05       		.byte	0x5
 1637 005d 18010000 		.4byte	.LASF6
 1638 0061 02       		.uleb128 0x2
 1639 0062 08       		.byte	0x8
 1640 0063 07       		.byte	0x7
 1641 0064 32020000 		.4byte	.LASF7
 1642 0068 04       		.uleb128 0x4
 1643 0069 04       		.byte	0x4
 1644 006a 05       		.byte	0x5
 1645 006b 696E7400 		.ascii	"int\000"
 1646 006f 02       		.uleb128 0x2
 1647 0070 04       		.byte	0x4
 1648 0071 07       		.byte	0x7
 1649 0072 25020000 		.4byte	.LASF8
 1650 0076 03       		.uleb128 0x3
 1651 0077 9A020000 		.4byte	.LASF10
 1652 007b 03       		.byte	0x3
 1653 007c 2C       		.byte	0x2c
 1654 007d 41000000 		.4byte	0x41
 1655 0081 05       		.uleb128 0x5
 1656 0082 0B030000 		.4byte	.LASF11
 1657 0086 04       		.byte	0x4
 1658 0087 9201     		.2byte	0x192
 1659 0089 2C000000 		.4byte	0x2c
 1660 008d 02       		.uleb128 0x2
 1661 008e 04       		.byte	0x4
 1662 008f 04       		.byte	0x4
 1663 0090 12010000 		.4byte	.LASF12
 1664 0094 02       		.uleb128 0x2
 1665 0095 08       		.byte	0x8
 1666 0096 04       		.byte	0x4
 1667 0097 B7010000 		.4byte	.LASF13
 1668 009b 02       		.uleb128 0x2
 1669 009c 01       		.byte	0x1
 1670 009d 08       		.byte	0x8
 1671 009e D9020000 		.4byte	.LASF14
 1672 00a2 06       		.uleb128 0x6
 1673 00a3 81000000 		.4byte	0x81
 1674 00a7 02       		.uleb128 0x2
 1675 00a8 04       		.byte	0x4
 1676 00a9 07       		.byte	0x7
 1677 00aa A2020000 		.4byte	.LASF15
 1678 00ae 07       		.uleb128 0x7
 1679 00af 81000000 		.4byte	0x81
 1680 00b3 BE000000 		.4byte	0xbe
 1681 00b7 08       		.uleb128 0x8
 1682 00b8 A7000000 		.4byte	0xa7
 1683 00bc 03       		.byte	0x3
 1684 00bd 00       		.byte	0
 1685 00be 09       		.uleb128 0x9
 1686 00bf F6010000 		.4byte	.LASF20
 1687 00c3 01       		.byte	0x1
 1688 00c4 5B       		.byte	0x5b
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 43


 1689 00c5 00000000 		.4byte	.LFB63
 1690 00c9 30000000 		.4byte	.LFE63-.LFB63
 1691 00cd 01       		.uleb128 0x1
 1692 00ce 9C       		.byte	0x9c
 1693 00cf 0A       		.uleb128 0xa
 1694 00d0 BE010000 		.4byte	.LASF16
 1695 00d4 01       		.byte	0x1
 1696 00d5 72       		.byte	0x72
 1697 00d6 68000000 		.4byte	0x68
 1698 00da 00000000 		.4byte	.LFB64
 1699 00de 50020000 		.4byte	.LFE64-.LFB64
 1700 00e2 01       		.uleb128 0x1
 1701 00e3 9C       		.byte	0x9c
 1702 00e4 F7000000 		.4byte	0xf7
 1703 00e8 0B       		.uleb128 0xb
 1704 00e9 F9020000 		.4byte	.LASF19
 1705 00ed 01       		.byte	0x1
 1706 00ee 74       		.byte	0x74
 1707 00ef AE000000 		.4byte	0xae
 1708 00f3 02       		.uleb128 0x2
 1709 00f4 91       		.byte	0x91
 1710 00f5 74       		.sleb128 -12
 1711 00f6 00       		.byte	0
 1712 00f7 0C       		.uleb128 0xc
 1713 00f8 DE020000 		.4byte	.LASF17
 1714 00fc 01       		.byte	0x1
 1715 00fd 5501     		.2byte	0x155
 1716 00ff 00000000 		.4byte	.LFB65
 1717 0103 DC060000 		.4byte	.LFE65-.LFB65
 1718 0107 01       		.uleb128 0x1
 1719 0108 9C       		.byte	0x9c
 1720 0109 2C010000 		.4byte	0x12c
 1721 010d 0D       		.uleb128 0xd
 1722 010e 59010000 		.4byte	.LASF18
 1723 0112 01       		.byte	0x1
 1724 0113 5501     		.2byte	0x155
 1725 0115 81000000 		.4byte	0x81
 1726 0119 02       		.uleb128 0x2
 1727 011a 91       		.byte	0x91
 1728 011b 77       		.sleb128 -9
 1729 011c 0D       		.uleb128 0xd
 1730 011d F9020000 		.4byte	.LASF19
 1731 0121 01       		.byte	0x1
 1732 0122 5501     		.2byte	0x155
 1733 0124 2C010000 		.4byte	0x12c
 1734 0128 02       		.uleb128 0x2
 1735 0129 91       		.byte	0x91
 1736 012a 70       		.sleb128 -16
 1737 012b 00       		.byte	0
 1738 012c 0E       		.uleb128 0xe
 1739 012d 04       		.byte	0x4
 1740 012e 81000000 		.4byte	0x81
 1741 0132 0F       		.uleb128 0xf
 1742 0133 FF010000 		.4byte	.LASF21
 1743 0137 01       		.byte	0x1
 1744 0138 3F02     		.2byte	0x23f
 1745 013a 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 44


 1746 013e 0C000000 		.4byte	.LFE66-.LFB66
 1747 0142 01       		.uleb128 0x1
 1748 0143 9C       		.byte	0x9c
 1749 0144 0F       		.uleb128 0xf
 1750 0145 26030000 		.4byte	.LASF22
 1751 0149 01       		.byte	0x1
 1752 014a 4C02     		.2byte	0x24c
 1753 014c 00000000 		.4byte	.LFB67
 1754 0150 0C000000 		.4byte	.LFE67-.LFB67
 1755 0154 01       		.uleb128 0x1
 1756 0155 9C       		.byte	0x9c
 1757 0156 10       		.uleb128 0x10
 1758 0157 C3010000 		.4byte	.LASF23
 1759 015b 01       		.byte	0x1
 1760 015c 5A02     		.2byte	0x25a
 1761 015e 00000000 		.4byte	.LFB68
 1762 0162 0C000000 		.4byte	.LFE68-.LFB68
 1763 0166 01       		.uleb128 0x1
 1764 0167 9C       		.byte	0x9c
 1765 0168 10       		.uleb128 0x10
 1766 0169 56020000 		.4byte	.LASF24
 1767 016d 01       		.byte	0x1
 1768 016e 6702     		.2byte	0x267
 1769 0170 00000000 		.4byte	.LFB69
 1770 0174 0C000000 		.4byte	.LFE69-.LFB69
 1771 0178 01       		.uleb128 0x1
 1772 0179 9C       		.byte	0x9c
 1773 017a 10       		.uleb128 0x10
 1774 017b 7B020000 		.4byte	.LASF25
 1775 017f 01       		.byte	0x1
 1776 0180 7502     		.2byte	0x275
 1777 0182 00000000 		.4byte	.LFB70
 1778 0186 0C000000 		.4byte	.LFE70-.LFB70
 1779 018a 01       		.uleb128 0x1
 1780 018b 9C       		.byte	0x9c
 1781 018c 10       		.uleb128 0x10
 1782 018d E1000000 		.4byte	.LASF26
 1783 0191 01       		.byte	0x1
 1784 0192 8302     		.2byte	0x283
 1785 0194 00000000 		.4byte	.LFB71
 1786 0198 0C000000 		.4byte	.LFE71-.LFB71
 1787 019c 01       		.uleb128 0x1
 1788 019d 9C       		.byte	0x9c
 1789 019e 10       		.uleb128 0x10
 1790 019f 34000000 		.4byte	.LASF27
 1791 01a3 01       		.byte	0x1
 1792 01a4 9502     		.2byte	0x295
 1793 01a6 00000000 		.4byte	.LFB72
 1794 01aa 0C000000 		.4byte	.LFE72-.LFB72
 1795 01ae 01       		.uleb128 0x1
 1796 01af 9C       		.byte	0x9c
 1797 01b0 10       		.uleb128 0x10
 1798 01b1 0C000000 		.4byte	.LASF28
 1799 01b5 01       		.byte	0x1
 1800 01b6 A302     		.2byte	0x2a3
 1801 01b8 00000000 		.4byte	.LFB73
 1802 01bc 0C000000 		.4byte	.LFE73-.LFB73
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 45


 1803 01c0 01       		.uleb128 0x1
 1804 01c1 9C       		.byte	0x9c
 1805 01c2 11       		.uleb128 0x11
 1806 01c3 BF020000 		.4byte	.LASF29
 1807 01c7 01       		.byte	0x1
 1808 01c8 43       		.byte	0x43
 1809 01c9 A2000000 		.4byte	0xa2
 1810 01cd 11       		.uleb128 0x11
 1811 01ce 4B030000 		.4byte	.LASF30
 1812 01d2 01       		.byte	0x1
 1813 01d3 44       		.byte	0x44
 1814 01d4 A2000000 		.4byte	0xa2
 1815 01d8 12       		.uleb128 0x12
 1816 01d9 5F010000 		.4byte	.LASF31
 1817 01dd 05       		.byte	0x5
 1818 01de 9606     		.2byte	0x696
 1819 01e0 E4010000 		.4byte	0x1e4
 1820 01e4 06       		.uleb128 0x6
 1821 01e5 76000000 		.4byte	0x76
 1822 01e9 07       		.uleb128 0x7
 1823 01ea 81000000 		.4byte	0x81
 1824 01ee F9010000 		.4byte	0x1f9
 1825 01f2 08       		.uleb128 0x8
 1826 01f3 A7000000 		.4byte	0xa7
 1827 01f7 0D       		.byte	0xd
 1828 01f8 00       		.byte	0
 1829 01f9 13       		.uleb128 0x13
 1830 01fa AB020000 		.4byte	.LASF32
 1831 01fe 01       		.byte	0x1
 1832 01ff 35       		.byte	0x35
 1833 0200 0A020000 		.4byte	0x20a
 1834 0204 05       		.uleb128 0x5
 1835 0205 03       		.byte	0x3
 1836 0206 00000000 		.4byte	MIDI_IDENTITY_REPLY
 1837 020a 14       		.uleb128 0x14
 1838 020b E9010000 		.4byte	0x1e9
 1839 020f 13       		.uleb128 0x13
 1840 0210 FF000000 		.4byte	.LASF33
 1841 0214 01       		.byte	0x1
 1842 0215 46       		.byte	0x46
 1843 0216 A2000000 		.4byte	0xa2
 1844 021a 05       		.uleb128 0x5
 1845 021b 03       		.byte	0x3
 1846 021c 00000000 		.4byte	usbActivityCounter
 1847 0220 13       		.uleb128 0x13
 1848 0221 49020000 		.4byte	.LASF34
 1849 0225 01       		.byte	0x1
 1850 0226 48       		.byte	0x48
 1851 0227 81000000 		.4byte	0x81
 1852 022b 05       		.uleb128 0x5
 1853 022c 03       		.byte	0x3
 1854 022d 00000000 		.4byte	csButtStates
 1855 0231 13       		.uleb128 0x13
 1856 0232 5E030000 		.4byte	.LASF35
 1857 0236 01       		.byte	0x1
 1858 0237 49       		.byte	0x49
 1859 0238 81000000 		.4byte	0x81
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 46


 1860 023c 05       		.uleb128 0x5
 1861 023d 03       		.byte	0x3
 1862 023e 00000000 		.4byte	csButtStatesOld
 1863 0242 13       		.uleb128 0x13
 1864 0243 E9010000 		.4byte	.LASF36
 1865 0247 01       		.byte	0x1
 1866 0248 4A       		.byte	0x4a
 1867 0249 81000000 		.4byte	0x81
 1868 024d 05       		.uleb128 0x5
 1869 024e 03       		.byte	0x3
 1870 024f 00000000 		.4byte	csButtChange
 1871 0253 13       		.uleb128 0x13
 1872 0254 00000000 		.4byte	.LASF37
 1873 0258 01       		.byte	0x1
 1874 0259 4B       		.byte	0x4b
 1875 025a 81000000 		.4byte	0x81
 1876 025e 05       		.uleb128 0x5
 1877 025f 03       		.byte	0x3
 1878 0260 00000000 		.4byte	inqFlagsOld
 1879 0264 00       		.byte	0
 1880              		.section	.debug_abbrev,"",%progbits
 1881              	.Ldebug_abbrev0:
 1882 0000 01       		.uleb128 0x1
 1883 0001 11       		.uleb128 0x11
 1884 0002 01       		.byte	0x1
 1885 0003 25       		.uleb128 0x25
 1886 0004 0E       		.uleb128 0xe
 1887 0005 13       		.uleb128 0x13
 1888 0006 0B       		.uleb128 0xb
 1889 0007 03       		.uleb128 0x3
 1890 0008 0E       		.uleb128 0xe
 1891 0009 1B       		.uleb128 0x1b
 1892 000a 0E       		.uleb128 0xe
 1893 000b 55       		.uleb128 0x55
 1894 000c 17       		.uleb128 0x17
 1895 000d 11       		.uleb128 0x11
 1896 000e 01       		.uleb128 0x1
 1897 000f 10       		.uleb128 0x10
 1898 0010 17       		.uleb128 0x17
 1899 0011 00       		.byte	0
 1900 0012 00       		.byte	0
 1901 0013 02       		.uleb128 0x2
 1902 0014 24       		.uleb128 0x24
 1903 0015 00       		.byte	0
 1904 0016 0B       		.uleb128 0xb
 1905 0017 0B       		.uleb128 0xb
 1906 0018 3E       		.uleb128 0x3e
 1907 0019 0B       		.uleb128 0xb
 1908 001a 03       		.uleb128 0x3
 1909 001b 0E       		.uleb128 0xe
 1910 001c 00       		.byte	0
 1911 001d 00       		.byte	0
 1912 001e 03       		.uleb128 0x3
 1913 001f 16       		.uleb128 0x16
 1914 0020 00       		.byte	0
 1915 0021 03       		.uleb128 0x3
 1916 0022 0E       		.uleb128 0xe
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 47


 1917 0023 3A       		.uleb128 0x3a
 1918 0024 0B       		.uleb128 0xb
 1919 0025 3B       		.uleb128 0x3b
 1920 0026 0B       		.uleb128 0xb
 1921 0027 49       		.uleb128 0x49
 1922 0028 13       		.uleb128 0x13
 1923 0029 00       		.byte	0
 1924 002a 00       		.byte	0
 1925 002b 04       		.uleb128 0x4
 1926 002c 24       		.uleb128 0x24
 1927 002d 00       		.byte	0
 1928 002e 0B       		.uleb128 0xb
 1929 002f 0B       		.uleb128 0xb
 1930 0030 3E       		.uleb128 0x3e
 1931 0031 0B       		.uleb128 0xb
 1932 0032 03       		.uleb128 0x3
 1933 0033 08       		.uleb128 0x8
 1934 0034 00       		.byte	0
 1935 0035 00       		.byte	0
 1936 0036 05       		.uleb128 0x5
 1937 0037 16       		.uleb128 0x16
 1938 0038 00       		.byte	0
 1939 0039 03       		.uleb128 0x3
 1940 003a 0E       		.uleb128 0xe
 1941 003b 3A       		.uleb128 0x3a
 1942 003c 0B       		.uleb128 0xb
 1943 003d 3B       		.uleb128 0x3b
 1944 003e 05       		.uleb128 0x5
 1945 003f 49       		.uleb128 0x49
 1946 0040 13       		.uleb128 0x13
 1947 0041 00       		.byte	0
 1948 0042 00       		.byte	0
 1949 0043 06       		.uleb128 0x6
 1950 0044 35       		.uleb128 0x35
 1951 0045 00       		.byte	0
 1952 0046 49       		.uleb128 0x49
 1953 0047 13       		.uleb128 0x13
 1954 0048 00       		.byte	0
 1955 0049 00       		.byte	0
 1956 004a 07       		.uleb128 0x7
 1957 004b 01       		.uleb128 0x1
 1958 004c 01       		.byte	0x1
 1959 004d 49       		.uleb128 0x49
 1960 004e 13       		.uleb128 0x13
 1961 004f 01       		.uleb128 0x1
 1962 0050 13       		.uleb128 0x13
 1963 0051 00       		.byte	0
 1964 0052 00       		.byte	0
 1965 0053 08       		.uleb128 0x8
 1966 0054 21       		.uleb128 0x21
 1967 0055 00       		.byte	0
 1968 0056 49       		.uleb128 0x49
 1969 0057 13       		.uleb128 0x13
 1970 0058 2F       		.uleb128 0x2f
 1971 0059 0B       		.uleb128 0xb
 1972 005a 00       		.byte	0
 1973 005b 00       		.byte	0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 48


 1974 005c 09       		.uleb128 0x9
 1975 005d 2E       		.uleb128 0x2e
 1976 005e 00       		.byte	0
 1977 005f 3F       		.uleb128 0x3f
 1978 0060 19       		.uleb128 0x19
 1979 0061 03       		.uleb128 0x3
 1980 0062 0E       		.uleb128 0xe
 1981 0063 3A       		.uleb128 0x3a
 1982 0064 0B       		.uleb128 0xb
 1983 0065 3B       		.uleb128 0x3b
 1984 0066 0B       		.uleb128 0xb
 1985 0067 27       		.uleb128 0x27
 1986 0068 19       		.uleb128 0x19
 1987 0069 11       		.uleb128 0x11
 1988 006a 01       		.uleb128 0x1
 1989 006b 12       		.uleb128 0x12
 1990 006c 06       		.uleb128 0x6
 1991 006d 40       		.uleb128 0x40
 1992 006e 18       		.uleb128 0x18
 1993 006f 9642     		.uleb128 0x2116
 1994 0071 19       		.uleb128 0x19
 1995 0072 00       		.byte	0
 1996 0073 00       		.byte	0
 1997 0074 0A       		.uleb128 0xa
 1998 0075 2E       		.uleb128 0x2e
 1999 0076 01       		.byte	0x1
 2000 0077 3F       		.uleb128 0x3f
 2001 0078 19       		.uleb128 0x19
 2002 0079 03       		.uleb128 0x3
 2003 007a 0E       		.uleb128 0xe
 2004 007b 3A       		.uleb128 0x3a
 2005 007c 0B       		.uleb128 0xb
 2006 007d 3B       		.uleb128 0x3b
 2007 007e 0B       		.uleb128 0xb
 2008 007f 49       		.uleb128 0x49
 2009 0080 13       		.uleb128 0x13
 2010 0081 11       		.uleb128 0x11
 2011 0082 01       		.uleb128 0x1
 2012 0083 12       		.uleb128 0x12
 2013 0084 06       		.uleb128 0x6
 2014 0085 40       		.uleb128 0x40
 2015 0086 18       		.uleb128 0x18
 2016 0087 9642     		.uleb128 0x2116
 2017 0089 19       		.uleb128 0x19
 2018 008a 01       		.uleb128 0x1
 2019 008b 13       		.uleb128 0x13
 2020 008c 00       		.byte	0
 2021 008d 00       		.byte	0
 2022 008e 0B       		.uleb128 0xb
 2023 008f 34       		.uleb128 0x34
 2024 0090 00       		.byte	0
 2025 0091 03       		.uleb128 0x3
 2026 0092 0E       		.uleb128 0xe
 2027 0093 3A       		.uleb128 0x3a
 2028 0094 0B       		.uleb128 0xb
 2029 0095 3B       		.uleb128 0x3b
 2030 0096 0B       		.uleb128 0xb
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 49


 2031 0097 49       		.uleb128 0x49
 2032 0098 13       		.uleb128 0x13
 2033 0099 02       		.uleb128 0x2
 2034 009a 18       		.uleb128 0x18
 2035 009b 00       		.byte	0
 2036 009c 00       		.byte	0
 2037 009d 0C       		.uleb128 0xc
 2038 009e 2E       		.uleb128 0x2e
 2039 009f 01       		.byte	0x1
 2040 00a0 3F       		.uleb128 0x3f
 2041 00a1 19       		.uleb128 0x19
 2042 00a2 03       		.uleb128 0x3
 2043 00a3 0E       		.uleb128 0xe
 2044 00a4 3A       		.uleb128 0x3a
 2045 00a5 0B       		.uleb128 0xb
 2046 00a6 3B       		.uleb128 0x3b
 2047 00a7 05       		.uleb128 0x5
 2048 00a8 27       		.uleb128 0x27
 2049 00a9 19       		.uleb128 0x19
 2050 00aa 11       		.uleb128 0x11
 2051 00ab 01       		.uleb128 0x1
 2052 00ac 12       		.uleb128 0x12
 2053 00ad 06       		.uleb128 0x6
 2054 00ae 40       		.uleb128 0x40
 2055 00af 18       		.uleb128 0x18
 2056 00b0 9642     		.uleb128 0x2116
 2057 00b2 19       		.uleb128 0x19
 2058 00b3 01       		.uleb128 0x1
 2059 00b4 13       		.uleb128 0x13
 2060 00b5 00       		.byte	0
 2061 00b6 00       		.byte	0
 2062 00b7 0D       		.uleb128 0xd
 2063 00b8 05       		.uleb128 0x5
 2064 00b9 00       		.byte	0
 2065 00ba 03       		.uleb128 0x3
 2066 00bb 0E       		.uleb128 0xe
 2067 00bc 3A       		.uleb128 0x3a
 2068 00bd 0B       		.uleb128 0xb
 2069 00be 3B       		.uleb128 0x3b
 2070 00bf 05       		.uleb128 0x5
 2071 00c0 49       		.uleb128 0x49
 2072 00c1 13       		.uleb128 0x13
 2073 00c2 02       		.uleb128 0x2
 2074 00c3 18       		.uleb128 0x18
 2075 00c4 00       		.byte	0
 2076 00c5 00       		.byte	0
 2077 00c6 0E       		.uleb128 0xe
 2078 00c7 0F       		.uleb128 0xf
 2079 00c8 00       		.byte	0
 2080 00c9 0B       		.uleb128 0xb
 2081 00ca 0B       		.uleb128 0xb
 2082 00cb 49       		.uleb128 0x49
 2083 00cc 13       		.uleb128 0x13
 2084 00cd 00       		.byte	0
 2085 00ce 00       		.byte	0
 2086 00cf 0F       		.uleb128 0xf
 2087 00d0 2E       		.uleb128 0x2e
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 50


 2088 00d1 00       		.byte	0
 2089 00d2 3F       		.uleb128 0x3f
 2090 00d3 19       		.uleb128 0x19
 2091 00d4 03       		.uleb128 0x3
 2092 00d5 0E       		.uleb128 0xe
 2093 00d6 3A       		.uleb128 0x3a
 2094 00d7 0B       		.uleb128 0xb
 2095 00d8 3B       		.uleb128 0x3b
 2096 00d9 05       		.uleb128 0x5
 2097 00da 27       		.uleb128 0x27
 2098 00db 19       		.uleb128 0x19
 2099 00dc 11       		.uleb128 0x11
 2100 00dd 01       		.uleb128 0x1
 2101 00de 12       		.uleb128 0x12
 2102 00df 06       		.uleb128 0x6
 2103 00e0 40       		.uleb128 0x40
 2104 00e1 18       		.uleb128 0x18
 2105 00e2 9742     		.uleb128 0x2117
 2106 00e4 19       		.uleb128 0x19
 2107 00e5 00       		.byte	0
 2108 00e6 00       		.byte	0
 2109 00e7 10       		.uleb128 0x10
 2110 00e8 2E       		.uleb128 0x2e
 2111 00e9 00       		.byte	0
 2112 00ea 3F       		.uleb128 0x3f
 2113 00eb 19       		.uleb128 0x19
 2114 00ec 03       		.uleb128 0x3
 2115 00ed 0E       		.uleb128 0xe
 2116 00ee 3A       		.uleb128 0x3a
 2117 00ef 0B       		.uleb128 0xb
 2118 00f0 3B       		.uleb128 0x3b
 2119 00f1 05       		.uleb128 0x5
 2120 00f2 27       		.uleb128 0x27
 2121 00f3 19       		.uleb128 0x19
 2122 00f4 11       		.uleb128 0x11
 2123 00f5 01       		.uleb128 0x1
 2124 00f6 12       		.uleb128 0x12
 2125 00f7 06       		.uleb128 0x6
 2126 00f8 40       		.uleb128 0x40
 2127 00f9 18       		.uleb128 0x18
 2128 00fa 9642     		.uleb128 0x2116
 2129 00fc 19       		.uleb128 0x19
 2130 00fd 00       		.byte	0
 2131 00fe 00       		.byte	0
 2132 00ff 11       		.uleb128 0x11
 2133 0100 34       		.uleb128 0x34
 2134 0101 00       		.byte	0
 2135 0102 03       		.uleb128 0x3
 2136 0103 0E       		.uleb128 0xe
 2137 0104 3A       		.uleb128 0x3a
 2138 0105 0B       		.uleb128 0xb
 2139 0106 3B       		.uleb128 0x3b
 2140 0107 0B       		.uleb128 0xb
 2141 0108 49       		.uleb128 0x49
 2142 0109 13       		.uleb128 0x13
 2143 010a 3F       		.uleb128 0x3f
 2144 010b 19       		.uleb128 0x19
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 51


 2145 010c 3C       		.uleb128 0x3c
 2146 010d 19       		.uleb128 0x19
 2147 010e 00       		.byte	0
 2148 010f 00       		.byte	0
 2149 0110 12       		.uleb128 0x12
 2150 0111 34       		.uleb128 0x34
 2151 0112 00       		.byte	0
 2152 0113 03       		.uleb128 0x3
 2153 0114 0E       		.uleb128 0xe
 2154 0115 3A       		.uleb128 0x3a
 2155 0116 0B       		.uleb128 0xb
 2156 0117 3B       		.uleb128 0x3b
 2157 0118 05       		.uleb128 0x5
 2158 0119 49       		.uleb128 0x49
 2159 011a 13       		.uleb128 0x13
 2160 011b 3F       		.uleb128 0x3f
 2161 011c 19       		.uleb128 0x19
 2162 011d 3C       		.uleb128 0x3c
 2163 011e 19       		.uleb128 0x19
 2164 011f 00       		.byte	0
 2165 0120 00       		.byte	0
 2166 0121 13       		.uleb128 0x13
 2167 0122 34       		.uleb128 0x34
 2168 0123 00       		.byte	0
 2169 0124 03       		.uleb128 0x3
 2170 0125 0E       		.uleb128 0xe
 2171 0126 3A       		.uleb128 0x3a
 2172 0127 0B       		.uleb128 0xb
 2173 0128 3B       		.uleb128 0x3b
 2174 0129 0B       		.uleb128 0xb
 2175 012a 49       		.uleb128 0x49
 2176 012b 13       		.uleb128 0x13
 2177 012c 3F       		.uleb128 0x3f
 2178 012d 19       		.uleb128 0x19
 2179 012e 02       		.uleb128 0x2
 2180 012f 18       		.uleb128 0x18
 2181 0130 00       		.byte	0
 2182 0131 00       		.byte	0
 2183 0132 14       		.uleb128 0x14
 2184 0133 26       		.uleb128 0x26
 2185 0134 00       		.byte	0
 2186 0135 49       		.uleb128 0x49
 2187 0136 13       		.uleb128 0x13
 2188 0137 00       		.byte	0
 2189 0138 00       		.byte	0
 2190 0139 00       		.byte	0
 2191              		.section	.debug_aranges,"",%progbits
 2192 0000 6C000000 		.4byte	0x6c
 2193 0004 0200     		.2byte	0x2
 2194 0006 00000000 		.4byte	.Ldebug_info0
 2195 000a 04       		.byte	0x4
 2196 000b 00       		.byte	0
 2197 000c 0000     		.2byte	0
 2198 000e 0000     		.2byte	0
 2199 0010 00000000 		.4byte	.LFB63
 2200 0014 30000000 		.4byte	.LFE63-.LFB63
 2201 0018 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 52


 2202 001c 50020000 		.4byte	.LFE64-.LFB64
 2203 0020 00000000 		.4byte	.LFB65
 2204 0024 DC060000 		.4byte	.LFE65-.LFB65
 2205 0028 00000000 		.4byte	.LFB66
 2206 002c 0C000000 		.4byte	.LFE66-.LFB66
 2207 0030 00000000 		.4byte	.LFB67
 2208 0034 0C000000 		.4byte	.LFE67-.LFB67
 2209 0038 00000000 		.4byte	.LFB68
 2210 003c 0C000000 		.4byte	.LFE68-.LFB68
 2211 0040 00000000 		.4byte	.LFB69
 2212 0044 0C000000 		.4byte	.LFE69-.LFB69
 2213 0048 00000000 		.4byte	.LFB70
 2214 004c 0C000000 		.4byte	.LFE70-.LFB70
 2215 0050 00000000 		.4byte	.LFB71
 2216 0054 0C000000 		.4byte	.LFE71-.LFB71
 2217 0058 00000000 		.4byte	.LFB72
 2218 005c 0C000000 		.4byte	.LFE72-.LFB72
 2219 0060 00000000 		.4byte	.LFB73
 2220 0064 0C000000 		.4byte	.LFE73-.LFB73
 2221 0068 00000000 		.4byte	0
 2222 006c 00000000 		.4byte	0
 2223              		.section	.debug_ranges,"",%progbits
 2224              	.Ldebug_ranges0:
 2225 0000 00000000 		.4byte	.LFB63
 2226 0004 30000000 		.4byte	.LFE63
 2227 0008 00000000 		.4byte	.LFB64
 2228 000c 50020000 		.4byte	.LFE64
 2229 0010 00000000 		.4byte	.LFB65
 2230 0014 DC060000 		.4byte	.LFE65
 2231 0018 00000000 		.4byte	.LFB66
 2232 001c 0C000000 		.4byte	.LFE66
 2233 0020 00000000 		.4byte	.LFB67
 2234 0024 0C000000 		.4byte	.LFE67
 2235 0028 00000000 		.4byte	.LFB68
 2236 002c 0C000000 		.4byte	.LFE68
 2237 0030 00000000 		.4byte	.LFB69
 2238 0034 0C000000 		.4byte	.LFE69
 2239 0038 00000000 		.4byte	.LFB70
 2240 003c 0C000000 		.4byte	.LFE70
 2241 0040 00000000 		.4byte	.LFB71
 2242 0044 0C000000 		.4byte	.LFE71
 2243 0048 00000000 		.4byte	.LFB72
 2244 004c 0C000000 		.4byte	.LFE72
 2245 0050 00000000 		.4byte	.LFB73
 2246 0054 0C000000 		.4byte	.LFE73
 2247 0058 00000000 		.4byte	0
 2248 005c 00000000 		.4byte	0
 2249              		.section	.debug_line,"",%progbits
 2250              	.Ldebug_line0:
 2251 0000 DA020000 		.section	.debug_str,"MS",%progbits,1
 2251      02004701 
 2251      00000201 
 2251      FB0E0D00 
 2251      01010101 
 2252              	.LASF37:
 2253 0000 696E7146 		.ascii	"inqFlagsOld\000"
 2253      6C616773 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 53


 2253      4F6C6400 
 2254              	.LASF28:
 2255 000c 4D494449 		.ascii	"MIDI2_UART_RXISR_ExitCallback\000"
 2255      325F5541 
 2255      52545F52 
 2255      58495352 
 2255      5F457869 
 2256              	.LASF9:
 2257 002a 5F5F696E 		.ascii	"__int32_t\000"
 2257      7433325F 
 2257      7400
 2258              	.LASF27:
 2259 0034 4D494449 		.ascii	"MIDI2_UART_RXISR_EntryCallback\000"
 2259      325F5541 
 2259      52545F52 
 2259      58495352 
 2259      5F456E74 
 2260              	.LASF38:
 2261 0053 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2261      4320342E 
 2261      392E3320 
 2261      32303135 
 2261      30333033 
 2262 0086 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2262      20726576 
 2262      6973696F 
 2262      6E203232 
 2262      31323230 
 2263 00b9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2263      66756E63 
 2263      74696F6E 
 2263      2D736563 
 2263      74696F6E 
 2264              	.LASF26:
 2265 00e1 4D494449 		.ascii	"MIDI1_UART_RXISR_ExitCallback\000"
 2265      315F5541 
 2265      52545F52 
 2265      58495352 
 2265      5F457869 
 2266              	.LASF33:
 2267 00ff 75736241 		.ascii	"usbActivityCounter\000"
 2267      63746976 
 2267      69747943 
 2267      6F756E74 
 2267      657200
 2268              	.LASF12:
 2269 0112 666C6F61 		.ascii	"float\000"
 2269      7400
 2270              	.LASF6:
 2271 0118 6C6F6E67 		.ascii	"long long int\000"
 2271      206C6F6E 
 2271      6720696E 
 2271      7400
 2272              	.LASF1:
 2273 0126 756E7369 		.ascii	"unsigned char\000"
 2273      676E6564 
 2273      20636861 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 54


 2273      7200
 2274              	.LASF5:
 2275 0134 6C6F6E67 		.ascii	"long unsigned int\000"
 2275      20756E73 
 2275      69676E65 
 2275      6420696E 
 2275      7400
 2276              	.LASF3:
 2277 0146 73686F72 		.ascii	"short unsigned int\000"
 2277      7420756E 
 2277      7369676E 
 2277      65642069 
 2277      6E7400
 2278              	.LASF18:
 2279 0159 6361626C 		.ascii	"cable\000"
 2279      6500
 2280              	.LASF31:
 2281 015f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2281      52784275 
 2281      66666572 
 2281      00
 2282              	.LASF40:
 2283 016c 433A5C55 		.ascii	"C:\\Users\\214016586\\Documents\\GitHub\\Crumar-Acc"
 2283      73657273 
 2283      5C323134 
 2283      30313635 
 2283      38365C44 
 2284 019a 6F646572 		.ascii	"oder-Midi\\Accoder_MIDI.cydsn\000"
 2284      2D4D6964 
 2284      695C4163 
 2284      636F6465 
 2284      725F4D49 
 2285              	.LASF13:
 2286 01b7 646F7562 		.ascii	"double\000"
 2286      6C6500
 2287              	.LASF16:
 2288 01be 6D61696E 		.ascii	"main\000"
 2288      00
 2289              	.LASF23:
 2290 01c3 5553425F 		.ascii	"USB_MIDI2_ProcessUsbOut_EntryCallback\000"
 2290      4D494449 
 2290      325F5072 
 2290      6F636573 
 2290      73557362 
 2291              	.LASF36:
 2292 01e9 63734275 		.ascii	"csButtChange\000"
 2292      74744368 
 2292      616E6765 
 2292      00
 2293              	.LASF20:
 2294 01f6 536C6565 		.ascii	"SleepIsr\000"
 2294      70497372 
 2294      00
 2295              	.LASF21:
 2296 01ff 5553425F 		.ascii	"USB_MIDI1_ProcessUsbOut_EntryCallback\000"
 2296      4D494449 
 2296      315F5072 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 55


 2296      6F636573 
 2296      73557362 
 2297              	.LASF8:
 2298 0225 756E7369 		.ascii	"unsigned int\000"
 2298      676E6564 
 2298      20696E74 
 2298      00
 2299              	.LASF7:
 2300 0232 6C6F6E67 		.ascii	"long long unsigned int\000"
 2300      206C6F6E 
 2300      6720756E 
 2300      7369676E 
 2300      65642069 
 2301              	.LASF34:
 2302 0249 63734275 		.ascii	"csButtStates\000"
 2302      74745374 
 2302      61746573 
 2302      00
 2303              	.LASF24:
 2304 0256 5553425F 		.ascii	"USB_MIDI2_ProcessUsbOut_ExitCallback\000"
 2304      4D494449 
 2304      325F5072 
 2304      6F636573 
 2304      73557362 
 2305              	.LASF25:
 2306 027b 4D494449 		.ascii	"MIDI1_UART_RXISR_EntryCallback\000"
 2306      315F5541 
 2306      52545F52 
 2306      58495352 
 2306      5F456E74 
 2307              	.LASF10:
 2308 029a 696E7433 		.ascii	"int32_t\000"
 2308      325F7400 
 2309              	.LASF15:
 2310 02a2 73697A65 		.ascii	"sizetype\000"
 2310      74797065 
 2310      00
 2311              	.LASF32:
 2312 02ab 4D494449 		.ascii	"MIDI_IDENTITY_REPLY\000"
 2312      5F494445 
 2312      4E544954 
 2312      595F5245 
 2312      504C5900 
 2313              	.LASF29:
 2314 02bf 5553425F 		.ascii	"USB_MIDI1_InqFlags\000"
 2314      4D494449 
 2314      315F496E 
 2314      71466C61 
 2314      677300
 2315              	.LASF39:
 2316 02d2 6D61696E 		.ascii	"main.c\000"
 2316      2E6300
 2317              	.LASF14:
 2318 02d9 63686172 		.ascii	"char\000"
 2318      00
 2319              	.LASF17:
 2320 02de 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccC2vYiD.s 			page 56


 2320      63616C6C 
 2320      6261636B 
 2320      4C6F6361 
 2320      6C4D6964 
 2321              	.LASF19:
 2322 02f9 6D696469 		.ascii	"midiMsg\000"
 2322      4D736700 
 2323              	.LASF2:
 2324 0301 73686F72 		.ascii	"short int\000"
 2324      7420696E 
 2324      7400
 2325              	.LASF11:
 2326 030b 75696E74 		.ascii	"uint8\000"
 2326      3800
 2327              	.LASF4:
 2328 0311 6C6F6E67 		.ascii	"long int\000"
 2328      20696E74 
 2328      00
 2329              	.LASF0:
 2330 031a 7369676E 		.ascii	"signed char\000"
 2330      65642063 
 2330      68617200 
 2331              	.LASF22:
 2332 0326 5553425F 		.ascii	"USB_MIDI1_ProcessUsbOut_ExitCallback\000"
 2332      4D494449 
 2332      315F5072 
 2332      6F636573 
 2332      73557362 
 2333              	.LASF30:
 2334 034b 5553425F 		.ascii	"USB_MIDI2_InqFlags\000"
 2334      4D494449 
 2334      325F496E 
 2334      71466C61 
 2334      677300
 2335              	.LASF35:
 2336 035e 63734275 		.ascii	"csButtStatesOld\000"
 2336      74745374 
 2336      61746573 
 2336      4F6C6400 
 2337              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
