ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	MIDI_IDENTITY_REPLY
  19              		.section	.rodata
  20              		.align	2
  21              		.type	MIDI_IDENTITY_REPLY, %object
  22              		.size	MIDI_IDENTITY_REPLY, 14
  23              	MIDI_IDENTITY_REPLY:
  24 0000 F0       		.byte	-16
  25 0001 7E       		.byte	126
  26 0002 7F       		.byte	127
  27 0003 06       		.byte	6
  28 0004 02       		.byte	2
  29 0005 7D       		.byte	125
  30 0006 B4       		.byte	-76
  31 0007 04       		.byte	4
  32 0008 32       		.byte	50
  33 0009 D2       		.byte	-46
  34 000a 01       		.byte	1
  35 000b 00       		.byte	0
  36 000c 00       		.byte	0
  37 000d 00       		.byte	0
  38              		.global	usbActivityCounter
  39 000e 0000     		.bss
  40              		.type	usbActivityCounter, %object
  41              		.size	usbActivityCounter, 1
  42              	usbActivityCounter:
  43 0000 00       		.space	1
  44              		.global	csButtStates
  45              		.type	csButtStates, %object
  46              		.size	csButtStates, 1
  47              	csButtStates:
  48 0001 00       		.space	1
  49              		.global	csButtStatesOld
  50              		.type	csButtStatesOld, %object
  51              		.size	csButtStatesOld, 1
  52              	csButtStatesOld:
  53 0002 00       		.space	1
  54              		.global	csButtChange
  55              		.type	csButtChange, %object
  56              		.size	csButtChange, 1
  57              	csButtChange:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 2


  58 0003 00       		.space	1
  59              		.global	inqFlagsOld
  60              		.type	inqFlagsOld, %object
  61              		.size	inqFlagsOld, 1
  62              	inqFlagsOld:
  63 0004 00       		.space	1
  64              		.section	.text.SleepIsr,"ax",%progbits
  65              		.align	2
  66              		.global	SleepIsr
  67              		.thumb
  68              		.thumb_func
  69              		.type	SleepIsr, %function
  70              	SleepIsr:
  71              	.LFB63:
  72              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 1.0
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This example project demonstrates the MIDI interface device operation.  The 
   8:main.c        **** *  project enumerates as a USB Audio Device with the MIDI feature and does not 
   9:main.c        **** *  require additional drivers. The main goal of the USB MIDI interface is to 
  10:main.c        **** *  transfer and convert MIDI data between external MIDI devices that use the 
  11:main.c        **** *  UART interface, and a PC through the USB bus.			
  12:main.c        **** *   
  13:main.c        **** * Related Document:
  14:main.c        **** *  Universal Serial Bus Specification Revision 2.0 
  15:main.c        **** *  Universal Serial Bus Device Class Definition for MIDI Devices Release 1.0
  16:main.c        **** *  MIDI 1.0 Detailed Specification Document Version 4.2
  17:main.c        **** *
  18:main.c        **** ********************************************************************************
  19:main.c        **** * Copyright 2012-2015, Cypress Semiconductor Corporation. All rights reserved.
  20:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  21:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  22:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  23:main.c        **** * accompanying the software package from which you obtained this software.
  24:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  25:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  26:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  27:main.c        **** *******************************************************************************/
  28:main.c        **** 
  29:main.c        **** #include <project.h>
  30:main.c        **** 
  31:main.c        **** #define BUTT1	                (0x01u)
  32:main.c        **** #define BUTT2	                (0x02u)
  33:main.c        **** 
  34:main.c        **** #define DEVICE                  (0u)
  35:main.c        **** #define MIDI_MSG_SIZE           (4u)
  36:main.c        **** 
  37:main.c        **** /*MIDI Message Fields */
  38:main.c        **** #define MIDI_MSG_TYPE           (0u)
  39:main.c        **** #define MIDI_NOTE_NUMBER        (1u)
  40:main.c        **** #define MIDI_NOTE_VELOCITY      (2u)
  41:main.c        **** 
  42:main.c        **** /* MIDI Notes*/
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 3


  43:main.c        **** #define NOTE_72                 (72u)
  44:main.c        **** #define NOTE_76                 (76u)
  45:main.c        **** 
  46:main.c        **** /* MIDI Notes Velocity*/
  47:main.c        **** #define VOLUME_OFF              (0u)
  48:main.c        **** #define VOLUME_ON               (100u)
  49:main.c        **** 
  50:main.c        **** #define USB_SUSPEND_TIMEOUT     (2u)
  51:main.c        **** 
  52:main.c        **** /* Identity Reply message */
  53:main.c        **** const uint8 CYCODE MIDI_IDENTITY_REPLY[] = {
  54:main.c        ****     0xF0u,      /* SysEx */
  55:main.c        ****     0x7Eu,      /* Non-real time */
  56:main.c        ****     0x7Fu,      /* ID of target device (7F - "All Call") */
  57:main.c        ****     0x06u,      /* Sub-ID#1 - General Information */
  58:main.c        ****     0x02u,      /* Sub-ID#2 - Identity Reply */
  59:main.c        ****     0x7Du,      /* Manufacturer's ID: 7D - Educational Use */
  60:main.c        ****     0xB4u, 0x04u,               /* Family code */
  61:main.c        ****     0x32u, 0xD2u,               /* Model number */
  62:main.c        ****     0x01u, 0x00u, 0x00u, 0x00u, /* Version number */
  63:main.c        ****     /*0xF7         End of SysEx automatically appended */
  64:main.c        **** };
  65:main.c        **** 
  66:main.c        **** /* Need for Identity Reply message */
  67:main.c        **** extern volatile uint8 USB_MIDI1_InqFlags;
  68:main.c        **** extern volatile uint8 USB_MIDI2_InqFlags;
  69:main.c        **** 
  70:main.c        **** volatile uint8 usbActivityCounter = 0u;
  71:main.c        **** 
  72:main.c        **** uint8 csButtStates = 0u;
  73:main.c        **** uint8 csButtStatesOld = 0u;
  74:main.c        **** uint8 csButtChange = 0u;
  75:main.c        **** uint8 inqFlagsOld = 0u;
  76:main.c        **** 
  77:main.c        **** 
  78:main.c        **** /*******************************************************************************
  79:main.c        **** * Function Name: SleepIsr
  80:main.c        **** ********************************************************************************
  81:main.c        **** * Summary:
  82:main.c        **** *  The sleep interrupt-service-routine used to determine a sleep condition.
  83:main.c        **** *  The device goes into the Suspend state when there is a constant Idle 
  84:main.c        **** *  state on its upstream-facing bus-lines for more than 3.0 ms. 
  85:main.c        **** *  The device must be suspended drawing only suspend current from the 
  86:main.c        **** *  bus after no more than 10 ms of the bus inactivity on all its ports.
  87:main.c        **** *  This ISR is run each 4 ms, so after a second turn without the USB activity,  
  88:main.c        **** *  the device should be suspended.
  89:main.c        **** *
  90:main.c        **** *******************************************************************************/
  91:main.c        **** CY_ISR(SleepIsr)
  92:main.c        **** {
  73              		.loc 1 92 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 1, uses_anonymous_args = 0
  77 0000 80B5     		push	{r7, lr}
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 7, -8
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 4


  80              		.cfi_offset 14, -4
  81 0002 00AF     		add	r7, sp, #0
  82              		.cfi_def_cfa_register 7
  93:main.c        ****     /* Check USB activity */
  94:main.c        ****     if(0u != USB_CheckActivity()) 
  83              		.loc 1 94 0
  84 0004 FFF7FEFF 		bl	USB_CheckActivity
  85 0008 0346     		mov	r3, r0
  86 000a 002B     		cmp	r3, #0
  87 000c 03D0     		beq	.L2
  95:main.c        ****     {
  96:main.c        ****         usbActivityCounter = 0u;
  88              		.loc 1 96 0
  89 000e 074B     		ldr	r3, .L4
  90 0010 0022     		movs	r2, #0
  91 0012 1A70     		strb	r2, [r3]
  92 0014 06E0     		b	.L3
  93              	.L2:
  97:main.c        ****     } 
  98:main.c        ****     else 
  99:main.c        ****     {
 100:main.c        ****         usbActivityCounter++;
  94              		.loc 1 100 0
  95 0016 054B     		ldr	r3, .L4
  96 0018 1B78     		ldrb	r3, [r3]
  97 001a DBB2     		uxtb	r3, r3
  98 001c 0133     		adds	r3, r3, #1
  99 001e DAB2     		uxtb	r2, r3
 100 0020 024B     		ldr	r3, .L4
 101 0022 1A70     		strb	r2, [r3]
 102              	.L3:
 101:main.c        ****     }
 102:main.c        ****     /* Clear Pending Interrupt */
 103:main.c        ****     SleepTimer_GetStatus();
 103              		.loc 1 103 0
 104 0024 FFF7FEFF 		bl	SleepTimer_GetStatus
 104:main.c        **** }
 105              		.loc 1 104 0
 106 0028 80BD     		pop	{r7, pc}
 107              	.L5:
 108 002a 00BF     		.align	2
 109              	.L4:
 110 002c 00000000 		.word	usbActivityCounter
 111              		.cfi_endproc
 112              	.LFE63:
 113              		.size	SleepIsr, .-SleepIsr
 114              		.section	.text.main,"ax",%progbits
 115              		.align	2
 116              		.global	main
 117              		.thumb
 118              		.thumb_func
 119              		.type	main, %function
 120              	main:
 121              	.LFB64:
 105:main.c        **** 
 106:main.c        **** 
 107:main.c        **** /*******************************************************************************
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 5


 108:main.c        **** * Function Name: main
 109:main.c        **** ********************************************************************************
 110:main.c        **** * Summary:
 111:main.c        **** *       1. Starts the USBFS device and waits for enumaration.
 112:main.c        **** *
 113:main.c        **** *******************************************************************************/
 114:main.c        **** int main()
 115:main.c        **** {
 122              		.loc 1 115 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 8
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0000 80B5     		push	{r7, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 82B0     		sub	sp, sp, #8
 131              		.cfi_def_cfa_offset 16
 132 0004 00AF     		add	r7, sp, #0
 133              		.cfi_def_cfa_register 7
 116:main.c        ****     uint8 midiMsg[MIDI_MSG_SIZE];    
 117:main.c        **** 
 118:main.c        ****     /* Enable Global Interrupts */
 119:main.c        ****     CyGlobalIntEnable;
 134              		.loc 1 119 0
 135              	@ 119 "main.c" 1
 136 0006 62B6     		CPSIE   i
 137              	@ 0 "" 2
 120:main.c        **** 
 121:main.c        ****     /* Start USBFS device 0 with VDDD operation */
 122:main.c        ****     USB_Start(DEVICE, USB_DWR_VDDD_OPERATION); 
 138              		.loc 1 122 0
 139              		.thumb
 140 0008 0020     		movs	r0, #0
 141 000a 0221     		movs	r1, #2
 142 000c FFF7FEFF 		bl	USB_Start
 143              	.L24:
 123:main.c        ****     
 124:main.c        ****     /*Turn on some tabs*/
 125:main.c        **** //    Tabs_1_Write(0xff);
 126:main.c        **** //    Tabs_2_Write(0xff);
 127:main.c        **** //    Tabs_3_Write(0xff);
 128:main.c        **** //    Tabs_4_Write(0xff);
 129:main.c        ****     
 130:main.c        **** //    Chords_Bass_Notes_Write(0xff);
 131:main.c        **** //    Chords_Notes_Write(0xff);
 132:main.c        ****  //   Bass_Notes_Write(0xff);
 133:main.c        **** //    Chorus_Speed_Write(0xff);
 134:main.c        ****  //   Control_Reg_10_Write(0xff);
 135:main.c        ****  //   Control_Reg_11_Write(0xff);
 136:main.c        ****     
 137:main.c        ****   //  Keys_Notes_5_Write(0x40);
 138:main.c        ****     
 139:main.c        ****     
 140:main.c        ****     //Keys_Notes_5_Write(0x40);
 141:main.c        **** 
 142:main.c        ****     while(1u)
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 6


 143:main.c        ****     {
 144:main.c        ****         /* Host can send double SET_INTERFACE request */
 145:main.c        ****         if(0u != USB_IsConfigurationChanged())
 144              		.loc 1 145 0
 145 0010 FFF7FEFF 		bl	USB_IsConfigurationChanged
 146 0014 0346     		mov	r3, r0
 147 0016 002B     		cmp	r3, #0
 148 0018 11D0     		beq	.L7
 146:main.c        ****         {
 147:main.c        ****             /* Initialize IN endpoints when device configured */
 148:main.c        ****             if(0u != USB_GetConfiguration())   
 149              		.loc 1 148 0
 150 001a FFF7FEFF 		bl	USB_GetConfiguration
 151 001e 0346     		mov	r3, r0
 152 0020 002B     		cmp	r3, #0
 153 0022 0AD0     		beq	.L8
 149:main.c        ****             {
 150:main.c        ****                 /* Power ON CY8CKIT-044 board */
 151:main.c        ****                 MIDI_PWR_Write(0u); 
 154              		.loc 1 151 0
 155 0024 0020     		movs	r0, #0
 156 0026 FFF7FEFF 		bl	MIDI_PWR_Write
 152:main.c        ****                 
 153:main.c        ****                 /* Start ISR to determine sleep condition */		
 154:main.c        ****                 Sleep_isr_StartEx(SleepIsr);
 157              		.loc 1 154 0
 158 002a 7148     		ldr	r0, .L25
 159 002c FFF7FEFF 		bl	Sleep_isr_StartEx
 155:main.c        ****                 
 156:main.c        ****                 /* Start SleepTimer's operation */
 157:main.c        ****                 SleepTimer_Start();
 160              		.loc 1 157 0
 161 0030 FFF7FEFF 		bl	SleepTimer_Start
 158:main.c        ****                 
 159:main.c        ****             	/* Enable output endpoint */
 160:main.c        ****                 USB_MIDI_Init();
 162              		.loc 1 160 0
 163 0034 FFF7FEFF 		bl	USB_MIDI_Init
 164 0038 01E0     		b	.L7
 165              	.L8:
 161:main.c        ****             }
 162:main.c        ****             else
 163:main.c        ****             {
 164:main.c        ****                 SleepTimer_Stop();
 166              		.loc 1 164 0
 167 003a FFF7FEFF 		bl	SleepTimer_Stop
 168              	.L7:
 165:main.c        ****             }    
 166:main.c        ****         }        
 167:main.c        ****         
 168:main.c        ****         /* Service USB MIDI when device is configured */
 169:main.c        ****         if(0u != USB_GetConfiguration())    
 169              		.loc 1 169 0
 170 003e FFF7FEFF 		bl	USB_GetConfiguration
 171 0042 0346     		mov	r3, r0
 172 0044 002B     		cmp	r3, #0
 173 0046 00F0D180 		beq	.L9
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 7


 170:main.c        ****         {
 171:main.c        ****             /* Call this API from UART RX ISR for Auto DMA mode */
 172:main.c        ****             #if(!USB_EP_MANAGEMENT_DMA_AUTO) 
 173:main.c        ****                 USB_MIDI_IN_Service();
 174              		.loc 1 173 0
 175 004a FFF7FEFF 		bl	USB_MIDI_IN_Service
 174:main.c        ****             #endif
 175:main.c        ****             /* In Manual EP Memory Management mode OUT_EP_Service() 
 176:main.c        ****             *  may have to be called from main foreground or from OUT EP ISR
 177:main.c        ****             */
 178:main.c        ****             #if(!USB_EP_MANAGEMENT_DMA_AUTO) 
 179:main.c        ****                 USB_MIDI_OUT_Service();
 176              		.loc 1 179 0
 177 004e FFF7FEFF 		bl	USB_MIDI_OUT_Service
 180:main.c        ****             #endif
 181:main.c        **** 
 182:main.c        ****             /* Sending Identity Reply Universal System Exclusive message 
 183:main.c        ****              * back to computer */
 184:main.c        ****             if(0u != (USB_MIDI1_InqFlags & USB_INQ_IDENTITY_REQ_FLAG))
 178              		.loc 1 184 0
 179 0052 684B     		ldr	r3, .L25+4
 180 0054 1B78     		ldrb	r3, [r3]
 181 0056 DBB2     		uxtb	r3, r3
 182 0058 03F00203 		and	r3, r3, #2
 183 005c 002B     		cmp	r3, #0
 184 005e 0CD0     		beq	.L10
 185:main.c        ****             {
 186:main.c        ****                 USB_PutUsbMidiIn(sizeof(MIDI_IDENTITY_REPLY), \
 185              		.loc 1 186 0
 186 0060 0E20     		movs	r0, #14
 187 0062 6549     		ldr	r1, .L25+8
 188 0064 0022     		movs	r2, #0
 189 0066 FFF7FEFF 		bl	USB_PutUsbMidiIn
 187:main.c        ****                             (uint8 *)MIDI_IDENTITY_REPLY, USB_MIDI_CABLE_00);
 188:main.c        ****                 USB_MIDI1_InqFlags &= ~USB_INQ_IDENTITY_REQ_FLAG;
 190              		.loc 1 188 0
 191 006a 624B     		ldr	r3, .L25+4
 192 006c 1B78     		ldrb	r3, [r3]
 193 006e DBB2     		uxtb	r3, r3
 194 0070 23F00203 		bic	r3, r3, #2
 195 0074 DAB2     		uxtb	r2, r3
 196 0076 5F4B     		ldr	r3, .L25+4
 197 0078 1A70     		strb	r2, [r3]
 198              	.L10:
 189:main.c        ****             }
 190:main.c        ****             #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 191:main.c        ****                 if(0u != (USB_MIDI2_InqFlags & USB_INQ_IDENTITY_REQ_FLAG))
 199              		.loc 1 191 0
 200 007a 604B     		ldr	r3, .L25+12
 201 007c 1B78     		ldrb	r3, [r3]
 202 007e DBB2     		uxtb	r3, r3
 203 0080 03F00203 		and	r3, r3, #2
 204 0084 002B     		cmp	r3, #0
 205 0086 0CD0     		beq	.L11
 192:main.c        ****                 {
 193:main.c        ****                     USB_PutUsbMidiIn(sizeof(MIDI_IDENTITY_REPLY), \
 206              		.loc 1 193 0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 8


 207 0088 0E20     		movs	r0, #14
 208 008a 5B49     		ldr	r1, .L25+8
 209 008c 1022     		movs	r2, #16
 210 008e FFF7FEFF 		bl	USB_PutUsbMidiIn
 194:main.c        ****                             (uint8 *)MIDI_IDENTITY_REPLY, USB_MIDI_CABLE_01);
 195:main.c        ****                     USB_MIDI2_InqFlags &= ~USB_INQ_IDENTITY_REQ_FLAG;
 211              		.loc 1 195 0
 212 0092 5A4B     		ldr	r3, .L25+12
 213 0094 1B78     		ldrb	r3, [r3]
 214 0096 DBB2     		uxtb	r3, r3
 215 0098 23F00203 		bic	r3, r3, #2
 216 009c DAB2     		uxtb	r2, r3
 217 009e 574B     		ldr	r3, .L25+12
 218 00a0 1A70     		strb	r2, [r3]
 219              	.L11:
 196:main.c        ****                 }
 197:main.c        ****             #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 198:main.c        ****             
 199:main.c        ****             /* Service Keys */
 200:main.c        ****     		if (0u == SW1_Read()) 
 220              		.loc 1 200 0
 221 00a2 FFF7FEFF 		bl	SW1_Read
 222 00a6 0346     		mov	r3, r0
 223 00a8 002B     		cmp	r3, #0
 224 00aa 07D1     		bne	.L12
 201:main.c        ****             {
 202:main.c        ****                 csButtStates |= BUTT1;
 225              		.loc 1 202 0
 226 00ac 544B     		ldr	r3, .L25+16
 227 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 228 00b0 43F00103 		orr	r3, r3, #1
 229 00b4 DAB2     		uxtb	r2, r3
 230 00b6 524B     		ldr	r3, .L25+16
 231 00b8 1A70     		strb	r2, [r3]
 232 00ba 06E0     		b	.L13
 233              	.L12:
 203:main.c        ****             }
 204:main.c        ****             else
 205:main.c        ****             {
 206:main.c        ****                 csButtStates &= ~BUTT1;
 234              		.loc 1 206 0
 235 00bc 504B     		ldr	r3, .L25+16
 236 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 237 00c0 23F00103 		bic	r3, r3, #1
 238 00c4 DAB2     		uxtb	r2, r3
 239 00c6 4E4B     		ldr	r3, .L25+16
 240 00c8 1A70     		strb	r2, [r3]
 241              	.L13:
 207:main.c        ****             }
 208:main.c        ****     		if (0u == SW2_Read()) 
 242              		.loc 1 208 0
 243 00ca FFF7FEFF 		bl	SW2_Read
 244 00ce 0346     		mov	r3, r0
 245 00d0 002B     		cmp	r3, #0
 246 00d2 07D1     		bne	.L14
 209:main.c        ****             {
 210:main.c        ****                 csButtStates |= BUTT2;
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 9


 247              		.loc 1 210 0
 248 00d4 4A4B     		ldr	r3, .L25+16
 249 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 250 00d8 43F00203 		orr	r3, r3, #2
 251 00dc DAB2     		uxtb	r2, r3
 252 00de 484B     		ldr	r3, .L25+16
 253 00e0 1A70     		strb	r2, [r3]
 254 00e2 06E0     		b	.L15
 255              	.L14:
 211:main.c        ****             }
 212:main.c        ****             else
 213:main.c        ****             {
 214:main.c        ****                 csButtStates &= ~BUTT2;
 256              		.loc 1 214 0
 257 00e4 464B     		ldr	r3, .L25+16
 258 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 259 00e8 23F00203 		bic	r3, r3, #2
 260 00ec DAB2     		uxtb	r2, r3
 261 00ee 444B     		ldr	r3, .L25+16
 262 00f0 1A70     		strb	r2, [r3]
 263              	.L15:
 215:main.c        ****             }
 216:main.c        ****             /* Process any button change */
 217:main.c        ****     		if (0u != (csButtChange = csButtStates ^ csButtStatesOld)) 
 264              		.loc 1 217 0
 265 00f2 434B     		ldr	r3, .L25+16
 266 00f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 267 00f6 434B     		ldr	r3, .L25+20
 268 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 269 00fa 5340     		eors	r3, r3, r2
 270 00fc DAB2     		uxtb	r2, r3
 271 00fe 424B     		ldr	r3, .L25+24
 272 0100 1A70     		strb	r2, [r3]
 273 0102 414B     		ldr	r3, .L25+24
 274 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 275 0106 002B     		cmp	r3, #0
 276 0108 4CD0     		beq	.L16
 218:main.c        ****             {
 219:main.c        ****     			csButtStatesOld = csButtStates;
 277              		.loc 1 219 0
 278 010a 3D4B     		ldr	r3, .L25+16
 279 010c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 280 010e 3D4B     		ldr	r3, .L25+20
 281 0110 1A70     		strb	r2, [r3]
 220:main.c        **** 
 221:main.c        ****     			/* All buttons are mapped to Note-On/Off messages */
 222:main.c        ****     			midiMsg[MIDI_MSG_TYPE] = USB_MIDI_NOTE_ON;
 282              		.loc 1 222 0
 283 0112 9023     		movs	r3, #144
 284 0114 3B71     		strb	r3, [r7, #4]
 223:main.c        ****     			
 224:main.c        ****     			/* Button 1 */
 225:main.c        ****     			if (0u != (csButtChange & BUTT1)) 
 285              		.loc 1 225 0
 286 0116 3C4B     		ldr	r3, .L25+24
 287 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 288 011a 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 10


 289 011e 002B     		cmp	r3, #0
 290 0120 12D0     		beq	.L17
 226:main.c        ****                 {
 227:main.c        ****     				/* Button determines note number */			
 228:main.c        ****     				midiMsg[MIDI_NOTE_NUMBER] = NOTE_72;
 291              		.loc 1 228 0
 292 0122 4823     		movs	r3, #72
 293 0124 7B71     		strb	r3, [r7, #5]
 229:main.c        ****     				if (0u != (csButtStates & BUTT1))
 294              		.loc 1 229 0
 295 0126 364B     		ldr	r3, .L25+16
 296 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 297 012a 03F00103 		and	r3, r3, #1
 298 012e 002B     		cmp	r3, #0
 299 0130 02D0     		beq	.L18
 230:main.c        ****                     {
 231:main.c        ****                         /* Note On */
 232:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_ON;		
 300              		.loc 1 232 0
 301 0132 6423     		movs	r3, #100
 302 0134 BB71     		strb	r3, [r7, #6]
 303 0136 01E0     		b	.L19
 304              	.L18:
 233:main.c        ****                     }
 234:main.c        ****     				else
 235:main.c        ****                     {
 236:main.c        ****                         /* Note Off */
 237:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_OFF;			
 305              		.loc 1 237 0
 306 0138 0023     		movs	r3, #0
 307 013a BB71     		strb	r3, [r7, #6]
 308              	.L19:
 238:main.c        ****                     }    
 239:main.c        ****         			/* Put MIDI Note-On/Off message into input endpoint */
 240:main.c        ****                     USB_PutUsbMidiIn(USB_3BYTE_COMMON, midiMsg, USB_MIDI_CABLE_00);
 309              		.loc 1 240 0
 310 013c 3B1D     		adds	r3, r7, #4
 311 013e 0320     		movs	r0, #3
 312 0140 1946     		mov	r1, r3
 313 0142 0022     		movs	r2, #0
 314 0144 FFF7FEFF 		bl	USB_PutUsbMidiIn
 315              	.L17:
 241:main.c        ****     			}
 242:main.c        **** 
 243:main.c        ****     			/* Button 2 */
 244:main.c        ****     			if (0u != (csButtChange & BUTT2))
 316              		.loc 1 244 0
 317 0148 2F4B     		ldr	r3, .L25+24
 318 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 319 014c 03F00203 		and	r3, r3, #2
 320 0150 002B     		cmp	r3, #0
 321 0152 27D0     		beq	.L16
 245:main.c        ****                 {
 246:main.c        ****     				/* Button determines note number */			
 247:main.c        ****     				midiMsg[MIDI_NOTE_NUMBER] = NOTE_76;
 322              		.loc 1 247 0
 323 0154 4C23     		movs	r3, #76
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 11


 324 0156 7B71     		strb	r3, [r7, #5]
 248:main.c        ****     				if (0u != (csButtStates & BUTT2))
 325              		.loc 1 248 0
 326 0158 294B     		ldr	r3, .L25+16
 327 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 328 015c 03F00203 		and	r3, r3, #2
 329 0160 002B     		cmp	r3, #0
 330 0162 02D0     		beq	.L20
 249:main.c        ****                     {
 250:main.c        ****                         /* Note On */
 251:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_ON;  
 331              		.loc 1 251 0
 332 0164 6423     		movs	r3, #100
 333 0166 BB71     		strb	r3, [r7, #6]
 334 0168 01E0     		b	.L21
 335              	.L20:
 252:main.c        ****                     }
 253:main.c        ****     				else
 254:main.c        ****                     {
 255:main.c        ****                         /* Note Off */
 256:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_OFF; 
 336              		.loc 1 256 0
 337 016a 0023     		movs	r3, #0
 338 016c BB71     		strb	r3, [r7, #6]
 339              	.L21:
 257:main.c        ****                     }    
 258:main.c        ****         			/* Put MIDI Note-On/Off message into input endpoint */
 259:main.c        ****     				USB_PutUsbMidiIn(USB_3BYTE_COMMON, midiMsg, USB_MIDI_CABLE_00);
 340              		.loc 1 259 0
 341 016e 3B1D     		adds	r3, r7, #4
 342 0170 0320     		movs	r0, #3
 343 0172 1946     		mov	r1, r3
 344 0174 0022     		movs	r2, #0
 345 0176 FFF7FEFF 		bl	USB_PutUsbMidiIn
 260:main.c        ****                     /* Second Note message */
 261:main.c        ****                     midiMsg[MIDI_MSG_TYPE] = USB_MIDI_NOTE_ON;
 346              		.loc 1 261 0
 347 017a 9023     		movs	r3, #144
 348 017c 3B71     		strb	r3, [r7, #4]
 262:main.c        ****                 	midiMsg[MIDI_NOTE_NUMBER] = NOTE_72;
 349              		.loc 1 262 0
 350 017e 4823     		movs	r3, #72
 351 0180 7B71     		strb	r3, [r7, #5]
 263:main.c        ****                     if (0u != (csButtStates & BUTT2))
 352              		.loc 1 263 0
 353 0182 1F4B     		ldr	r3, .L25+16
 354 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 355 0186 03F00203 		and	r3, r3, #2
 356 018a 002B     		cmp	r3, #0
 357 018c 02D0     		beq	.L22
 264:main.c        ****                     {
 265:main.c        ****                         /* Note On */
 266:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_ON;		    
 358              		.loc 1 266 0
 359 018e 6423     		movs	r3, #100
 360 0190 BB71     		strb	r3, [r7, #6]
 361 0192 01E0     		b	.L23
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 12


 362              	.L22:
 267:main.c        ****                     }
 268:main.c        ****     				else
 269:main.c        ****                     {
 270:main.c        ****                         /* Note Off */
 271:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_OFF;			
 363              		.loc 1 271 0
 364 0194 0023     		movs	r3, #0
 365 0196 BB71     		strb	r3, [r7, #6]
 366              	.L23:
 272:main.c        ****                     }    
 273:main.c        ****         			/* Put MIDI Note-On/Off message into input endpoint */
 274:main.c        ****                     USB_PutUsbMidiIn(USB_3BYTE_COMMON, midiMsg, USB_MIDI_CABLE_00);
 367              		.loc 1 274 0
 368 0198 3B1D     		adds	r3, r7, #4
 369 019a 0320     		movs	r0, #3
 370 019c 1946     		mov	r1, r3
 371 019e 0022     		movs	r2, #0
 372 01a0 FFF7FEFF 		bl	USB_PutUsbMidiIn
 373              	.L16:
 275:main.c        ****     			}
 276:main.c        ****                 #if(USB_EP_MANAGEMENT_DMA_AUTO) 
 277:main.c        ****                    #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 278:main.c        ****                         MIDI1_UART_DisableRxInt();
 279:main.c        ****                         #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 280:main.c        ****                             MIDI2_UART_DisableRxInt();
 281:main.c        ****                         #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 282:main.c        ****                     #endif /* End USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF */            
 283:main.c        ****                     USB_MIDI_IN_Service();
 284:main.c        ****                     #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 285:main.c        ****                         MIDI1_UART_EnableRxInt();
 286:main.c        ****                         #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 287:main.c        ****                             MIDI2_UART_EnableRxInt();
 288:main.c        ****                         #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 289:main.c        ****                     #endif /* End USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF */                
 290:main.c        ****                 #endif
 291:main.c        ****     		}
 292:main.c        ****         
 293:main.c        ****             /* Check if host requested USB Suspend */
 294:main.c        ****             if( usbActivityCounter >= USB_SUSPEND_TIMEOUT ) 
 374              		.loc 1 294 0
 375 01a4 194B     		ldr	r3, .L25+28
 376 01a6 1B78     		ldrb	r3, [r3]
 377 01a8 DBB2     		uxtb	r3, r3
 378 01aa 012B     		cmp	r3, #1
 379 01ac 1ED9     		bls	.L9
 295:main.c        ****             {
 296:main.c        ****                 MIDI1_UART_Sleep();
 380              		.loc 1 296 0
 381 01ae FFF7FEFF 		bl	MIDI1_UART_Sleep
 297:main.c        ****                 MIDI2_UART_Sleep();
 382              		.loc 1 297 0
 383 01b2 FFF7FEFF 		bl	MIDI2_UART_Sleep
 298:main.c        ****                 
 299:main.c        ****                 /* Power OFF CY8CKIT-044 board */
 300:main.c        ****                 MIDI_PWR_Write(1u);     
 384              		.loc 1 300 0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 13


 385 01b6 0120     		movs	r0, #1
 386 01b8 FFF7FEFF 		bl	MIDI_PWR_Write
 301:main.c        ****                 
 302:main.c        ****                 /***************************************************************
 303:main.c        ****                 * Disable USBFS block and set DP Interrupt for wake-up 
 304:main.c        ****                 * from sleep mode. 
 305:main.c        ****                 ***************************************************************/
 306:main.c        ****                 USB_Suspend(); 
 387              		.loc 1 306 0
 388 01bc FFF7FEFF 		bl	USB_Suspend
 307:main.c        ****                 /* Prepares system clocks for sleep mode */
 308:main.c        ****                 CyPmSaveClocks();
 389              		.loc 1 308 0
 390 01c0 FFF7FEFF 		bl	CyPmSaveClocks
 309:main.c        ****                 /***************************************************************
 310:main.c        ****                 * Switch to the Sleep Mode for the PSoC 3 or PSoC 5LP devices:
 311:main.c        ****                 *  - PM_SLEEP_TIME_NONE: wakeup time is defined by PICU source
 312:main.c        ****                 *  - PM_SLEEP_SRC_PICU: PICU wakeup source 
 313:main.c        ****                 ***************************************************************/
 314:main.c        ****                 CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_PICU);
 391              		.loc 1 314 0
 392 01c4 0020     		movs	r0, #0
 393 01c6 4021     		movs	r1, #64
 394 01c8 FFF7FEFF 		bl	CyPmSleep
 315:main.c        ****                 /* Restore clock configuration */
 316:main.c        ****                 CyPmRestoreClocks();
 395              		.loc 1 316 0
 396 01cc FFF7FEFF 		bl	CyPmRestoreClocks
 317:main.c        ****                 /* Enable USBFS block after power-down mode */
 318:main.c        ****                 USB_Resume();
 397              		.loc 1 318 0
 398 01d0 FFF7FEFF 		bl	USB_Resume
 319:main.c        ****                 
 320:main.c        ****                 /* Enable output endpoint */
 321:main.c        ****                 USB_MIDI_Init();
 399              		.loc 1 321 0
 400 01d4 FFF7FEFF 		bl	USB_MIDI_Init
 322:main.c        ****                 
 323:main.c        ****                 /* Power ON CY8CKIT-044 board */
 324:main.c        ****                 MIDI_PWR_Write(0u);
 401              		.loc 1 324 0
 402 01d8 0020     		movs	r0, #0
 403 01da FFF7FEFF 		bl	MIDI_PWR_Write
 325:main.c        ****                 
 326:main.c        ****                 MIDI1_UART_Wakeup();
 404              		.loc 1 326 0
 405 01de FFF7FEFF 		bl	MIDI1_UART_Wakeup
 327:main.c        ****                 MIDI2_UART_Wakeup();
 406              		.loc 1 327 0
 407 01e2 FFF7FEFF 		bl	MIDI2_UART_Wakeup
 328:main.c        ****                 usbActivityCounter = 0u; /* Re-init USB Activity Counter*/
 408              		.loc 1 328 0
 409 01e6 094B     		ldr	r3, .L25+28
 410 01e8 0022     		movs	r2, #0
 411 01ea 1A70     		strb	r2, [r3]
 412              	.L9:
 329:main.c        ****             }
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 14


 330:main.c        ****         }
 331:main.c        ****     }
 413              		.loc 1 331 0
 414 01ec 10E7     		b	.L24
 415              	.L26:
 416 01ee 00BF     		.align	2
 417              	.L25:
 418 01f0 00000000 		.word	SleepIsr
 419 01f4 00000000 		.word	USB_MIDI1_InqFlags
 420 01f8 00000000 		.word	MIDI_IDENTITY_REPLY
 421 01fc 00000000 		.word	USB_MIDI2_InqFlags
 422 0200 00000000 		.word	csButtStates
 423 0204 00000000 		.word	csButtStatesOld
 424 0208 00000000 		.word	csButtChange
 425 020c 00000000 		.word	usbActivityCounter
 426              		.cfi_endproc
 427              	.LFE64:
 428              		.size	main, .-main
 429              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 430              		.align	2
 431              		.global	USB_callbackLocalMidiEvent
 432              		.thumb
 433              		.thumb_func
 434              		.type	USB_callbackLocalMidiEvent, %function
 435              	USB_callbackLocalMidiEvent:
 436              	.LFB65:
 332:main.c        **** }
 333:main.c        **** 
 334:main.c        **** 
 335:main.c        **** /*******************************************************************************
 336:main.c        **** * Function Name: USB_callbackLocalMidiEvent
 337:main.c        **** ********************************************************************************
 338:main.c        **** * Summary: Local processing of the USB MIDI out-events.
 339:main.c        **** *
 340:main.c        **** *******************************************************************************/
 341:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
 342:main.c        **** {
 437              		.loc 1 342 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 8
 440              		@ frame_needed = 1, uses_anonymous_args = 0
 441 0000 80B5     		push	{r7, lr}
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 7, -8
 444              		.cfi_offset 14, -4
 445 0002 82B0     		sub	sp, sp, #8
 446              		.cfi_def_cfa_offset 16
 447 0004 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 449 0006 0346     		mov	r3, r0
 450 0008 3960     		str	r1, [r7]
 451 000a FB71     		strb	r3, [r7, #7]
 343:main.c        ****     /* Support General System On/Off Message. */
 344:main.c        ****     if((0u == (USB_MIDI1_InqFlags & USB_INQ_SYSEX_FLAG)) \
 452              		.loc 1 344 0
 453 000c B74B     		ldr	r3, .L82
 454 000e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 15


 455 0010 DBB2     		uxtb	r3, r3
 456 0012 03F00103 		and	r3, r3, #1
 457 0016 002B     		cmp	r3, #0
 458 0018 1AD1     		bne	.L28
 345:main.c        ****             && (0u != (inqFlagsOld & USB_INQ_SYSEX_FLAG)))
 459              		.loc 1 345 0
 460 001a B54B     		ldr	r3, .L82+4
 461 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 462 001e 03F00103 		and	r3, r3, #1
 463 0022 002B     		cmp	r3, #0
 464 0024 14D0     		beq	.L28
 346:main.c        ****     {
 347:main.c        ****         if(midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX_GEN_MESSAGE)
 465              		.loc 1 347 0
 466 0026 3B68     		ldr	r3, [r7]
 467 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 468 002a 092B     		cmp	r3, #9
 469 002c 10D1     		bne	.L28
 348:main.c        ****         {
 349:main.c        ****             if(midiMsg[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_SYSTEM_ON)
 470              		.loc 1 349 0
 471 002e 3B68     		ldr	r3, [r7]
 472 0030 0133     		adds	r3, r3, #1
 473 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 474 0034 012B     		cmp	r3, #1
 475 0036 03D1     		bne	.L29
 350:main.c        ****             {
 351:main.c        ****                 MIDI_PWR_Write(0u); /* Power ON */
 476              		.loc 1 351 0
 477 0038 0020     		movs	r0, #0
 478 003a FFF7FEFF 		bl	MIDI_PWR_Write
 479 003e 07E0     		b	.L28
 480              	.L29:
 352:main.c        ****             }
 353:main.c        ****             else if(midiMsg[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_SYSTEM_OFF)
 481              		.loc 1 353 0
 482 0040 3B68     		ldr	r3, [r7]
 483 0042 0133     		adds	r3, r3, #1
 484 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 485 0046 022B     		cmp	r3, #2
 486 0048 02D1     		bne	.L28
 354:main.c        ****             {
 355:main.c        ****                 MIDI_PWR_Write(1u); /* Power OFF */
 487              		.loc 1 355 0
 488 004a 0120     		movs	r0, #1
 489 004c FFF7FEFF 		bl	MIDI_PWR_Write
 490              	.L28:
 356:main.c        ****             }
 357:main.c        ****         }
 358:main.c        ****     }
 359:main.c        ****     switch (midiMsg[USB_EVENT_BYTE0])
 491              		.loc 1 359 0
 492 0050 3B68     		ldr	r3, [r7]
 493 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 494 0054 902B     		cmp	r3, #144
 495 0056 06D0     		beq	.L31
 496 0058 B02B     		cmp	r3, #176
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 16


 497 005a 00F06582 		beq	.L32
 498 005e 802B     		cmp	r3, #128
 499 0060 00F0C481 		beq	.L33
 500 0064 2DE3     		b	.L30
 501              	.L31:
 360:main.c        ****     //if(midiMsg[USB_EVENT_BYTE0] == USB_MIDI_NOTE_ON)
 361:main.c        ****     {
 362:main.c        ****     case USB_MIDI_NOTE_ON:
 363:main.c        ****         if(midiMsg[USB_EVENT_BYTE2] == 0x00)  //Note On with velocity 0 should be treated like note
 502              		.loc 1 363 0
 503 0066 3B68     		ldr	r3, [r7]
 504 0068 0233     		adds	r3, r3, #2
 505 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 506 006c 002B     		cmp	r3, #0
 507 006e 40F0E580 		bne	.L34
 364:main.c        ****         {
 365:main.c        ****         switch (midiMsg[USB_EVENT_BYTE1]/8)
 508              		.loc 1 365 0
 509 0072 3B68     		ldr	r3, [r7]
 510 0074 0133     		adds	r3, r3, #1
 511 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 512 0078 DB08     		lsrs	r3, r3, #3
 513 007a DBB2     		uxtb	r3, r3
 514 007c 082B     		cmp	r3, #8
 515 007e 00F2D980 		bhi	.L35
 516 0082 01A2     		adr	r2, .L37
 517 0084 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 518              		.p2align 2
 519              	.L37:
 520 0088 AD000000 		.word	.L36+1
 521 008c D5000000 		.word	.L38+1
 522 0090 01010000 		.word	.L39+1
 523 0094 2D010000 		.word	.L40+1
 524 0098 59010000 		.word	.L41+1
 525 009c 85010000 		.word	.L42+1
 526 00a0 B1010000 		.word	.L43+1
 527 00a4 DD010000 		.word	.L44+1
 528 00a8 09020000 		.word	.L45+1
 529              		.p2align 1
 530              	.L36:
 366:main.c        ****             {
 367:main.c        ****                 case 0: 
 368:main.c        ****                 
 369:main.c        ****                    Keys_Notes_1_Write(Keys_Notes_1_Read() & ~(0x01 << midiMsg[USB_EVENT_BYTE1]));
 531              		.loc 1 369 0
 532 00ac FFF7FEFF 		bl	Keys_Notes_1_Read
 533 00b0 0346     		mov	r3, r0
 534 00b2 DAB2     		uxtb	r2, r3
 535 00b4 3B68     		ldr	r3, [r7]
 536 00b6 0133     		adds	r3, r3, #1
 537 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 538 00ba 1946     		mov	r1, r3
 539 00bc 0123     		movs	r3, #1
 540 00be 8B40     		lsls	r3, r3, r1
 541 00c0 DBB2     		uxtb	r3, r3
 542 00c2 DB43     		mvns	r3, r3
 543 00c4 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 17


 544 00c6 1340     		ands	r3, r3, r2
 545 00c8 DBB2     		uxtb	r3, r3
 546 00ca DBB2     		uxtb	r3, r3
 547 00cc 1846     		mov	r0, r3
 548 00ce FFF7FEFF 		bl	Keys_Notes_1_Write
 370:main.c        ****                    //Keys_Notes_4_Write(0x40);
 371:main.c        ****                     break;
 549              		.loc 1 371 0
 550 00d2 AFE0     		b	.L35
 551              	.L38:
 372:main.c        ****                 
 373:main.c        ****                 case 1:
 374:main.c        ****                 
 375:main.c        ****                    Keys_Notes_2_Write(Keys_Notes_2_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-8))
 552              		.loc 1 375 0
 553 00d4 FFF7FEFF 		bl	Keys_Notes_2_Read
 554 00d8 0346     		mov	r3, r0
 555 00da D9B2     		uxtb	r1, r3
 556 00dc 3B68     		ldr	r3, [r7]
 557 00de 0133     		adds	r3, r3, #1
 558 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 559 00e2 083B     		subs	r3, r3, #8
 560 00e4 0122     		movs	r2, #1
 561 00e6 02FA03F3 		lsl	r3, r2, r3
 562 00ea DBB2     		uxtb	r3, r3
 563 00ec DB43     		mvns	r3, r3
 564 00ee DBB2     		uxtb	r3, r3
 565 00f0 0A46     		mov	r2, r1
 566 00f2 1340     		ands	r3, r3, r2
 567 00f4 DBB2     		uxtb	r3, r3
 568 00f6 DBB2     		uxtb	r3, r3
 569 00f8 1846     		mov	r0, r3
 570 00fa FFF7FEFF 		bl	Keys_Notes_2_Write
 376:main.c        ****                    // Keys_Notes_4_Write(0x02);
 377:main.c        ****                     break;
 571              		.loc 1 377 0
 572 00fe 99E0     		b	.L35
 573              	.L39:
 378:main.c        ****                 
 379:main.c        ****                 case 2:
 380:main.c        ****                 
 381:main.c        ****                    Keys_Notes_3_Write(Keys_Notes_3_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-16)
 574              		.loc 1 381 0
 575 0100 FFF7FEFF 		bl	Keys_Notes_3_Read
 576 0104 0346     		mov	r3, r0
 577 0106 D9B2     		uxtb	r1, r3
 578 0108 3B68     		ldr	r3, [r7]
 579 010a 0133     		adds	r3, r3, #1
 580 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 581 010e 103B     		subs	r3, r3, #16
 582 0110 0122     		movs	r2, #1
 583 0112 02FA03F3 		lsl	r3, r2, r3
 584 0116 DBB2     		uxtb	r3, r3
 585 0118 DB43     		mvns	r3, r3
 586 011a DBB2     		uxtb	r3, r3
 587 011c 0A46     		mov	r2, r1
 588 011e 1340     		ands	r3, r3, r2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 18


 589 0120 DBB2     		uxtb	r3, r3
 590 0122 DBB2     		uxtb	r3, r3
 591 0124 1846     		mov	r0, r3
 592 0126 FFF7FEFF 		bl	Keys_Notes_3_Write
 382:main.c        ****                    // Keys_Notes_4_Write(0x04);
 383:main.c        ****                     break;
 593              		.loc 1 383 0
 594 012a 83E0     		b	.L35
 595              	.L40:
 384:main.c        ****                 
 385:main.c        ****                 case 3:
 386:main.c        ****                 
 387:main.c        ****                    Keys_Notes_4_Write(Keys_Notes_4_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-24)
 596              		.loc 1 387 0
 597 012c FFF7FEFF 		bl	Keys_Notes_4_Read
 598 0130 0346     		mov	r3, r0
 599 0132 D9B2     		uxtb	r1, r3
 600 0134 3B68     		ldr	r3, [r7]
 601 0136 0133     		adds	r3, r3, #1
 602 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 603 013a 183B     		subs	r3, r3, #24
 604 013c 0122     		movs	r2, #1
 605 013e 02FA03F3 		lsl	r3, r2, r3
 606 0142 DBB2     		uxtb	r3, r3
 607 0144 DB43     		mvns	r3, r3
 608 0146 DBB2     		uxtb	r3, r3
 609 0148 0A46     		mov	r2, r1
 610 014a 1340     		ands	r3, r3, r2
 611 014c DBB2     		uxtb	r3, r3
 612 014e DBB2     		uxtb	r3, r3
 613 0150 1846     		mov	r0, r3
 614 0152 FFF7FEFF 		bl	Keys_Notes_4_Write
 388:main.c        ****                   //  Keys_Notes_4_Write(0x08);
 389:main.c        ****                     break;
 615              		.loc 1 389 0
 616 0156 6DE0     		b	.L35
 617              	.L41:
 390:main.c        ****                 
 391:main.c        ****                 case 4:
 392:main.c        ****                 
 393:main.c        ****                    Keys_Notes_5_Write(Keys_Notes_5_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-32)
 618              		.loc 1 393 0
 619 0158 FFF7FEFF 		bl	Keys_Notes_5_Read
 620 015c 0346     		mov	r3, r0
 621 015e D9B2     		uxtb	r1, r3
 622 0160 3B68     		ldr	r3, [r7]
 623 0162 0133     		adds	r3, r3, #1
 624 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 625 0166 203B     		subs	r3, r3, #32
 626 0168 0122     		movs	r2, #1
 627 016a 02FA03F3 		lsl	r3, r2, r3
 628 016e DBB2     		uxtb	r3, r3
 629 0170 DB43     		mvns	r3, r3
 630 0172 DBB2     		uxtb	r3, r3
 631 0174 0A46     		mov	r2, r1
 632 0176 1340     		ands	r3, r3, r2
 633 0178 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 19


 634 017a DBB2     		uxtb	r3, r3
 635 017c 1846     		mov	r0, r3
 636 017e FFF7FEFF 		bl	Keys_Notes_5_Write
 394:main.c        ****                  //   Keys_Notes_4_Write(0x10);
 395:main.c        ****                     break;
 637              		.loc 1 395 0
 638 0182 57E0     		b	.L35
 639              	.L42:
 396:main.c        ****                                 
 397:main.c        ****                 case 5:
 398:main.c        ****                 
 399:main.c        ****                    Keys_Notes_6_Write(Keys_Notes_6_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-40)
 640              		.loc 1 399 0
 641 0184 FFF7FEFF 		bl	Keys_Notes_6_Read
 642 0188 0346     		mov	r3, r0
 643 018a D9B2     		uxtb	r1, r3
 644 018c 3B68     		ldr	r3, [r7]
 645 018e 0133     		adds	r3, r3, #1
 646 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 647 0192 283B     		subs	r3, r3, #40
 648 0194 0122     		movs	r2, #1
 649 0196 02FA03F3 		lsl	r3, r2, r3
 650 019a DBB2     		uxtb	r3, r3
 651 019c DB43     		mvns	r3, r3
 652 019e DBB2     		uxtb	r3, r3
 653 01a0 0A46     		mov	r2, r1
 654 01a2 1340     		ands	r3, r3, r2
 655 01a4 DBB2     		uxtb	r3, r3
 656 01a6 DBB2     		uxtb	r3, r3
 657 01a8 1846     		mov	r0, r3
 658 01aa FFF7FEFF 		bl	Keys_Notes_6_Write
 400:main.c        ****                    break;     
 659              		.loc 1 400 0
 660 01ae 41E0     		b	.L35
 661              	.L43:
 401:main.c        ****                 case 6:
 402:main.c        ****                 
 403:main.c        ****                    Chords_Notes_Write(Chords_Notes_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-48)
 662              		.loc 1 403 0
 663 01b0 FFF7FEFF 		bl	Chords_Notes_Read
 664 01b4 0346     		mov	r3, r0
 665 01b6 D9B2     		uxtb	r1, r3
 666 01b8 3B68     		ldr	r3, [r7]
 667 01ba 0133     		adds	r3, r3, #1
 668 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 669 01be 303B     		subs	r3, r3, #48
 670 01c0 0122     		movs	r2, #1
 671 01c2 02FA03F3 		lsl	r3, r2, r3
 672 01c6 DBB2     		uxtb	r3, r3
 673 01c8 DB43     		mvns	r3, r3
 674 01ca DBB2     		uxtb	r3, r3
 675 01cc 0A46     		mov	r2, r1
 676 01ce 1340     		ands	r3, r3, r2
 677 01d0 DBB2     		uxtb	r3, r3
 678 01d2 DBB2     		uxtb	r3, r3
 679 01d4 1846     		mov	r0, r3
 680 01d6 FFF7FEFF 		bl	Chords_Notes_Write
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 20


 404:main.c        ****                    break;    
 681              		.loc 1 404 0
 682 01da 2BE0     		b	.L35
 683              	.L44:
 405:main.c        ****                 case 7:
 406:main.c        ****                 
 407:main.c        ****                    Chords_Bass_Notes_Write(Chords_Bass_Notes_Read() & ~(0x01 << (midiMsg[USB_EVENT_
 684              		.loc 1 407 0
 685 01dc FFF7FEFF 		bl	Chords_Bass_Notes_Read
 686 01e0 0346     		mov	r3, r0
 687 01e2 D9B2     		uxtb	r1, r3
 688 01e4 3B68     		ldr	r3, [r7]
 689 01e6 0133     		adds	r3, r3, #1
 690 01e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 691 01ea 383B     		subs	r3, r3, #56
 692 01ec 0122     		movs	r2, #1
 693 01ee 02FA03F3 		lsl	r3, r2, r3
 694 01f2 DBB2     		uxtb	r3, r3
 695 01f4 DB43     		mvns	r3, r3
 696 01f6 DBB2     		uxtb	r3, r3
 697 01f8 0A46     		mov	r2, r1
 698 01fa 1340     		ands	r3, r3, r2
 699 01fc DBB2     		uxtb	r3, r3
 700 01fe DBB2     		uxtb	r3, r3
 701 0200 1846     		mov	r0, r3
 702 0202 FFF7FEFF 		bl	Chords_Bass_Notes_Write
 408:main.c        ****                    break;    
 703              		.loc 1 408 0
 704 0206 15E0     		b	.L35
 705              	.L45:
 409:main.c        ****                 case 8:
 410:main.c        ****                 
 411:main.c        ****                    Bass_Notes_Write(Bass_Notes_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-64)));
 706              		.loc 1 411 0
 707 0208 FFF7FEFF 		bl	Bass_Notes_Read
 708 020c 0346     		mov	r3, r0
 709 020e D9B2     		uxtb	r1, r3
 710 0210 3B68     		ldr	r3, [r7]
 711 0212 0133     		adds	r3, r3, #1
 712 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 713 0216 403B     		subs	r3, r3, #64
 714 0218 0122     		movs	r2, #1
 715 021a 02FA03F3 		lsl	r3, r2, r3
 716 021e DBB2     		uxtb	r3, r3
 717 0220 DB43     		mvns	r3, r3
 718 0222 DBB2     		uxtb	r3, r3
 719 0224 0A46     		mov	r2, r1
 720 0226 1340     		ands	r3, r3, r2
 721 0228 DBB2     		uxtb	r3, r3
 722 022a DBB2     		uxtb	r3, r3
 723 022c 1846     		mov	r0, r3
 724 022e FFF7FEFF 		bl	Bass_Notes_Write
 412:main.c        ****                    break;                    
 725              		.loc 1 412 0
 726 0232 00BF     		nop
 727              	.L35:
 413:main.c        ****             }
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 21


 414:main.c        ****             LED_OutA_Write(0);
 728              		.loc 1 414 0
 729 0234 0020     		movs	r0, #0
 730 0236 FFF7FEFF 		bl	LED_OutA_Write
 415:main.c        ****         }
 416:main.c        ****         else    
 417:main.c        ****         {
 418:main.c        ****             switch (midiMsg[USB_EVENT_BYTE1]/8)
 419:main.c        ****             {
 420:main.c        ****                 case 0: 
 421:main.c        ****                 
 422:main.c        ****                    Keys_Notes_1_Write(Keys_Notes_1_Read() | 0x01 << midiMsg[USB_EVENT_BYTE1]);
 423:main.c        ****                     break;
 424:main.c        ****                 
 425:main.c        ****                 case 1:
 426:main.c        ****                 
 427:main.c        ****                    Keys_Notes_2_Write(Keys_Notes_2_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-8)); 
 428:main.c        ****                     break;
 429:main.c        ****                 
 430:main.c        ****                 case 2:
 431:main.c        ****                 
 432:main.c        ****                    Keys_Notes_3_Write(Keys_Notes_3_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-16));
 433:main.c        ****                     break;
 434:main.c        ****                 
 435:main.c        ****                 case 3:
 436:main.c        ****                 
 437:main.c        ****                    Keys_Notes_4_Write(Keys_Notes_4_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-24));
 438:main.c        ****                     break;
 439:main.c        ****                 
 440:main.c        ****                 case 4:
 441:main.c        ****                 
 442:main.c        ****                    Keys_Notes_5_Write(Keys_Notes_5_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-32));
 443:main.c        ****                     break;
 444:main.c        ****                                 
 445:main.c        ****                 case 5:
 446:main.c        ****                 
 447:main.c        ****                    Keys_Notes_6_Write(Keys_Notes_6_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-40));
 448:main.c        ****                     break; 
 449:main.c        ****                 case 6:
 450:main.c        ****                 
 451:main.c        ****                    Chords_Notes_Write(Chords_Notes_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-48));
 452:main.c        ****                     break; 
 453:main.c        ****                 case 7:
 454:main.c        ****                 
 455:main.c        ****                    Chords_Bass_Notes_Write(Chords_Bass_Notes_Read() | 0x01 << (midiMsg[USB_EVENT_BY
 456:main.c        ****                     break;
 457:main.c        ****                 case 8:
 458:main.c        ****                 
 459:main.c        ****                    Bass_Notes_Write(Bass_Notes_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-64));
 460:main.c        ****                     break;                   
 461:main.c        ****             }
 462:main.c        **** 
 463:main.c        ****             LED_OutA_Write(1);
 464:main.c        ****         }
 465:main.c        ****         break;  
 731              		.loc 1 465 0
 732 023a 42E2     		b	.L30
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 22


 733              	.L34:
 418:main.c        ****             {
 734              		.loc 1 418 0
 735 023c 3B68     		ldr	r3, [r7]
 736 023e 0133     		adds	r3, r3, #1
 737 0240 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 738 0242 DB08     		lsrs	r3, r3, #3
 739 0244 DBB2     		uxtb	r3, r3
 740 0246 082B     		cmp	r3, #8
 741 0248 00F2CC80 		bhi	.L47
 742 024c 01A2     		adr	r2, .L49
 743 024e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 744 0252 00BF     		.p2align 2
 745              	.L49:
 746 0254 79020000 		.word	.L48+1
 747 0258 9D020000 		.word	.L50+1
 748 025c C5020000 		.word	.L51+1
 749 0260 F5020000 		.word	.L52+1
 750 0264 1D030000 		.word	.L53+1
 751 0268 45030000 		.word	.L54+1
 752 026c 6D030000 		.word	.L55+1
 753 0270 95030000 		.word	.L56+1
 754 0274 BD030000 		.word	.L57+1
 755              		.p2align 1
 756              	.L48:
 422:main.c        ****                     break;
 757              		.loc 1 422 0
 758 0278 FFF7FEFF 		bl	Keys_Notes_1_Read
 759 027c 0346     		mov	r3, r0
 760 027e DAB2     		uxtb	r2, r3
 761 0280 3B68     		ldr	r3, [r7]
 762 0282 0133     		adds	r3, r3, #1
 763 0284 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 764 0286 1946     		mov	r1, r3
 765 0288 0123     		movs	r3, #1
 766 028a 8B40     		lsls	r3, r3, r1
 767 028c DBB2     		uxtb	r3, r3
 768 028e 1343     		orrs	r3, r3, r2
 769 0290 DBB2     		uxtb	r3, r3
 770 0292 DBB2     		uxtb	r3, r3
 771 0294 1846     		mov	r0, r3
 772 0296 FFF7FEFF 		bl	Keys_Notes_1_Write
 423:main.c        ****                 
 773              		.loc 1 423 0
 774 029a A3E0     		b	.L47
 775              	.L50:
 427:main.c        ****                     break;
 776              		.loc 1 427 0
 777 029c FFF7FEFF 		bl	Keys_Notes_2_Read
 778 02a0 0346     		mov	r3, r0
 779 02a2 D9B2     		uxtb	r1, r3
 780 02a4 3B68     		ldr	r3, [r7]
 781 02a6 0133     		adds	r3, r3, #1
 782 02a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 783 02aa 083B     		subs	r3, r3, #8
 784 02ac 0122     		movs	r2, #1
 785 02ae 02FA03F3 		lsl	r3, r2, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 23


 786 02b2 DBB2     		uxtb	r3, r3
 787 02b4 0A46     		mov	r2, r1
 788 02b6 1343     		orrs	r3, r3, r2
 789 02b8 DBB2     		uxtb	r3, r3
 790 02ba DBB2     		uxtb	r3, r3
 791 02bc 1846     		mov	r0, r3
 792 02be FFF7FEFF 		bl	Keys_Notes_2_Write
 428:main.c        ****                 
 793              		.loc 1 428 0
 794 02c2 8FE0     		b	.L47
 795              	.L51:
 432:main.c        ****                     break;
 796              		.loc 1 432 0
 797 02c4 FFF7FEFF 		bl	Keys_Notes_3_Read
 798 02c8 0346     		mov	r3, r0
 799 02ca D9B2     		uxtb	r1, r3
 800 02cc 3B68     		ldr	r3, [r7]
 801 02ce 0133     		adds	r3, r3, #1
 802 02d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 803 02d2 103B     		subs	r3, r3, #16
 804 02d4 0122     		movs	r2, #1
 805 02d6 02FA03F3 		lsl	r3, r2, r3
 806 02da DBB2     		uxtb	r3, r3
 807 02dc 0A46     		mov	r2, r1
 808 02de 1343     		orrs	r3, r3, r2
 809 02e0 DBB2     		uxtb	r3, r3
 810 02e2 DBB2     		uxtb	r3, r3
 811 02e4 1846     		mov	r0, r3
 812 02e6 FFF7FEFF 		bl	Keys_Notes_3_Write
 433:main.c        ****                 
 813              		.loc 1 433 0
 814 02ea 7BE0     		b	.L47
 815              	.L83:
 816              		.align	2
 817              	.L82:
 818 02ec 00000000 		.word	USB_MIDI1_InqFlags
 819 02f0 00000000 		.word	inqFlagsOld
 820              	.L52:
 437:main.c        ****                     break;
 821              		.loc 1 437 0
 822 02f4 FFF7FEFF 		bl	Keys_Notes_4_Read
 823 02f8 0346     		mov	r3, r0
 824 02fa D9B2     		uxtb	r1, r3
 825 02fc 3B68     		ldr	r3, [r7]
 826 02fe 0133     		adds	r3, r3, #1
 827 0300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 828 0302 183B     		subs	r3, r3, #24
 829 0304 0122     		movs	r2, #1
 830 0306 02FA03F3 		lsl	r3, r2, r3
 831 030a DBB2     		uxtb	r3, r3
 832 030c 0A46     		mov	r2, r1
 833 030e 1343     		orrs	r3, r3, r2
 834 0310 DBB2     		uxtb	r3, r3
 835 0312 DBB2     		uxtb	r3, r3
 836 0314 1846     		mov	r0, r3
 837 0316 FFF7FEFF 		bl	Keys_Notes_4_Write
 438:main.c        ****                 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 24


 838              		.loc 1 438 0
 839 031a 63E0     		b	.L47
 840              	.L53:
 442:main.c        ****                     break;
 841              		.loc 1 442 0
 842 031c FFF7FEFF 		bl	Keys_Notes_5_Read
 843 0320 0346     		mov	r3, r0
 844 0322 D9B2     		uxtb	r1, r3
 845 0324 3B68     		ldr	r3, [r7]
 846 0326 0133     		adds	r3, r3, #1
 847 0328 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 848 032a 203B     		subs	r3, r3, #32
 849 032c 0122     		movs	r2, #1
 850 032e 02FA03F3 		lsl	r3, r2, r3
 851 0332 DBB2     		uxtb	r3, r3
 852 0334 0A46     		mov	r2, r1
 853 0336 1343     		orrs	r3, r3, r2
 854 0338 DBB2     		uxtb	r3, r3
 855 033a DBB2     		uxtb	r3, r3
 856 033c 1846     		mov	r0, r3
 857 033e FFF7FEFF 		bl	Keys_Notes_5_Write
 443:main.c        ****                                 
 858              		.loc 1 443 0
 859 0342 4FE0     		b	.L47
 860              	.L54:
 447:main.c        ****                     break; 
 861              		.loc 1 447 0
 862 0344 FFF7FEFF 		bl	Keys_Notes_6_Read
 863 0348 0346     		mov	r3, r0
 864 034a D9B2     		uxtb	r1, r3
 865 034c 3B68     		ldr	r3, [r7]
 866 034e 0133     		adds	r3, r3, #1
 867 0350 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 868 0352 283B     		subs	r3, r3, #40
 869 0354 0122     		movs	r2, #1
 870 0356 02FA03F3 		lsl	r3, r2, r3
 871 035a DBB2     		uxtb	r3, r3
 872 035c 0A46     		mov	r2, r1
 873 035e 1343     		orrs	r3, r3, r2
 874 0360 DBB2     		uxtb	r3, r3
 875 0362 DBB2     		uxtb	r3, r3
 876 0364 1846     		mov	r0, r3
 877 0366 FFF7FEFF 		bl	Keys_Notes_6_Write
 448:main.c        ****                 case 6:
 878              		.loc 1 448 0
 879 036a 3BE0     		b	.L47
 880              	.L55:
 451:main.c        ****                     break; 
 881              		.loc 1 451 0
 882 036c FFF7FEFF 		bl	Chords_Notes_Read
 883 0370 0346     		mov	r3, r0
 884 0372 D9B2     		uxtb	r1, r3
 885 0374 3B68     		ldr	r3, [r7]
 886 0376 0133     		adds	r3, r3, #1
 887 0378 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 888 037a 303B     		subs	r3, r3, #48
 889 037c 0122     		movs	r2, #1
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 25


 890 037e 02FA03F3 		lsl	r3, r2, r3
 891 0382 DBB2     		uxtb	r3, r3
 892 0384 0A46     		mov	r2, r1
 893 0386 1343     		orrs	r3, r3, r2
 894 0388 DBB2     		uxtb	r3, r3
 895 038a DBB2     		uxtb	r3, r3
 896 038c 1846     		mov	r0, r3
 897 038e FFF7FEFF 		bl	Chords_Notes_Write
 452:main.c        ****                 case 7:
 898              		.loc 1 452 0
 899 0392 27E0     		b	.L47
 900              	.L56:
 455:main.c        ****                     break;
 901              		.loc 1 455 0
 902 0394 FFF7FEFF 		bl	Chords_Bass_Notes_Read
 903 0398 0346     		mov	r3, r0
 904 039a D9B2     		uxtb	r1, r3
 905 039c 3B68     		ldr	r3, [r7]
 906 039e 0133     		adds	r3, r3, #1
 907 03a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 908 03a2 383B     		subs	r3, r3, #56
 909 03a4 0122     		movs	r2, #1
 910 03a6 02FA03F3 		lsl	r3, r2, r3
 911 03aa DBB2     		uxtb	r3, r3
 912 03ac 0A46     		mov	r2, r1
 913 03ae 1343     		orrs	r3, r3, r2
 914 03b0 DBB2     		uxtb	r3, r3
 915 03b2 DBB2     		uxtb	r3, r3
 916 03b4 1846     		mov	r0, r3
 917 03b6 FFF7FEFF 		bl	Chords_Bass_Notes_Write
 456:main.c        ****                 case 8:
 918              		.loc 1 456 0
 919 03ba 13E0     		b	.L47
 920              	.L57:
 459:main.c        ****                     break;                   
 921              		.loc 1 459 0
 922 03bc FFF7FEFF 		bl	Bass_Notes_Read
 923 03c0 0346     		mov	r3, r0
 924 03c2 D9B2     		uxtb	r1, r3
 925 03c4 3B68     		ldr	r3, [r7]
 926 03c6 0133     		adds	r3, r3, #1
 927 03c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 928 03ca 403B     		subs	r3, r3, #64
 929 03cc 0122     		movs	r2, #1
 930 03ce 02FA03F3 		lsl	r3, r2, r3
 931 03d2 DBB2     		uxtb	r3, r3
 932 03d4 0A46     		mov	r2, r1
 933 03d6 1343     		orrs	r3, r3, r2
 934 03d8 DBB2     		uxtb	r3, r3
 935 03da DBB2     		uxtb	r3, r3
 936 03dc 1846     		mov	r0, r3
 937 03de FFF7FEFF 		bl	Bass_Notes_Write
 460:main.c        ****             }
 938              		.loc 1 460 0
 939 03e2 00BF     		nop
 940              	.L47:
 463:main.c        ****         }
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 26


 941              		.loc 1 463 0
 942 03e4 0120     		movs	r0, #1
 943 03e6 FFF7FEFF 		bl	LED_OutA_Write
 944              		.loc 1 465 0
 945 03ea 6AE1     		b	.L30
 946              	.L33:
 466:main.c        ****         
 467:main.c        ****     //if(midiMsg[USB_EVENT_BYTE0] == USB_MIDI_NOTE_OFF)
 468:main.c        ****     case USB_MIDI_NOTE_OFF:
 469:main.c        ****         
 470:main.c        ****         switch (midiMsg[USB_EVENT_BYTE1]/8)
 947              		.loc 1 470 0
 948 03ec 3B68     		ldr	r3, [r7]
 949 03ee 0133     		adds	r3, r3, #1
 950 03f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 951 03f2 DB08     		lsrs	r3, r3, #3
 952 03f4 DBB2     		uxtb	r3, r3
 953 03f6 052B     		cmp	r3, #5
 954 03f8 00F29280 		bhi	.L58
 955 03fc 01A2     		adr	r2, .L60
 956 03fe 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 957 0402 00BF     		.p2align 2
 958              	.L60:
 959 0404 1D040000 		.word	.L59+1
 960 0408 45040000 		.word	.L61+1
 961 040c 71040000 		.word	.L62+1
 962 0410 9D040000 		.word	.L63+1
 963 0414 C9040000 		.word	.L64+1
 964 0418 F5040000 		.word	.L65+1
 965              		.p2align 1
 966              	.L59:
 471:main.c        ****             {
 472:main.c        ****                 case 0: 
 473:main.c        ****                 
 474:main.c        ****                    Keys_Notes_1_Write(Keys_Notes_1_Read() & ~(0x01 << midiMsg[USB_EVENT_BYTE1]));
 967              		.loc 1 474 0
 968 041c FFF7FEFF 		bl	Keys_Notes_1_Read
 969 0420 0346     		mov	r3, r0
 970 0422 DAB2     		uxtb	r2, r3
 971 0424 3B68     		ldr	r3, [r7]
 972 0426 0133     		adds	r3, r3, #1
 973 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 974 042a 1946     		mov	r1, r3
 975 042c 0123     		movs	r3, #1
 976 042e 8B40     		lsls	r3, r3, r1
 977 0430 DBB2     		uxtb	r3, r3
 978 0432 DB43     		mvns	r3, r3
 979 0434 DBB2     		uxtb	r3, r3
 980 0436 1340     		ands	r3, r3, r2
 981 0438 DBB2     		uxtb	r3, r3
 982 043a DBB2     		uxtb	r3, r3
 983 043c 1846     		mov	r0, r3
 984 043e FFF7FEFF 		bl	Keys_Notes_1_Write
 475:main.c        ****                    //Keys_Notes_4_Write(0x40);
 476:main.c        ****                     break;
 985              		.loc 1 476 0
 986 0442 6DE0     		b	.L58
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 27


 987              	.L61:
 477:main.c        ****                 
 478:main.c        ****                 case 1:
 479:main.c        ****                 
 480:main.c        ****                    Keys_Notes_2_Write(Keys_Notes_2_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-8))
 988              		.loc 1 480 0
 989 0444 FFF7FEFF 		bl	Keys_Notes_2_Read
 990 0448 0346     		mov	r3, r0
 991 044a D9B2     		uxtb	r1, r3
 992 044c 3B68     		ldr	r3, [r7]
 993 044e 0133     		adds	r3, r3, #1
 994 0450 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 995 0452 083B     		subs	r3, r3, #8
 996 0454 0122     		movs	r2, #1
 997 0456 02FA03F3 		lsl	r3, r2, r3
 998 045a DBB2     		uxtb	r3, r3
 999 045c DB43     		mvns	r3, r3
 1000 045e DBB2     		uxtb	r3, r3
 1001 0460 0A46     		mov	r2, r1
 1002 0462 1340     		ands	r3, r3, r2
 1003 0464 DBB2     		uxtb	r3, r3
 1004 0466 DBB2     		uxtb	r3, r3
 1005 0468 1846     		mov	r0, r3
 1006 046a FFF7FEFF 		bl	Keys_Notes_2_Write
 481:main.c        ****                    // Keys_Notes_4_Write(0x02);
 482:main.c        ****                     break;
 1007              		.loc 1 482 0
 1008 046e 57E0     		b	.L58
 1009              	.L62:
 483:main.c        ****                 
 484:main.c        ****                 case 2:
 485:main.c        ****                 
 486:main.c        ****                    Keys_Notes_3_Write(Keys_Notes_3_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-16)
 1010              		.loc 1 486 0
 1011 0470 FFF7FEFF 		bl	Keys_Notes_3_Read
 1012 0474 0346     		mov	r3, r0
 1013 0476 D9B2     		uxtb	r1, r3
 1014 0478 3B68     		ldr	r3, [r7]
 1015 047a 0133     		adds	r3, r3, #1
 1016 047c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1017 047e 103B     		subs	r3, r3, #16
 1018 0480 0122     		movs	r2, #1
 1019 0482 02FA03F3 		lsl	r3, r2, r3
 1020 0486 DBB2     		uxtb	r3, r3
 1021 0488 DB43     		mvns	r3, r3
 1022 048a DBB2     		uxtb	r3, r3
 1023 048c 0A46     		mov	r2, r1
 1024 048e 1340     		ands	r3, r3, r2
 1025 0490 DBB2     		uxtb	r3, r3
 1026 0492 DBB2     		uxtb	r3, r3
 1027 0494 1846     		mov	r0, r3
 1028 0496 FFF7FEFF 		bl	Keys_Notes_3_Write
 487:main.c        ****                    // Keys_Notes_4_Write(0x04);
 488:main.c        ****                     break;
 1029              		.loc 1 488 0
 1030 049a 41E0     		b	.L58
 1031              	.L63:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 28


 489:main.c        ****                 
 490:main.c        ****                 case 3:
 491:main.c        ****                 
 492:main.c        ****                    Keys_Notes_4_Write(Keys_Notes_4_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-24)
 1032              		.loc 1 492 0
 1033 049c FFF7FEFF 		bl	Keys_Notes_4_Read
 1034 04a0 0346     		mov	r3, r0
 1035 04a2 D9B2     		uxtb	r1, r3
 1036 04a4 3B68     		ldr	r3, [r7]
 1037 04a6 0133     		adds	r3, r3, #1
 1038 04a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1039 04aa 183B     		subs	r3, r3, #24
 1040 04ac 0122     		movs	r2, #1
 1041 04ae 02FA03F3 		lsl	r3, r2, r3
 1042 04b2 DBB2     		uxtb	r3, r3
 1043 04b4 DB43     		mvns	r3, r3
 1044 04b6 DBB2     		uxtb	r3, r3
 1045 04b8 0A46     		mov	r2, r1
 1046 04ba 1340     		ands	r3, r3, r2
 1047 04bc DBB2     		uxtb	r3, r3
 1048 04be DBB2     		uxtb	r3, r3
 1049 04c0 1846     		mov	r0, r3
 1050 04c2 FFF7FEFF 		bl	Keys_Notes_4_Write
 493:main.c        ****                   //  Keys_Notes_4_Write(0x08);
 494:main.c        ****                     break;
 1051              		.loc 1 494 0
 1052 04c6 2BE0     		b	.L58
 1053              	.L64:
 495:main.c        ****                 
 496:main.c        ****                 case 4:
 497:main.c        ****                 
 498:main.c        ****                    Keys_Notes_5_Write(Keys_Notes_5_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-32)
 1054              		.loc 1 498 0
 1055 04c8 FFF7FEFF 		bl	Keys_Notes_5_Read
 1056 04cc 0346     		mov	r3, r0
 1057 04ce D9B2     		uxtb	r1, r3
 1058 04d0 3B68     		ldr	r3, [r7]
 1059 04d2 0133     		adds	r3, r3, #1
 1060 04d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1061 04d6 203B     		subs	r3, r3, #32
 1062 04d8 0122     		movs	r2, #1
 1063 04da 02FA03F3 		lsl	r3, r2, r3
 1064 04de DBB2     		uxtb	r3, r3
 1065 04e0 DB43     		mvns	r3, r3
 1066 04e2 DBB2     		uxtb	r3, r3
 1067 04e4 0A46     		mov	r2, r1
 1068 04e6 1340     		ands	r3, r3, r2
 1069 04e8 DBB2     		uxtb	r3, r3
 1070 04ea DBB2     		uxtb	r3, r3
 1071 04ec 1846     		mov	r0, r3
 1072 04ee FFF7FEFF 		bl	Keys_Notes_5_Write
 499:main.c        ****                  //   Keys_Notes_4_Write(0x10);
 500:main.c        ****                     break;
 1073              		.loc 1 500 0
 1074 04f2 15E0     		b	.L58
 1075              	.L65:
 501:main.c        ****                                 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 29


 502:main.c        ****                 case 5:
 503:main.c        ****                 
 504:main.c        ****                    Keys_Notes_6_Write(Keys_Notes_6_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-40)
 1076              		.loc 1 504 0
 1077 04f4 FFF7FEFF 		bl	Keys_Notes_6_Read
 1078 04f8 0346     		mov	r3, r0
 1079 04fa D9B2     		uxtb	r1, r3
 1080 04fc 3B68     		ldr	r3, [r7]
 1081 04fe 0133     		adds	r3, r3, #1
 1082 0500 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1083 0502 283B     		subs	r3, r3, #40
 1084 0504 0122     		movs	r2, #1
 1085 0506 02FA03F3 		lsl	r3, r2, r3
 1086 050a DBB2     		uxtb	r3, r3
 1087 050c DB43     		mvns	r3, r3
 1088 050e DBB2     		uxtb	r3, r3
 1089 0510 0A46     		mov	r2, r1
 1090 0512 1340     		ands	r3, r3, r2
 1091 0514 DBB2     		uxtb	r3, r3
 1092 0516 DBB2     		uxtb	r3, r3
 1093 0518 1846     		mov	r0, r3
 1094 051a FFF7FEFF 		bl	Keys_Notes_6_Write
 505:main.c        ****                   //  Keys_Notes_4_Write(0x20);
 506:main.c        ****                     break;           
 1095              		.loc 1 506 0
 1096 051e 00BF     		nop
 1097              	.L58:
 507:main.c        ****             }
 508:main.c        ****             LED_OutA_Write(0);
 1098              		.loc 1 508 0
 1099 0520 0020     		movs	r0, #0
 1100 0522 FFF7FEFF 		bl	LED_OutA_Write
 509:main.c        ****             break;
 1101              		.loc 1 509 0
 1102 0526 CCE0     		b	.L30
 1103              	.L32:
 510:main.c        ****     case USB_MIDI_CONTROL_CHANGE:
 511:main.c        ****             switch (midiMsg[USB_EVENT_BYTE1]/8)
 1104              		.loc 1 511 0
 1105 0528 3B68     		ldr	r3, [r7]
 1106 052a 0133     		adds	r3, r3, #1
 1107 052c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1108 052e DB08     		lsrs	r3, r3, #3
 1109 0530 DBB2     		uxtb	r3, r3
 1110 0532 032B     		cmp	r3, #3
 1111 0534 00F2C480 		bhi	.L80
 1112 0538 01A2     		adr	r2, .L68
 1113 053a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1114 053e 00BF     		.p2align 2
 1115              	.L68:
 1116 0540 51050000 		.word	.L67+1
 1117 0544 A7050000 		.word	.L69+1
 1118 0548 05060000 		.word	.L70+1
 1119 054c 63060000 		.word	.L71+1
 1120              		.p2align 1
 1121              	.L67:
 512:main.c        ****             {
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 30


 513:main.c        ****                 case 0: 
 514:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1122              		.loc 1 514 0
 1123 0550 3B68     		ldr	r3, [r7]
 1124 0552 0233     		adds	r3, r3, #2
 1125 0554 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1126 0556 3E2B     		cmp	r3, #62
 1127 0558 13D8     		bhi	.L72
 515:main.c        ****                     {
 516:main.c        ****                     Tabs_1_Write(Tabs_1_Read() & ~(0x01 << midiMsg[USB_EVENT_BYTE1]));
 1128              		.loc 1 516 0
 1129 055a FFF7FEFF 		bl	Tabs_1_Read
 1130 055e 0346     		mov	r3, r0
 1131 0560 DAB2     		uxtb	r2, r3
 1132 0562 3B68     		ldr	r3, [r7]
 1133 0564 0133     		adds	r3, r3, #1
 1134 0566 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1135 0568 1946     		mov	r1, r3
 1136 056a 0123     		movs	r3, #1
 1137 056c 8B40     		lsls	r3, r3, r1
 1138 056e DBB2     		uxtb	r3, r3
 1139 0570 DB43     		mvns	r3, r3
 1140 0572 DBB2     		uxtb	r3, r3
 1141 0574 1340     		ands	r3, r3, r2
 1142 0576 DBB2     		uxtb	r3, r3
 1143 0578 DBB2     		uxtb	r3, r3
 1144 057a 1846     		mov	r0, r3
 1145 057c FFF7FEFF 		bl	Tabs_1_Write
 517:main.c        ****                     }
 518:main.c        ****                     else
 519:main.c        ****                     {
 520:main.c        ****                     Tabs_1_Write(Tabs_1_Read() | (0x01 << midiMsg[USB_EVENT_BYTE1]));    
 521:main.c        ****                     }
 522:main.c        ****                     break;
 1146              		.loc 1 522 0
 1147 0580 9EE0     		b	.L66
 1148              	.L72:
 520:main.c        ****                     }
 1149              		.loc 1 520 0
 1150 0582 FFF7FEFF 		bl	Tabs_1_Read
 1151 0586 0346     		mov	r3, r0
 1152 0588 DAB2     		uxtb	r2, r3
 1153 058a 3B68     		ldr	r3, [r7]
 1154 058c 0133     		adds	r3, r3, #1
 1155 058e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1156 0590 1946     		mov	r1, r3
 1157 0592 0123     		movs	r3, #1
 1158 0594 8B40     		lsls	r3, r3, r1
 1159 0596 DBB2     		uxtb	r3, r3
 1160 0598 1343     		orrs	r3, r3, r2
 1161 059a DBB2     		uxtb	r3, r3
 1162 059c DBB2     		uxtb	r3, r3
 1163 059e 1846     		mov	r0, r3
 1164 05a0 FFF7FEFF 		bl	Tabs_1_Write
 1165              		.loc 1 522 0
 1166 05a4 8CE0     		b	.L66
 1167              	.L69:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 31


 523:main.c        ****                 
 524:main.c        ****                 case 1:
 525:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1168              		.loc 1 525 0
 1169 05a6 3B68     		ldr	r3, [r7]
 1170 05a8 0233     		adds	r3, r3, #2
 1171 05aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1172 05ac 3E2B     		cmp	r3, #62
 1173 05ae 15D8     		bhi	.L74
 526:main.c        ****                     {
 527:main.c        ****                     Tabs_2_Write(Tabs_2_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-8)));
 1174              		.loc 1 527 0
 1175 05b0 FFF7FEFF 		bl	Tabs_2_Read
 1176 05b4 0346     		mov	r3, r0
 1177 05b6 D9B2     		uxtb	r1, r3
 1178 05b8 3B68     		ldr	r3, [r7]
 1179 05ba 0133     		adds	r3, r3, #1
 1180 05bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1181 05be 083B     		subs	r3, r3, #8
 1182 05c0 0122     		movs	r2, #1
 1183 05c2 02FA03F3 		lsl	r3, r2, r3
 1184 05c6 DBB2     		uxtb	r3, r3
 1185 05c8 DB43     		mvns	r3, r3
 1186 05ca DBB2     		uxtb	r3, r3
 1187 05cc 0A46     		mov	r2, r1
 1188 05ce 1340     		ands	r3, r3, r2
 1189 05d0 DBB2     		uxtb	r3, r3
 1190 05d2 DBB2     		uxtb	r3, r3
 1191 05d4 1846     		mov	r0, r3
 1192 05d6 FFF7FEFF 		bl	Tabs_2_Write
 528:main.c        ****                     }
 529:main.c        ****                     else
 530:main.c        ****                     {
 531:main.c        ****                     Tabs_2_Write(Tabs_2_Read() | (0x01 << (midiMsg[USB_EVENT_BYTE1]-8)));    
 532:main.c        ****                     }
 533:main.c        ****                     break;
 1193              		.loc 1 533 0
 1194 05da 71E0     		b	.L66
 1195              	.L74:
 531:main.c        ****                     }
 1196              		.loc 1 531 0
 1197 05dc FFF7FEFF 		bl	Tabs_2_Read
 1198 05e0 0346     		mov	r3, r0
 1199 05e2 D9B2     		uxtb	r1, r3
 1200 05e4 3B68     		ldr	r3, [r7]
 1201 05e6 0133     		adds	r3, r3, #1
 1202 05e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1203 05ea 083B     		subs	r3, r3, #8
 1204 05ec 0122     		movs	r2, #1
 1205 05ee 02FA03F3 		lsl	r3, r2, r3
 1206 05f2 DBB2     		uxtb	r3, r3
 1207 05f4 0A46     		mov	r2, r1
 1208 05f6 1343     		orrs	r3, r3, r2
 1209 05f8 DBB2     		uxtb	r3, r3
 1210 05fa DBB2     		uxtb	r3, r3
 1211 05fc 1846     		mov	r0, r3
 1212 05fe FFF7FEFF 		bl	Tabs_2_Write
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 32


 1213              		.loc 1 533 0
 1214 0602 5DE0     		b	.L66
 1215              	.L70:
 534:main.c        ****                 
 535:main.c        ****                 case 2:
 536:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1216              		.loc 1 536 0
 1217 0604 3B68     		ldr	r3, [r7]
 1218 0606 0233     		adds	r3, r3, #2
 1219 0608 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1220 060a 3E2B     		cmp	r3, #62
 1221 060c 15D8     		bhi	.L76
 537:main.c        ****                     {
 538:main.c        ****                     Tabs_3_Write(Tabs_3_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-16)));
 1222              		.loc 1 538 0
 1223 060e FFF7FEFF 		bl	Tabs_3_Read
 1224 0612 0346     		mov	r3, r0
 1225 0614 D9B2     		uxtb	r1, r3
 1226 0616 3B68     		ldr	r3, [r7]
 1227 0618 0133     		adds	r3, r3, #1
 1228 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1229 061c 103B     		subs	r3, r3, #16
 1230 061e 0122     		movs	r2, #1
 1231 0620 02FA03F3 		lsl	r3, r2, r3
 1232 0624 DBB2     		uxtb	r3, r3
 1233 0626 DB43     		mvns	r3, r3
 1234 0628 DBB2     		uxtb	r3, r3
 1235 062a 0A46     		mov	r2, r1
 1236 062c 1340     		ands	r3, r3, r2
 1237 062e DBB2     		uxtb	r3, r3
 1238 0630 DBB2     		uxtb	r3, r3
 1239 0632 1846     		mov	r0, r3
 1240 0634 FFF7FEFF 		bl	Tabs_3_Write
 539:main.c        ****                     }
 540:main.c        ****                     else
 541:main.c        ****                     {
 542:main.c        ****                     Tabs_3_Write(Tabs_3_Read() | (0x01 << (midiMsg[USB_EVENT_BYTE1]-16)));    
 543:main.c        ****                     }
 544:main.c        ****                     break;
 1241              		.loc 1 544 0
 1242 0638 42E0     		b	.L66
 1243              	.L76:
 542:main.c        ****                     }
 1244              		.loc 1 542 0
 1245 063a FFF7FEFF 		bl	Tabs_3_Read
 1246 063e 0346     		mov	r3, r0
 1247 0640 D9B2     		uxtb	r1, r3
 1248 0642 3B68     		ldr	r3, [r7]
 1249 0644 0133     		adds	r3, r3, #1
 1250 0646 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1251 0648 103B     		subs	r3, r3, #16
 1252 064a 0122     		movs	r2, #1
 1253 064c 02FA03F3 		lsl	r3, r2, r3
 1254 0650 DBB2     		uxtb	r3, r3
 1255 0652 0A46     		mov	r2, r1
 1256 0654 1343     		orrs	r3, r3, r2
 1257 0656 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 33


 1258 0658 DBB2     		uxtb	r3, r3
 1259 065a 1846     		mov	r0, r3
 1260 065c FFF7FEFF 		bl	Tabs_3_Write
 1261              		.loc 1 544 0
 1262 0660 2EE0     		b	.L66
 1263              	.L71:
 545:main.c        ****                 
 546:main.c        ****                 case 3:
 547:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1264              		.loc 1 547 0
 1265 0662 3B68     		ldr	r3, [r7]
 1266 0664 0233     		adds	r3, r3, #2
 1267 0666 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1268 0668 3E2B     		cmp	r3, #62
 1269 066a 15D8     		bhi	.L78
 548:main.c        ****                     {
 549:main.c        ****                     Tabs_4_Write(Tabs_4_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-24)));
 1270              		.loc 1 549 0
 1271 066c FFF7FEFF 		bl	Tabs_4_Read
 1272 0670 0346     		mov	r3, r0
 1273 0672 D9B2     		uxtb	r1, r3
 1274 0674 3B68     		ldr	r3, [r7]
 1275 0676 0133     		adds	r3, r3, #1
 1276 0678 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1277 067a 183B     		subs	r3, r3, #24
 1278 067c 0122     		movs	r2, #1
 1279 067e 02FA03F3 		lsl	r3, r2, r3
 1280 0682 DBB2     		uxtb	r3, r3
 1281 0684 DB43     		mvns	r3, r3
 1282 0686 DBB2     		uxtb	r3, r3
 1283 0688 0A46     		mov	r2, r1
 1284 068a 1340     		ands	r3, r3, r2
 1285 068c DBB2     		uxtb	r3, r3
 1286 068e DBB2     		uxtb	r3, r3
 1287 0690 1846     		mov	r0, r3
 1288 0692 FFF7FEFF 		bl	Tabs_4_Write
 550:main.c        ****                     }
 551:main.c        ****                     else
 552:main.c        ****                     {
 553:main.c        ****                     Tabs_4_Write(Tabs_4_Read() | (0x01 << (midiMsg[USB_EVENT_BYTE1]-24)));    
 554:main.c        ****                     }
 555:main.c        ****                     break;
 1289              		.loc 1 555 0
 1290 0696 12E0     		b	.L81
 1291              	.L78:
 553:main.c        ****                     }
 1292              		.loc 1 553 0
 1293 0698 FFF7FEFF 		bl	Tabs_4_Read
 1294 069c 0346     		mov	r3, r0
 1295 069e D9B2     		uxtb	r1, r3
 1296 06a0 3B68     		ldr	r3, [r7]
 1297 06a2 0133     		adds	r3, r3, #1
 1298 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1299 06a6 183B     		subs	r3, r3, #24
 1300 06a8 0122     		movs	r2, #1
 1301 06aa 02FA03F3 		lsl	r3, r2, r3
 1302 06ae DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 34


 1303 06b0 0A46     		mov	r2, r1
 1304 06b2 1343     		orrs	r3, r3, r2
 1305 06b4 DBB2     		uxtb	r3, r3
 1306 06b6 DBB2     		uxtb	r3, r3
 1307 06b8 1846     		mov	r0, r3
 1308 06ba FFF7FEFF 		bl	Tabs_4_Write
 1309              	.L81:
 1310              		.loc 1 555 0
 1311 06be 00BF     		nop
 1312              	.L66:
 1313              	.L80:
 556:main.c        ****              
 557:main.c        ****             }
 558:main.c        ****             break;        
 1314              		.loc 1 558 0
 1315 06c0 00BF     		nop
 1316              	.L30:
 559:main.c        ****     }
 560:main.c        ****     
 561:main.c        ****     
 562:main.c        ****     inqFlagsOld = USB_MIDI1_InqFlags;
 1317              		.loc 1 562 0
 1318 06c2 044B     		ldr	r3, .L84
 1319 06c4 1B78     		ldrb	r3, [r3]
 1320 06c6 DAB2     		uxtb	r2, r3
 1321 06c8 034B     		ldr	r3, .L84+4
 1322 06ca 1A70     		strb	r2, [r3]
 563:main.c        ****     cable = cable;
 564:main.c        **** }    
 1323              		.loc 1 564 0
 1324 06cc 0837     		adds	r7, r7, #8
 1325              		.cfi_def_cfa_offset 8
 1326 06ce BD46     		mov	sp, r7
 1327              		.cfi_def_cfa_register 13
 1328              		@ sp needed
 1329 06d0 80BD     		pop	{r7, pc}
 1330              	.L85:
 1331 06d2 00BF     		.align	2
 1332              	.L84:
 1333 06d4 00000000 		.word	USB_MIDI1_InqFlags
 1334 06d8 00000000 		.word	inqFlagsOld
 1335              		.cfi_endproc
 1336              	.LFE65:
 1337              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 1338              		.section	.text.USB_MIDI1_ProcessUsbOut_EntryCallback,"ax",%progbits
 1339              		.align	2
 1340              		.global	USB_MIDI1_ProcessUsbOut_EntryCallback
 1341              		.thumb
 1342              		.thumb_func
 1343              		.type	USB_MIDI1_ProcessUsbOut_EntryCallback, %function
 1344              	USB_MIDI1_ProcessUsbOut_EntryCallback:
 1345              	.LFB66:
 565:main.c        **** 
 566:main.c        **** 
 567:main.c        **** /*******************************************************************************
 568:main.c        **** * Function Name: USB_MIDI1_ProcessUsbOut_EntryCallback
 569:main.c        **** ********************************************************************************
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 35


 570:main.c        **** * Summary:  Turn the LED_OutA on at the beginning of the function
 571:main.c        **** * USB_MIDI1_ProcessUsbOut() when data comes to be put in the UART1 out
 572:main.c        **** * buffer.
 573:main.c        **** * 
 574:main.c        **** *******************************************************************************/
 575:main.c        **** void USB_MIDI1_ProcessUsbOut_EntryCallback(void)
 576:main.c        **** {
 1346              		.loc 1 576 0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 0
 1349              		@ frame_needed = 1, uses_anonymous_args = 0
 1350              		@ link register save eliminated.
 1351 0000 80B4     		push	{r7}
 1352              		.cfi_def_cfa_offset 4
 1353              		.cfi_offset 7, -4
 1354 0002 00AF     		add	r7, sp, #0
 1355              		.cfi_def_cfa_register 7
 577:main.c        ****   //  LED_OutA_Write(1);
 578:main.c        **** }
 1356              		.loc 1 578 0
 1357 0004 BD46     		mov	sp, r7
 1358              		.cfi_def_cfa_register 13
 1359              		@ sp needed
 1360 0006 5DF8047B 		ldr	r7, [sp], #4
 1361              		.cfi_restore 7
 1362              		.cfi_def_cfa_offset 0
 1363 000a 7047     		bx	lr
 1364              		.cfi_endproc
 1365              	.LFE66:
 1366              		.size	USB_MIDI1_ProcessUsbOut_EntryCallback, .-USB_MIDI1_ProcessUsbOut_EntryCallback
 1367              		.section	.text.USB_MIDI1_ProcessUsbOut_ExitCallback,"ax",%progbits
 1368              		.align	2
 1369              		.global	USB_MIDI1_ProcessUsbOut_ExitCallback
 1370              		.thumb
 1371              		.thumb_func
 1372              		.type	USB_MIDI1_ProcessUsbOut_ExitCallback, %function
 1373              	USB_MIDI1_ProcessUsbOut_ExitCallback:
 1374              	.LFB67:
 579:main.c        **** 
 580:main.c        **** 
 581:main.c        **** /*******************************************************************************
 582:main.c        **** * Function Name: USB_MIDI1_ProcessUsbOut_ExitCallback
 583:main.c        **** ********************************************************************************
 584:main.c        **** * Summary:  Turn the LED_OutA off at the end of the function  
 585:main.c        **** * USB_MIDI1_ProcessUsbOut() when data is put in the UART1 out-buffer.
 586:main.c        **** * 
 587:main.c        **** *******************************************************************************/
 588:main.c        **** void USB_MIDI1_ProcessUsbOut_ExitCallback(void)
 589:main.c        **** {
 1375              		.loc 1 589 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 0
 1378              		@ frame_needed = 1, uses_anonymous_args = 0
 1379              		@ link register save eliminated.
 1380 0000 80B4     		push	{r7}
 1381              		.cfi_def_cfa_offset 4
 1382              		.cfi_offset 7, -4
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 36


 1383 0002 00AF     		add	r7, sp, #0
 1384              		.cfi_def_cfa_register 7
 590:main.c        ****   //  LED_OutA_Write(0);
 591:main.c        **** }
 1385              		.loc 1 591 0
 1386 0004 BD46     		mov	sp, r7
 1387              		.cfi_def_cfa_register 13
 1388              		@ sp needed
 1389 0006 5DF8047B 		ldr	r7, [sp], #4
 1390              		.cfi_restore 7
 1391              		.cfi_def_cfa_offset 0
 1392 000a 7047     		bx	lr
 1393              		.cfi_endproc
 1394              	.LFE67:
 1395              		.size	USB_MIDI1_ProcessUsbOut_ExitCallback, .-USB_MIDI1_ProcessUsbOut_ExitCallback
 1396              		.section	.text.USB_MIDI2_ProcessUsbOut_EntryCallback,"ax",%progbits
 1397              		.align	2
 1398              		.global	USB_MIDI2_ProcessUsbOut_EntryCallback
 1399              		.thumb
 1400              		.thumb_func
 1401              		.type	USB_MIDI2_ProcessUsbOut_EntryCallback, %function
 1402              	USB_MIDI2_ProcessUsbOut_EntryCallback:
 1403              	.LFB68:
 592:main.c        **** 
 593:main.c        **** 
 594:main.c        **** /*******************************************************************************
 595:main.c        **** * Function Name: USB_MIDI2_ProcessUsbOut_EntryCallback
 596:main.c        **** ********************************************************************************
 597:main.c        **** * Summary:  Turn the LED_OutB on at the beginning of the function  
 598:main.c        **** * USB_MIDI2_ProcessUsbOut() when data comes to be put in the UART2 out- 
 599:main.c        **** * buffer  
 600:main.c        **** * 
 601:main.c        **** *******************************************************************************/
 602:main.c        **** void USB_MIDI2_ProcessUsbOut_EntryCallback(void)
 603:main.c        **** {
 1404              		.loc 1 603 0
 1405              		.cfi_startproc
 1406              		@ args = 0, pretend = 0, frame = 0
 1407              		@ frame_needed = 1, uses_anonymous_args = 0
 1408 0000 80B5     		push	{r7, lr}
 1409              		.cfi_def_cfa_offset 8
 1410              		.cfi_offset 7, -8
 1411              		.cfi_offset 14, -4
 1412 0002 00AF     		add	r7, sp, #0
 1413              		.cfi_def_cfa_register 7
 604:main.c        ****     LED_OutB_Write(1);
 1414              		.loc 1 604 0
 1415 0004 0120     		movs	r0, #1
 1416 0006 FFF7FEFF 		bl	LED_OutB_Write
 605:main.c        **** }
 1417              		.loc 1 605 0
 1418 000a 80BD     		pop	{r7, pc}
 1419              		.cfi_endproc
 1420              	.LFE68:
 1421              		.size	USB_MIDI2_ProcessUsbOut_EntryCallback, .-USB_MIDI2_ProcessUsbOut_EntryCallback
 1422              		.section	.text.USB_MIDI2_ProcessUsbOut_ExitCallback,"ax",%progbits
 1423              		.align	2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 37


 1424              		.global	USB_MIDI2_ProcessUsbOut_ExitCallback
 1425              		.thumb
 1426              		.thumb_func
 1427              		.type	USB_MIDI2_ProcessUsbOut_ExitCallback, %function
 1428              	USB_MIDI2_ProcessUsbOut_ExitCallback:
 1429              	.LFB69:
 606:main.c        **** 
 607:main.c        **** 
 608:main.c        **** /*******************************************************************************
 609:main.c        **** * Function Name: USB_MIDI2_ProcessUsbOut_ExitCallback
 610:main.c        **** ********************************************************************************
 611:main.c        **** * Summary:  Turn the LED_OutB off at the end of the function  
 612:main.c        **** * USB_MIDI2_ProcessUsbOut() when data is put in the UART2 out-buffer.
 613:main.c        **** * 
 614:main.c        **** *******************************************************************************/
 615:main.c        **** void USB_MIDI2_ProcessUsbOut_ExitCallback(void)
 616:main.c        **** {
 1430              		.loc 1 616 0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 0
 1433              		@ frame_needed = 1, uses_anonymous_args = 0
 1434 0000 80B5     		push	{r7, lr}
 1435              		.cfi_def_cfa_offset 8
 1436              		.cfi_offset 7, -8
 1437              		.cfi_offset 14, -4
 1438 0002 00AF     		add	r7, sp, #0
 1439              		.cfi_def_cfa_register 7
 617:main.c        ****     LED_OutB_Write(0);
 1440              		.loc 1 617 0
 1441 0004 0020     		movs	r0, #0
 1442 0006 FFF7FEFF 		bl	LED_OutB_Write
 618:main.c        **** }
 1443              		.loc 1 618 0
 1444 000a 80BD     		pop	{r7, pc}
 1445              		.cfi_endproc
 1446              	.LFE69:
 1447              		.size	USB_MIDI2_ProcessUsbOut_ExitCallback, .-USB_MIDI2_ProcessUsbOut_ExitCallback
 1448              		.section	.text.MIDI1_UART_RXISR_EntryCallback,"ax",%progbits
 1449              		.align	2
 1450              		.global	MIDI1_UART_RXISR_EntryCallback
 1451              		.thumb
 1452              		.thumb_func
 1453              		.type	MIDI1_UART_RXISR_EntryCallback, %function
 1454              	MIDI1_UART_RXISR_EntryCallback:
 1455              	.LFB70:
 619:main.c        **** 
 620:main.c        **** 
 621:main.c        **** /*******************************************************************************
 622:main.c        **** * Function Name: MIDI1_UART_RXISR_EntryCallback
 623:main.c        **** ********************************************************************************
 624:main.c        **** * Summary:  Turn the LED_InA on at the beginning of the MIDI1_UART_RXISR ISR  
 625:main.c        **** * when data comes to UART1 to be put in the USBFS_MIDI IN endpoint
 626:main.c        **** * buffer.
 627:main.c        **** *
 628:main.c        **** *******************************************************************************/
 629:main.c        **** void MIDI1_UART_RXISR_EntryCallback(void)
 630:main.c        **** {
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 38


 1456              		.loc 1 630 0
 1457              		.cfi_startproc
 1458              		@ args = 0, pretend = 0, frame = 0
 1459              		@ frame_needed = 1, uses_anonymous_args = 0
 1460 0000 80B5     		push	{r7, lr}
 1461              		.cfi_def_cfa_offset 8
 1462              		.cfi_offset 7, -8
 1463              		.cfi_offset 14, -4
 1464 0002 00AF     		add	r7, sp, #0
 1465              		.cfi_def_cfa_register 7
 631:main.c        ****     /* These LEDs indicate MIDI input activity */
 632:main.c        ****     LED_InA_Write(1);
 1466              		.loc 1 632 0
 1467 0004 0120     		movs	r0, #1
 1468 0006 FFF7FEFF 		bl	LED_InA_Write
 633:main.c        **** }
 1469              		.loc 1 633 0
 1470 000a 80BD     		pop	{r7, pc}
 1471              		.cfi_endproc
 1472              	.LFE70:
 1473              		.size	MIDI1_UART_RXISR_EntryCallback, .-MIDI1_UART_RXISR_EntryCallback
 1474              		.section	.text.MIDI1_UART_RXISR_ExitCallback,"ax",%progbits
 1475              		.align	2
 1476              		.global	MIDI1_UART_RXISR_ExitCallback
 1477              		.thumb
 1478              		.thumb_func
 1479              		.type	MIDI1_UART_RXISR_ExitCallback, %function
 1480              	MIDI1_UART_RXISR_ExitCallback:
 1481              	.LFB71:
 634:main.c        **** 
 635:main.c        **** 
 636:main.c        **** /*******************************************************************************
 637:main.c        **** * Function Name: MIDI1_UART_RXISR_ExitCallback
 638:main.c        **** ********************************************************************************
 639:main.c        **** * Summary:  Turn the LED_InA off at the end of the MIDI1_UART_RXISR ISR  
 640:main.c        **** * when data is put in the USBFS_MIDI IN endpoint buffer.
 641:main.c        **** *
 642:main.c        **** *******************************************************************************/
 643:main.c        **** void MIDI1_UART_RXISR_ExitCallback(void)
 644:main.c        **** {
 1482              		.loc 1 644 0
 1483              		.cfi_startproc
 1484              		@ args = 0, pretend = 0, frame = 0
 1485              		@ frame_needed = 1, uses_anonymous_args = 0
 1486 0000 80B5     		push	{r7, lr}
 1487              		.cfi_def_cfa_offset 8
 1488              		.cfi_offset 7, -8
 1489              		.cfi_offset 14, -4
 1490 0002 00AF     		add	r7, sp, #0
 1491              		.cfi_def_cfa_register 7
 645:main.c        ****     #if (USB_EP_MANAGEMENT_DMA_AUTO) 
 646:main.c        ****         USB_MIDI_IN_Service();
 647:main.c        ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 648:main.c        ****     
 649:main.c        ****     LED_InA_Write(0);
 1492              		.loc 1 649 0
 1493 0004 0020     		movs	r0, #0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 39


 1494 0006 FFF7FEFF 		bl	LED_InA_Write
 650:main.c        **** }
 1495              		.loc 1 650 0
 1496 000a 80BD     		pop	{r7, pc}
 1497              		.cfi_endproc
 1498              	.LFE71:
 1499              		.size	MIDI1_UART_RXISR_ExitCallback, .-MIDI1_UART_RXISR_ExitCallback
 1500              		.section	.text.MIDI2_UART_RXISR_EntryCallback,"ax",%progbits
 1501              		.align	2
 1502              		.global	MIDI2_UART_RXISR_EntryCallback
 1503              		.thumb
 1504              		.thumb_func
 1505              		.type	MIDI2_UART_RXISR_EntryCallback, %function
 1506              	MIDI2_UART_RXISR_EntryCallback:
 1507              	.LFB72:
 651:main.c        **** 
 652:main.c        **** 
 653:main.c        **** /*******************************************************************************
 654:main.c        **** * Function Name: MIDI2_UART_RXISR_EntryCallback
 655:main.c        **** ********************************************************************************
 656:main.c        **** * Summary:  Turn the LED_InB on at the beginning of the MIDI2_UART_RXISR ISR  
 657:main.c        **** * when data comes to UART2 to be put in the USBFS_MIDI IN endpoint  
 658:main.c        **** * buffer.
 659:main.c        **** *
 660:main.c        **** *******************************************************************************/
 661:main.c        **** void MIDI2_UART_RXISR_EntryCallback(void)
 662:main.c        **** {
 1508              		.loc 1 662 0
 1509              		.cfi_startproc
 1510              		@ args = 0, pretend = 0, frame = 0
 1511              		@ frame_needed = 1, uses_anonymous_args = 0
 1512 0000 80B5     		push	{r7, lr}
 1513              		.cfi_def_cfa_offset 8
 1514              		.cfi_offset 7, -8
 1515              		.cfi_offset 14, -4
 1516 0002 00AF     		add	r7, sp, #0
 1517              		.cfi_def_cfa_register 7
 663:main.c        ****     /* These LEDs indicate MIDI input activity */
 664:main.c        ****     LED_InB_Write(1);
 1518              		.loc 1 664 0
 1519 0004 0120     		movs	r0, #1
 1520 0006 FFF7FEFF 		bl	LED_InB_Write
 665:main.c        **** }
 1521              		.loc 1 665 0
 1522 000a 80BD     		pop	{r7, pc}
 1523              		.cfi_endproc
 1524              	.LFE72:
 1525              		.size	MIDI2_UART_RXISR_EntryCallback, .-MIDI2_UART_RXISR_EntryCallback
 1526              		.section	.text.MIDI2_UART_RXISR_ExitCallback,"ax",%progbits
 1527              		.align	2
 1528              		.global	MIDI2_UART_RXISR_ExitCallback
 1529              		.thumb
 1530              		.thumb_func
 1531              		.type	MIDI2_UART_RXISR_ExitCallback, %function
 1532              	MIDI2_UART_RXISR_ExitCallback:
 1533              	.LFB73:
 666:main.c        **** 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 40


 667:main.c        **** 
 668:main.c        **** /*******************************************************************************
 669:main.c        **** * Function Name: MIDI2_UART_RXISR_ExitCallback
 670:main.c        **** ********************************************************************************
 671:main.c        **** * Summary:  Turn the LED_InB off at the end of the MIDI2_UART_RXISR ISR  
 672:main.c        **** * when data is put in the USBFS_MIDI IN endpoint buffer
 673:main.c        **** *
 674:main.c        **** *******************************************************************************/
 675:main.c        **** void MIDI2_UART_RXISR_ExitCallback(void)
 676:main.c        **** {
 1534              		.loc 1 676 0
 1535              		.cfi_startproc
 1536              		@ args = 0, pretend = 0, frame = 0
 1537              		@ frame_needed = 1, uses_anonymous_args = 0
 1538 0000 80B5     		push	{r7, lr}
 1539              		.cfi_def_cfa_offset 8
 1540              		.cfi_offset 7, -8
 1541              		.cfi_offset 14, -4
 1542 0002 00AF     		add	r7, sp, #0
 1543              		.cfi_def_cfa_register 7
 677:main.c        ****     #if (USB_EP_MANAGEMENT_DMA_AUTO) 
 678:main.c        ****         USB_MIDI_IN_Service();
 679:main.c        ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 680:main.c        ****     
 681:main.c        ****     LED_InB_Write(0);
 1544              		.loc 1 681 0
 1545 0004 0020     		movs	r0, #0
 1546 0006 FFF7FEFF 		bl	LED_InB_Write
 682:main.c        **** }
 1547              		.loc 1 682 0
 1548 000a 80BD     		pop	{r7, pc}
 1549              		.cfi_endproc
 1550              	.LFE73:
 1551              		.size	MIDI2_UART_RXISR_ExitCallback, .-MIDI2_UART_RXISR_ExitCallback
 1552              		.text
 1553              	.Letext0:
 1554              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1555              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1556              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1557              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1558              		.section	.debug_info,"",%progbits
 1559              	.Ldebug_info0:
 1560 0000 61020000 		.4byte	0x261
 1561 0004 0400     		.2byte	0x4
 1562 0006 00000000 		.4byte	.Ldebug_abbrev0
 1563 000a 04       		.byte	0x4
 1564 000b 01       		.uleb128 0x1
 1565 000c 53000000 		.4byte	.LASF38
 1566 0010 01       		.byte	0x1
 1567 0011 D2020000 		.4byte	.LASF39
 1568 0015 6C010000 		.4byte	.LASF40
 1569 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1570 001d 00000000 		.4byte	0
 1571 0021 00000000 		.4byte	.Ldebug_line0
 1572 0025 02       		.uleb128 0x2
 1573 0026 01       		.byte	0x1
 1574 0027 06       		.byte	0x6
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 41


 1575 0028 1A030000 		.4byte	.LASF0
 1576 002c 02       		.uleb128 0x2
 1577 002d 01       		.byte	0x1
 1578 002e 08       		.byte	0x8
 1579 002f 26010000 		.4byte	.LASF1
 1580 0033 02       		.uleb128 0x2
 1581 0034 02       		.byte	0x2
 1582 0035 05       		.byte	0x5
 1583 0036 01030000 		.4byte	.LASF2
 1584 003a 02       		.uleb128 0x2
 1585 003b 02       		.byte	0x2
 1586 003c 07       		.byte	0x7
 1587 003d 46010000 		.4byte	.LASF3
 1588 0041 03       		.uleb128 0x3
 1589 0042 2A000000 		.4byte	.LASF9
 1590 0046 02       		.byte	0x2
 1591 0047 3F       		.byte	0x3f
 1592 0048 4C000000 		.4byte	0x4c
 1593 004c 02       		.uleb128 0x2
 1594 004d 04       		.byte	0x4
 1595 004e 05       		.byte	0x5
 1596 004f 11030000 		.4byte	.LASF4
 1597 0053 02       		.uleb128 0x2
 1598 0054 04       		.byte	0x4
 1599 0055 07       		.byte	0x7
 1600 0056 34010000 		.4byte	.LASF5
 1601 005a 02       		.uleb128 0x2
 1602 005b 08       		.byte	0x8
 1603 005c 05       		.byte	0x5
 1604 005d 18010000 		.4byte	.LASF6
 1605 0061 02       		.uleb128 0x2
 1606 0062 08       		.byte	0x8
 1607 0063 07       		.byte	0x7
 1608 0064 32020000 		.4byte	.LASF7
 1609 0068 04       		.uleb128 0x4
 1610 0069 04       		.byte	0x4
 1611 006a 05       		.byte	0x5
 1612 006b 696E7400 		.ascii	"int\000"
 1613 006f 02       		.uleb128 0x2
 1614 0070 04       		.byte	0x4
 1615 0071 07       		.byte	0x7
 1616 0072 25020000 		.4byte	.LASF8
 1617 0076 03       		.uleb128 0x3
 1618 0077 9A020000 		.4byte	.LASF10
 1619 007b 03       		.byte	0x3
 1620 007c 2C       		.byte	0x2c
 1621 007d 41000000 		.4byte	0x41
 1622 0081 05       		.uleb128 0x5
 1623 0082 0B030000 		.4byte	.LASF11
 1624 0086 04       		.byte	0x4
 1625 0087 9201     		.2byte	0x192
 1626 0089 2C000000 		.4byte	0x2c
 1627 008d 02       		.uleb128 0x2
 1628 008e 04       		.byte	0x4
 1629 008f 04       		.byte	0x4
 1630 0090 12010000 		.4byte	.LASF12
 1631 0094 02       		.uleb128 0x2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 42


 1632 0095 08       		.byte	0x8
 1633 0096 04       		.byte	0x4
 1634 0097 B7010000 		.4byte	.LASF13
 1635 009b 02       		.uleb128 0x2
 1636 009c 01       		.byte	0x1
 1637 009d 08       		.byte	0x8
 1638 009e D9020000 		.4byte	.LASF14
 1639 00a2 06       		.uleb128 0x6
 1640 00a3 81000000 		.4byte	0x81
 1641 00a7 02       		.uleb128 0x2
 1642 00a8 04       		.byte	0x4
 1643 00a9 07       		.byte	0x7
 1644 00aa A2020000 		.4byte	.LASF15
 1645 00ae 07       		.uleb128 0x7
 1646 00af 81000000 		.4byte	0x81
 1647 00b3 BE000000 		.4byte	0xbe
 1648 00b7 08       		.uleb128 0x8
 1649 00b8 A7000000 		.4byte	0xa7
 1650 00bc 03       		.byte	0x3
 1651 00bd 00       		.byte	0
 1652 00be 09       		.uleb128 0x9
 1653 00bf F6010000 		.4byte	.LASF20
 1654 00c3 01       		.byte	0x1
 1655 00c4 5B       		.byte	0x5b
 1656 00c5 00000000 		.4byte	.LFB63
 1657 00c9 30000000 		.4byte	.LFE63-.LFB63
 1658 00cd 01       		.uleb128 0x1
 1659 00ce 9C       		.byte	0x9c
 1660 00cf 0A       		.uleb128 0xa
 1661 00d0 BE010000 		.4byte	.LASF16
 1662 00d4 01       		.byte	0x1
 1663 00d5 72       		.byte	0x72
 1664 00d6 68000000 		.4byte	0x68
 1665 00da 00000000 		.4byte	.LFB64
 1666 00de 10020000 		.4byte	.LFE64-.LFB64
 1667 00e2 01       		.uleb128 0x1
 1668 00e3 9C       		.byte	0x9c
 1669 00e4 F7000000 		.4byte	0xf7
 1670 00e8 0B       		.uleb128 0xb
 1671 00e9 F9020000 		.4byte	.LASF19
 1672 00ed 01       		.byte	0x1
 1673 00ee 74       		.byte	0x74
 1674 00ef AE000000 		.4byte	0xae
 1675 00f3 02       		.uleb128 0x2
 1676 00f4 91       		.byte	0x91
 1677 00f5 74       		.sleb128 -12
 1678 00f6 00       		.byte	0
 1679 00f7 0C       		.uleb128 0xc
 1680 00f8 DE020000 		.4byte	.LASF17
 1681 00fc 01       		.byte	0x1
 1682 00fd 5501     		.2byte	0x155
 1683 00ff 00000000 		.4byte	.LFB65
 1684 0103 DC060000 		.4byte	.LFE65-.LFB65
 1685 0107 01       		.uleb128 0x1
 1686 0108 9C       		.byte	0x9c
 1687 0109 2C010000 		.4byte	0x12c
 1688 010d 0D       		.uleb128 0xd
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 43


 1689 010e 59010000 		.4byte	.LASF18
 1690 0112 01       		.byte	0x1
 1691 0113 5501     		.2byte	0x155
 1692 0115 81000000 		.4byte	0x81
 1693 0119 02       		.uleb128 0x2
 1694 011a 91       		.byte	0x91
 1695 011b 77       		.sleb128 -9
 1696 011c 0D       		.uleb128 0xd
 1697 011d F9020000 		.4byte	.LASF19
 1698 0121 01       		.byte	0x1
 1699 0122 5501     		.2byte	0x155
 1700 0124 2C010000 		.4byte	0x12c
 1701 0128 02       		.uleb128 0x2
 1702 0129 91       		.byte	0x91
 1703 012a 70       		.sleb128 -16
 1704 012b 00       		.byte	0
 1705 012c 0E       		.uleb128 0xe
 1706 012d 04       		.byte	0x4
 1707 012e 81000000 		.4byte	0x81
 1708 0132 0F       		.uleb128 0xf
 1709 0133 FF010000 		.4byte	.LASF21
 1710 0137 01       		.byte	0x1
 1711 0138 3F02     		.2byte	0x23f
 1712 013a 00000000 		.4byte	.LFB66
 1713 013e 0C000000 		.4byte	.LFE66-.LFB66
 1714 0142 01       		.uleb128 0x1
 1715 0143 9C       		.byte	0x9c
 1716 0144 0F       		.uleb128 0xf
 1717 0145 26030000 		.4byte	.LASF22
 1718 0149 01       		.byte	0x1
 1719 014a 4C02     		.2byte	0x24c
 1720 014c 00000000 		.4byte	.LFB67
 1721 0150 0C000000 		.4byte	.LFE67-.LFB67
 1722 0154 01       		.uleb128 0x1
 1723 0155 9C       		.byte	0x9c
 1724 0156 10       		.uleb128 0x10
 1725 0157 C3010000 		.4byte	.LASF23
 1726 015b 01       		.byte	0x1
 1727 015c 5A02     		.2byte	0x25a
 1728 015e 00000000 		.4byte	.LFB68
 1729 0162 0C000000 		.4byte	.LFE68-.LFB68
 1730 0166 01       		.uleb128 0x1
 1731 0167 9C       		.byte	0x9c
 1732 0168 10       		.uleb128 0x10
 1733 0169 56020000 		.4byte	.LASF24
 1734 016d 01       		.byte	0x1
 1735 016e 6702     		.2byte	0x267
 1736 0170 00000000 		.4byte	.LFB69
 1737 0174 0C000000 		.4byte	.LFE69-.LFB69
 1738 0178 01       		.uleb128 0x1
 1739 0179 9C       		.byte	0x9c
 1740 017a 10       		.uleb128 0x10
 1741 017b 7B020000 		.4byte	.LASF25
 1742 017f 01       		.byte	0x1
 1743 0180 7502     		.2byte	0x275
 1744 0182 00000000 		.4byte	.LFB70
 1745 0186 0C000000 		.4byte	.LFE70-.LFB70
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 44


 1746 018a 01       		.uleb128 0x1
 1747 018b 9C       		.byte	0x9c
 1748 018c 10       		.uleb128 0x10
 1749 018d E1000000 		.4byte	.LASF26
 1750 0191 01       		.byte	0x1
 1751 0192 8302     		.2byte	0x283
 1752 0194 00000000 		.4byte	.LFB71
 1753 0198 0C000000 		.4byte	.LFE71-.LFB71
 1754 019c 01       		.uleb128 0x1
 1755 019d 9C       		.byte	0x9c
 1756 019e 10       		.uleb128 0x10
 1757 019f 34000000 		.4byte	.LASF27
 1758 01a3 01       		.byte	0x1
 1759 01a4 9502     		.2byte	0x295
 1760 01a6 00000000 		.4byte	.LFB72
 1761 01aa 0C000000 		.4byte	.LFE72-.LFB72
 1762 01ae 01       		.uleb128 0x1
 1763 01af 9C       		.byte	0x9c
 1764 01b0 10       		.uleb128 0x10
 1765 01b1 0C000000 		.4byte	.LASF28
 1766 01b5 01       		.byte	0x1
 1767 01b6 A302     		.2byte	0x2a3
 1768 01b8 00000000 		.4byte	.LFB73
 1769 01bc 0C000000 		.4byte	.LFE73-.LFB73
 1770 01c0 01       		.uleb128 0x1
 1771 01c1 9C       		.byte	0x9c
 1772 01c2 11       		.uleb128 0x11
 1773 01c3 BF020000 		.4byte	.LASF29
 1774 01c7 01       		.byte	0x1
 1775 01c8 43       		.byte	0x43
 1776 01c9 A2000000 		.4byte	0xa2
 1777 01cd 11       		.uleb128 0x11
 1778 01ce 4B030000 		.4byte	.LASF30
 1779 01d2 01       		.byte	0x1
 1780 01d3 44       		.byte	0x44
 1781 01d4 A2000000 		.4byte	0xa2
 1782 01d8 12       		.uleb128 0x12
 1783 01d9 5F010000 		.4byte	.LASF31
 1784 01dd 05       		.byte	0x5
 1785 01de 9606     		.2byte	0x696
 1786 01e0 E4010000 		.4byte	0x1e4
 1787 01e4 06       		.uleb128 0x6
 1788 01e5 76000000 		.4byte	0x76
 1789 01e9 07       		.uleb128 0x7
 1790 01ea 81000000 		.4byte	0x81
 1791 01ee F9010000 		.4byte	0x1f9
 1792 01f2 08       		.uleb128 0x8
 1793 01f3 A7000000 		.4byte	0xa7
 1794 01f7 0D       		.byte	0xd
 1795 01f8 00       		.byte	0
 1796 01f9 13       		.uleb128 0x13
 1797 01fa AB020000 		.4byte	.LASF32
 1798 01fe 01       		.byte	0x1
 1799 01ff 35       		.byte	0x35
 1800 0200 0A020000 		.4byte	0x20a
 1801 0204 05       		.uleb128 0x5
 1802 0205 03       		.byte	0x3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 45


 1803 0206 00000000 		.4byte	MIDI_IDENTITY_REPLY
 1804 020a 14       		.uleb128 0x14
 1805 020b E9010000 		.4byte	0x1e9
 1806 020f 13       		.uleb128 0x13
 1807 0210 FF000000 		.4byte	.LASF33
 1808 0214 01       		.byte	0x1
 1809 0215 46       		.byte	0x46
 1810 0216 A2000000 		.4byte	0xa2
 1811 021a 05       		.uleb128 0x5
 1812 021b 03       		.byte	0x3
 1813 021c 00000000 		.4byte	usbActivityCounter
 1814 0220 13       		.uleb128 0x13
 1815 0221 49020000 		.4byte	.LASF34
 1816 0225 01       		.byte	0x1
 1817 0226 48       		.byte	0x48
 1818 0227 81000000 		.4byte	0x81
 1819 022b 05       		.uleb128 0x5
 1820 022c 03       		.byte	0x3
 1821 022d 00000000 		.4byte	csButtStates
 1822 0231 13       		.uleb128 0x13
 1823 0232 5E030000 		.4byte	.LASF35
 1824 0236 01       		.byte	0x1
 1825 0237 49       		.byte	0x49
 1826 0238 81000000 		.4byte	0x81
 1827 023c 05       		.uleb128 0x5
 1828 023d 03       		.byte	0x3
 1829 023e 00000000 		.4byte	csButtStatesOld
 1830 0242 13       		.uleb128 0x13
 1831 0243 E9010000 		.4byte	.LASF36
 1832 0247 01       		.byte	0x1
 1833 0248 4A       		.byte	0x4a
 1834 0249 81000000 		.4byte	0x81
 1835 024d 05       		.uleb128 0x5
 1836 024e 03       		.byte	0x3
 1837 024f 00000000 		.4byte	csButtChange
 1838 0253 13       		.uleb128 0x13
 1839 0254 00000000 		.4byte	.LASF37
 1840 0258 01       		.byte	0x1
 1841 0259 4B       		.byte	0x4b
 1842 025a 81000000 		.4byte	0x81
 1843 025e 05       		.uleb128 0x5
 1844 025f 03       		.byte	0x3
 1845 0260 00000000 		.4byte	inqFlagsOld
 1846 0264 00       		.byte	0
 1847              		.section	.debug_abbrev,"",%progbits
 1848              	.Ldebug_abbrev0:
 1849 0000 01       		.uleb128 0x1
 1850 0001 11       		.uleb128 0x11
 1851 0002 01       		.byte	0x1
 1852 0003 25       		.uleb128 0x25
 1853 0004 0E       		.uleb128 0xe
 1854 0005 13       		.uleb128 0x13
 1855 0006 0B       		.uleb128 0xb
 1856 0007 03       		.uleb128 0x3
 1857 0008 0E       		.uleb128 0xe
 1858 0009 1B       		.uleb128 0x1b
 1859 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 46


 1860 000b 55       		.uleb128 0x55
 1861 000c 17       		.uleb128 0x17
 1862 000d 11       		.uleb128 0x11
 1863 000e 01       		.uleb128 0x1
 1864 000f 10       		.uleb128 0x10
 1865 0010 17       		.uleb128 0x17
 1866 0011 00       		.byte	0
 1867 0012 00       		.byte	0
 1868 0013 02       		.uleb128 0x2
 1869 0014 24       		.uleb128 0x24
 1870 0015 00       		.byte	0
 1871 0016 0B       		.uleb128 0xb
 1872 0017 0B       		.uleb128 0xb
 1873 0018 3E       		.uleb128 0x3e
 1874 0019 0B       		.uleb128 0xb
 1875 001a 03       		.uleb128 0x3
 1876 001b 0E       		.uleb128 0xe
 1877 001c 00       		.byte	0
 1878 001d 00       		.byte	0
 1879 001e 03       		.uleb128 0x3
 1880 001f 16       		.uleb128 0x16
 1881 0020 00       		.byte	0
 1882 0021 03       		.uleb128 0x3
 1883 0022 0E       		.uleb128 0xe
 1884 0023 3A       		.uleb128 0x3a
 1885 0024 0B       		.uleb128 0xb
 1886 0025 3B       		.uleb128 0x3b
 1887 0026 0B       		.uleb128 0xb
 1888 0027 49       		.uleb128 0x49
 1889 0028 13       		.uleb128 0x13
 1890 0029 00       		.byte	0
 1891 002a 00       		.byte	0
 1892 002b 04       		.uleb128 0x4
 1893 002c 24       		.uleb128 0x24
 1894 002d 00       		.byte	0
 1895 002e 0B       		.uleb128 0xb
 1896 002f 0B       		.uleb128 0xb
 1897 0030 3E       		.uleb128 0x3e
 1898 0031 0B       		.uleb128 0xb
 1899 0032 03       		.uleb128 0x3
 1900 0033 08       		.uleb128 0x8
 1901 0034 00       		.byte	0
 1902 0035 00       		.byte	0
 1903 0036 05       		.uleb128 0x5
 1904 0037 16       		.uleb128 0x16
 1905 0038 00       		.byte	0
 1906 0039 03       		.uleb128 0x3
 1907 003a 0E       		.uleb128 0xe
 1908 003b 3A       		.uleb128 0x3a
 1909 003c 0B       		.uleb128 0xb
 1910 003d 3B       		.uleb128 0x3b
 1911 003e 05       		.uleb128 0x5
 1912 003f 49       		.uleb128 0x49
 1913 0040 13       		.uleb128 0x13
 1914 0041 00       		.byte	0
 1915 0042 00       		.byte	0
 1916 0043 06       		.uleb128 0x6
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 47


 1917 0044 35       		.uleb128 0x35
 1918 0045 00       		.byte	0
 1919 0046 49       		.uleb128 0x49
 1920 0047 13       		.uleb128 0x13
 1921 0048 00       		.byte	0
 1922 0049 00       		.byte	0
 1923 004a 07       		.uleb128 0x7
 1924 004b 01       		.uleb128 0x1
 1925 004c 01       		.byte	0x1
 1926 004d 49       		.uleb128 0x49
 1927 004e 13       		.uleb128 0x13
 1928 004f 01       		.uleb128 0x1
 1929 0050 13       		.uleb128 0x13
 1930 0051 00       		.byte	0
 1931 0052 00       		.byte	0
 1932 0053 08       		.uleb128 0x8
 1933 0054 21       		.uleb128 0x21
 1934 0055 00       		.byte	0
 1935 0056 49       		.uleb128 0x49
 1936 0057 13       		.uleb128 0x13
 1937 0058 2F       		.uleb128 0x2f
 1938 0059 0B       		.uleb128 0xb
 1939 005a 00       		.byte	0
 1940 005b 00       		.byte	0
 1941 005c 09       		.uleb128 0x9
 1942 005d 2E       		.uleb128 0x2e
 1943 005e 00       		.byte	0
 1944 005f 3F       		.uleb128 0x3f
 1945 0060 19       		.uleb128 0x19
 1946 0061 03       		.uleb128 0x3
 1947 0062 0E       		.uleb128 0xe
 1948 0063 3A       		.uleb128 0x3a
 1949 0064 0B       		.uleb128 0xb
 1950 0065 3B       		.uleb128 0x3b
 1951 0066 0B       		.uleb128 0xb
 1952 0067 27       		.uleb128 0x27
 1953 0068 19       		.uleb128 0x19
 1954 0069 11       		.uleb128 0x11
 1955 006a 01       		.uleb128 0x1
 1956 006b 12       		.uleb128 0x12
 1957 006c 06       		.uleb128 0x6
 1958 006d 40       		.uleb128 0x40
 1959 006e 18       		.uleb128 0x18
 1960 006f 9642     		.uleb128 0x2116
 1961 0071 19       		.uleb128 0x19
 1962 0072 00       		.byte	0
 1963 0073 00       		.byte	0
 1964 0074 0A       		.uleb128 0xa
 1965 0075 2E       		.uleb128 0x2e
 1966 0076 01       		.byte	0x1
 1967 0077 3F       		.uleb128 0x3f
 1968 0078 19       		.uleb128 0x19
 1969 0079 03       		.uleb128 0x3
 1970 007a 0E       		.uleb128 0xe
 1971 007b 3A       		.uleb128 0x3a
 1972 007c 0B       		.uleb128 0xb
 1973 007d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 48


 1974 007e 0B       		.uleb128 0xb
 1975 007f 49       		.uleb128 0x49
 1976 0080 13       		.uleb128 0x13
 1977 0081 11       		.uleb128 0x11
 1978 0082 01       		.uleb128 0x1
 1979 0083 12       		.uleb128 0x12
 1980 0084 06       		.uleb128 0x6
 1981 0085 40       		.uleb128 0x40
 1982 0086 18       		.uleb128 0x18
 1983 0087 9642     		.uleb128 0x2116
 1984 0089 19       		.uleb128 0x19
 1985 008a 01       		.uleb128 0x1
 1986 008b 13       		.uleb128 0x13
 1987 008c 00       		.byte	0
 1988 008d 00       		.byte	0
 1989 008e 0B       		.uleb128 0xb
 1990 008f 34       		.uleb128 0x34
 1991 0090 00       		.byte	0
 1992 0091 03       		.uleb128 0x3
 1993 0092 0E       		.uleb128 0xe
 1994 0093 3A       		.uleb128 0x3a
 1995 0094 0B       		.uleb128 0xb
 1996 0095 3B       		.uleb128 0x3b
 1997 0096 0B       		.uleb128 0xb
 1998 0097 49       		.uleb128 0x49
 1999 0098 13       		.uleb128 0x13
 2000 0099 02       		.uleb128 0x2
 2001 009a 18       		.uleb128 0x18
 2002 009b 00       		.byte	0
 2003 009c 00       		.byte	0
 2004 009d 0C       		.uleb128 0xc
 2005 009e 2E       		.uleb128 0x2e
 2006 009f 01       		.byte	0x1
 2007 00a0 3F       		.uleb128 0x3f
 2008 00a1 19       		.uleb128 0x19
 2009 00a2 03       		.uleb128 0x3
 2010 00a3 0E       		.uleb128 0xe
 2011 00a4 3A       		.uleb128 0x3a
 2012 00a5 0B       		.uleb128 0xb
 2013 00a6 3B       		.uleb128 0x3b
 2014 00a7 05       		.uleb128 0x5
 2015 00a8 27       		.uleb128 0x27
 2016 00a9 19       		.uleb128 0x19
 2017 00aa 11       		.uleb128 0x11
 2018 00ab 01       		.uleb128 0x1
 2019 00ac 12       		.uleb128 0x12
 2020 00ad 06       		.uleb128 0x6
 2021 00ae 40       		.uleb128 0x40
 2022 00af 18       		.uleb128 0x18
 2023 00b0 9642     		.uleb128 0x2116
 2024 00b2 19       		.uleb128 0x19
 2025 00b3 01       		.uleb128 0x1
 2026 00b4 13       		.uleb128 0x13
 2027 00b5 00       		.byte	0
 2028 00b6 00       		.byte	0
 2029 00b7 0D       		.uleb128 0xd
 2030 00b8 05       		.uleb128 0x5
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 49


 2031 00b9 00       		.byte	0
 2032 00ba 03       		.uleb128 0x3
 2033 00bb 0E       		.uleb128 0xe
 2034 00bc 3A       		.uleb128 0x3a
 2035 00bd 0B       		.uleb128 0xb
 2036 00be 3B       		.uleb128 0x3b
 2037 00bf 05       		.uleb128 0x5
 2038 00c0 49       		.uleb128 0x49
 2039 00c1 13       		.uleb128 0x13
 2040 00c2 02       		.uleb128 0x2
 2041 00c3 18       		.uleb128 0x18
 2042 00c4 00       		.byte	0
 2043 00c5 00       		.byte	0
 2044 00c6 0E       		.uleb128 0xe
 2045 00c7 0F       		.uleb128 0xf
 2046 00c8 00       		.byte	0
 2047 00c9 0B       		.uleb128 0xb
 2048 00ca 0B       		.uleb128 0xb
 2049 00cb 49       		.uleb128 0x49
 2050 00cc 13       		.uleb128 0x13
 2051 00cd 00       		.byte	0
 2052 00ce 00       		.byte	0
 2053 00cf 0F       		.uleb128 0xf
 2054 00d0 2E       		.uleb128 0x2e
 2055 00d1 00       		.byte	0
 2056 00d2 3F       		.uleb128 0x3f
 2057 00d3 19       		.uleb128 0x19
 2058 00d4 03       		.uleb128 0x3
 2059 00d5 0E       		.uleb128 0xe
 2060 00d6 3A       		.uleb128 0x3a
 2061 00d7 0B       		.uleb128 0xb
 2062 00d8 3B       		.uleb128 0x3b
 2063 00d9 05       		.uleb128 0x5
 2064 00da 27       		.uleb128 0x27
 2065 00db 19       		.uleb128 0x19
 2066 00dc 11       		.uleb128 0x11
 2067 00dd 01       		.uleb128 0x1
 2068 00de 12       		.uleb128 0x12
 2069 00df 06       		.uleb128 0x6
 2070 00e0 40       		.uleb128 0x40
 2071 00e1 18       		.uleb128 0x18
 2072 00e2 9742     		.uleb128 0x2117
 2073 00e4 19       		.uleb128 0x19
 2074 00e5 00       		.byte	0
 2075 00e6 00       		.byte	0
 2076 00e7 10       		.uleb128 0x10
 2077 00e8 2E       		.uleb128 0x2e
 2078 00e9 00       		.byte	0
 2079 00ea 3F       		.uleb128 0x3f
 2080 00eb 19       		.uleb128 0x19
 2081 00ec 03       		.uleb128 0x3
 2082 00ed 0E       		.uleb128 0xe
 2083 00ee 3A       		.uleb128 0x3a
 2084 00ef 0B       		.uleb128 0xb
 2085 00f0 3B       		.uleb128 0x3b
 2086 00f1 05       		.uleb128 0x5
 2087 00f2 27       		.uleb128 0x27
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 50


 2088 00f3 19       		.uleb128 0x19
 2089 00f4 11       		.uleb128 0x11
 2090 00f5 01       		.uleb128 0x1
 2091 00f6 12       		.uleb128 0x12
 2092 00f7 06       		.uleb128 0x6
 2093 00f8 40       		.uleb128 0x40
 2094 00f9 18       		.uleb128 0x18
 2095 00fa 9642     		.uleb128 0x2116
 2096 00fc 19       		.uleb128 0x19
 2097 00fd 00       		.byte	0
 2098 00fe 00       		.byte	0
 2099 00ff 11       		.uleb128 0x11
 2100 0100 34       		.uleb128 0x34
 2101 0101 00       		.byte	0
 2102 0102 03       		.uleb128 0x3
 2103 0103 0E       		.uleb128 0xe
 2104 0104 3A       		.uleb128 0x3a
 2105 0105 0B       		.uleb128 0xb
 2106 0106 3B       		.uleb128 0x3b
 2107 0107 0B       		.uleb128 0xb
 2108 0108 49       		.uleb128 0x49
 2109 0109 13       		.uleb128 0x13
 2110 010a 3F       		.uleb128 0x3f
 2111 010b 19       		.uleb128 0x19
 2112 010c 3C       		.uleb128 0x3c
 2113 010d 19       		.uleb128 0x19
 2114 010e 00       		.byte	0
 2115 010f 00       		.byte	0
 2116 0110 12       		.uleb128 0x12
 2117 0111 34       		.uleb128 0x34
 2118 0112 00       		.byte	0
 2119 0113 03       		.uleb128 0x3
 2120 0114 0E       		.uleb128 0xe
 2121 0115 3A       		.uleb128 0x3a
 2122 0116 0B       		.uleb128 0xb
 2123 0117 3B       		.uleb128 0x3b
 2124 0118 05       		.uleb128 0x5
 2125 0119 49       		.uleb128 0x49
 2126 011a 13       		.uleb128 0x13
 2127 011b 3F       		.uleb128 0x3f
 2128 011c 19       		.uleb128 0x19
 2129 011d 3C       		.uleb128 0x3c
 2130 011e 19       		.uleb128 0x19
 2131 011f 00       		.byte	0
 2132 0120 00       		.byte	0
 2133 0121 13       		.uleb128 0x13
 2134 0122 34       		.uleb128 0x34
 2135 0123 00       		.byte	0
 2136 0124 03       		.uleb128 0x3
 2137 0125 0E       		.uleb128 0xe
 2138 0126 3A       		.uleb128 0x3a
 2139 0127 0B       		.uleb128 0xb
 2140 0128 3B       		.uleb128 0x3b
 2141 0129 0B       		.uleb128 0xb
 2142 012a 49       		.uleb128 0x49
 2143 012b 13       		.uleb128 0x13
 2144 012c 3F       		.uleb128 0x3f
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 51


 2145 012d 19       		.uleb128 0x19
 2146 012e 02       		.uleb128 0x2
 2147 012f 18       		.uleb128 0x18
 2148 0130 00       		.byte	0
 2149 0131 00       		.byte	0
 2150 0132 14       		.uleb128 0x14
 2151 0133 26       		.uleb128 0x26
 2152 0134 00       		.byte	0
 2153 0135 49       		.uleb128 0x49
 2154 0136 13       		.uleb128 0x13
 2155 0137 00       		.byte	0
 2156 0138 00       		.byte	0
 2157 0139 00       		.byte	0
 2158              		.section	.debug_aranges,"",%progbits
 2159 0000 6C000000 		.4byte	0x6c
 2160 0004 0200     		.2byte	0x2
 2161 0006 00000000 		.4byte	.Ldebug_info0
 2162 000a 04       		.byte	0x4
 2163 000b 00       		.byte	0
 2164 000c 0000     		.2byte	0
 2165 000e 0000     		.2byte	0
 2166 0010 00000000 		.4byte	.LFB63
 2167 0014 30000000 		.4byte	.LFE63-.LFB63
 2168 0018 00000000 		.4byte	.LFB64
 2169 001c 10020000 		.4byte	.LFE64-.LFB64
 2170 0020 00000000 		.4byte	.LFB65
 2171 0024 DC060000 		.4byte	.LFE65-.LFB65
 2172 0028 00000000 		.4byte	.LFB66
 2173 002c 0C000000 		.4byte	.LFE66-.LFB66
 2174 0030 00000000 		.4byte	.LFB67
 2175 0034 0C000000 		.4byte	.LFE67-.LFB67
 2176 0038 00000000 		.4byte	.LFB68
 2177 003c 0C000000 		.4byte	.LFE68-.LFB68
 2178 0040 00000000 		.4byte	.LFB69
 2179 0044 0C000000 		.4byte	.LFE69-.LFB69
 2180 0048 00000000 		.4byte	.LFB70
 2181 004c 0C000000 		.4byte	.LFE70-.LFB70
 2182 0050 00000000 		.4byte	.LFB71
 2183 0054 0C000000 		.4byte	.LFE71-.LFB71
 2184 0058 00000000 		.4byte	.LFB72
 2185 005c 0C000000 		.4byte	.LFE72-.LFB72
 2186 0060 00000000 		.4byte	.LFB73
 2187 0064 0C000000 		.4byte	.LFE73-.LFB73
 2188 0068 00000000 		.4byte	0
 2189 006c 00000000 		.4byte	0
 2190              		.section	.debug_ranges,"",%progbits
 2191              	.Ldebug_ranges0:
 2192 0000 00000000 		.4byte	.LFB63
 2193 0004 30000000 		.4byte	.LFE63
 2194 0008 00000000 		.4byte	.LFB64
 2195 000c 10020000 		.4byte	.LFE64
 2196 0010 00000000 		.4byte	.LFB65
 2197 0014 DC060000 		.4byte	.LFE65
 2198 0018 00000000 		.4byte	.LFB66
 2199 001c 0C000000 		.4byte	.LFE66
 2200 0020 00000000 		.4byte	.LFB67
 2201 0024 0C000000 		.4byte	.LFE67
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 52


 2202 0028 00000000 		.4byte	.LFB68
 2203 002c 0C000000 		.4byte	.LFE68
 2204 0030 00000000 		.4byte	.LFB69
 2205 0034 0C000000 		.4byte	.LFE69
 2206 0038 00000000 		.4byte	.LFB70
 2207 003c 0C000000 		.4byte	.LFE70
 2208 0040 00000000 		.4byte	.LFB71
 2209 0044 0C000000 		.4byte	.LFE71
 2210 0048 00000000 		.4byte	.LFB72
 2211 004c 0C000000 		.4byte	.LFE72
 2212 0050 00000000 		.4byte	.LFB73
 2213 0054 0C000000 		.4byte	.LFE73
 2214 0058 00000000 		.4byte	0
 2215 005c 00000000 		.4byte	0
 2216              		.section	.debug_line,"",%progbits
 2217              	.Ldebug_line0:
 2218 0000 D2020000 		.section	.debug_str,"MS",%progbits,1
 2218      02004701 
 2218      00000201 
 2218      FB0E0D00 
 2218      01010101 
 2219              	.LASF37:
 2220 0000 696E7146 		.ascii	"inqFlagsOld\000"
 2220      6C616773 
 2220      4F6C6400 
 2221              	.LASF28:
 2222 000c 4D494449 		.ascii	"MIDI2_UART_RXISR_ExitCallback\000"
 2222      325F5541 
 2222      52545F52 
 2222      58495352 
 2222      5F457869 
 2223              	.LASF9:
 2224 002a 5F5F696E 		.ascii	"__int32_t\000"
 2224      7433325F 
 2224      7400
 2225              	.LASF27:
 2226 0034 4D494449 		.ascii	"MIDI2_UART_RXISR_EntryCallback\000"
 2226      325F5541 
 2226      52545F52 
 2226      58495352 
 2226      5F456E74 
 2227              	.LASF38:
 2228 0053 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2228      4320342E 
 2228      392E3320 
 2228      32303135 
 2228      30333033 
 2229 0086 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2229      20726576 
 2229      6973696F 
 2229      6E203232 
 2229      31323230 
 2230 00b9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2230      66756E63 
 2230      74696F6E 
 2230      2D736563 
 2230      74696F6E 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 53


 2231              	.LASF26:
 2232 00e1 4D494449 		.ascii	"MIDI1_UART_RXISR_ExitCallback\000"
 2232      315F5541 
 2232      52545F52 
 2232      58495352 
 2232      5F457869 
 2233              	.LASF33:
 2234 00ff 75736241 		.ascii	"usbActivityCounter\000"
 2234      63746976 
 2234      69747943 
 2234      6F756E74 
 2234      657200
 2235              	.LASF12:
 2236 0112 666C6F61 		.ascii	"float\000"
 2236      7400
 2237              	.LASF6:
 2238 0118 6C6F6E67 		.ascii	"long long int\000"
 2238      206C6F6E 
 2238      6720696E 
 2238      7400
 2239              	.LASF1:
 2240 0126 756E7369 		.ascii	"unsigned char\000"
 2240      676E6564 
 2240      20636861 
 2240      7200
 2241              	.LASF5:
 2242 0134 6C6F6E67 		.ascii	"long unsigned int\000"
 2242      20756E73 
 2242      69676E65 
 2242      6420696E 
 2242      7400
 2243              	.LASF3:
 2244 0146 73686F72 		.ascii	"short unsigned int\000"
 2244      7420756E 
 2244      7369676E 
 2244      65642069 
 2244      6E7400
 2245              	.LASF18:
 2246 0159 6361626C 		.ascii	"cable\000"
 2246      6500
 2247              	.LASF31:
 2248 015f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2248      52784275 
 2248      66666572 
 2248      00
 2249              	.LASF40:
 2250 016c 433A5C55 		.ascii	"C:\\Users\\214016586\\Documents\\GitHub\\Crumar-Acc"
 2250      73657273 
 2250      5C323134 
 2250      30313635 
 2250      38365C44 
 2251 019a 6F646572 		.ascii	"oder-Midi\\Accoder_MIDI.cydsn\000"
 2251      2D4D6964 
 2251      695C4163 
 2251      636F6465 
 2251      725F4D49 
 2252              	.LASF13:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 54


 2253 01b7 646F7562 		.ascii	"double\000"
 2253      6C6500
 2254              	.LASF16:
 2255 01be 6D61696E 		.ascii	"main\000"
 2255      00
 2256              	.LASF23:
 2257 01c3 5553425F 		.ascii	"USB_MIDI2_ProcessUsbOut_EntryCallback\000"
 2257      4D494449 
 2257      325F5072 
 2257      6F636573 
 2257      73557362 
 2258              	.LASF36:
 2259 01e9 63734275 		.ascii	"csButtChange\000"
 2259      74744368 
 2259      616E6765 
 2259      00
 2260              	.LASF20:
 2261 01f6 536C6565 		.ascii	"SleepIsr\000"
 2261      70497372 
 2261      00
 2262              	.LASF21:
 2263 01ff 5553425F 		.ascii	"USB_MIDI1_ProcessUsbOut_EntryCallback\000"
 2263      4D494449 
 2263      315F5072 
 2263      6F636573 
 2263      73557362 
 2264              	.LASF8:
 2265 0225 756E7369 		.ascii	"unsigned int\000"
 2265      676E6564 
 2265      20696E74 
 2265      00
 2266              	.LASF7:
 2267 0232 6C6F6E67 		.ascii	"long long unsigned int\000"
 2267      206C6F6E 
 2267      6720756E 
 2267      7369676E 
 2267      65642069 
 2268              	.LASF34:
 2269 0249 63734275 		.ascii	"csButtStates\000"
 2269      74745374 
 2269      61746573 
 2269      00
 2270              	.LASF24:
 2271 0256 5553425F 		.ascii	"USB_MIDI2_ProcessUsbOut_ExitCallback\000"
 2271      4D494449 
 2271      325F5072 
 2271      6F636573 
 2271      73557362 
 2272              	.LASF25:
 2273 027b 4D494449 		.ascii	"MIDI1_UART_RXISR_EntryCallback\000"
 2273      315F5541 
 2273      52545F52 
 2273      58495352 
 2273      5F456E74 
 2274              	.LASF10:
 2275 029a 696E7433 		.ascii	"int32_t\000"
 2275      325F7400 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 55


 2276              	.LASF15:
 2277 02a2 73697A65 		.ascii	"sizetype\000"
 2277      74797065 
 2277      00
 2278              	.LASF32:
 2279 02ab 4D494449 		.ascii	"MIDI_IDENTITY_REPLY\000"
 2279      5F494445 
 2279      4E544954 
 2279      595F5245 
 2279      504C5900 
 2280              	.LASF29:
 2281 02bf 5553425F 		.ascii	"USB_MIDI1_InqFlags\000"
 2281      4D494449 
 2281      315F496E 
 2281      71466C61 
 2281      677300
 2282              	.LASF39:
 2283 02d2 6D61696E 		.ascii	"main.c\000"
 2283      2E6300
 2284              	.LASF14:
 2285 02d9 63686172 		.ascii	"char\000"
 2285      00
 2286              	.LASF17:
 2287 02de 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 2287      63616C6C 
 2287      6261636B 
 2287      4C6F6361 
 2287      6C4D6964 
 2288              	.LASF19:
 2289 02f9 6D696469 		.ascii	"midiMsg\000"
 2289      4D736700 
 2290              	.LASF2:
 2291 0301 73686F72 		.ascii	"short int\000"
 2291      7420696E 
 2291      7400
 2292              	.LASF11:
 2293 030b 75696E74 		.ascii	"uint8\000"
 2293      3800
 2294              	.LASF4:
 2295 0311 6C6F6E67 		.ascii	"long int\000"
 2295      20696E74 
 2295      00
 2296              	.LASF0:
 2297 031a 7369676E 		.ascii	"signed char\000"
 2297      65642063 
 2297      68617200 
 2298              	.LASF22:
 2299 0326 5553425F 		.ascii	"USB_MIDI1_ProcessUsbOut_ExitCallback\000"
 2299      4D494449 
 2299      315F5072 
 2299      6F636573 
 2299      73557362 
 2300              	.LASF30:
 2301 034b 5553425F 		.ascii	"USB_MIDI2_InqFlags\000"
 2301      4D494449 
 2301      325F496E 
 2301      71466C61 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccbPnAWu.s 			page 56


 2301      677300
 2302              	.LASF35:
 2303 035e 63734275 		.ascii	"csButtStatesOld\000"
 2303      74745374 
 2303      61746573 
 2303      4F6C6400 
 2304              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
