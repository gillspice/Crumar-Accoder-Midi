ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	MIDI_IDENTITY_REPLY
  19              		.section	.rodata
  20              		.align	2
  21              		.type	MIDI_IDENTITY_REPLY, %object
  22              		.size	MIDI_IDENTITY_REPLY, 14
  23              	MIDI_IDENTITY_REPLY:
  24 0000 F0       		.byte	-16
  25 0001 7E       		.byte	126
  26 0002 7F       		.byte	127
  27 0003 06       		.byte	6
  28 0004 02       		.byte	2
  29 0005 7D       		.byte	125
  30 0006 B4       		.byte	-76
  31 0007 04       		.byte	4
  32 0008 32       		.byte	50
  33 0009 D2       		.byte	-46
  34 000a 01       		.byte	1
  35 000b 00       		.byte	0
  36 000c 00       		.byte	0
  37 000d 00       		.byte	0
  38              		.global	usbActivityCounter
  39 000e 0000     		.bss
  40              		.type	usbActivityCounter, %object
  41              		.size	usbActivityCounter, 1
  42              	usbActivityCounter:
  43 0000 00       		.space	1
  44              		.global	csButtStates
  45              		.type	csButtStates, %object
  46              		.size	csButtStates, 1
  47              	csButtStates:
  48 0001 00       		.space	1
  49              		.global	csButtStatesOld
  50              		.type	csButtStatesOld, %object
  51              		.size	csButtStatesOld, 1
  52              	csButtStatesOld:
  53 0002 00       		.space	1
  54              		.global	csButtChange
  55              		.type	csButtChange, %object
  56              		.size	csButtChange, 1
  57              	csButtChange:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 2


  58 0003 00       		.space	1
  59              		.global	inqFlagsOld
  60              		.type	inqFlagsOld, %object
  61              		.size	inqFlagsOld, 1
  62              	inqFlagsOld:
  63 0004 00       		.space	1
  64              		.section	.text.SleepIsr,"ax",%progbits
  65              		.align	2
  66              		.global	SleepIsr
  67              		.thumb
  68              		.thumb_func
  69              		.type	SleepIsr, %function
  70              	SleepIsr:
  71              	.LFB63:
  72              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 1.0
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This example project demonstrates the MIDI interface device operation.  The 
   8:main.c        **** *  project enumerates as a USB Audio Device with the MIDI feature and does not 
   9:main.c        **** *  require additional drivers. The main goal of the USB MIDI interface is to 
  10:main.c        **** *  transfer and convert MIDI data between external MIDI devices that use the 
  11:main.c        **** *  UART interface, and a PC through the USB bus.			
  12:main.c        **** *   
  13:main.c        **** * Related Document:
  14:main.c        **** *  Universal Serial Bus Specification Revision 2.0 
  15:main.c        **** *  Universal Serial Bus Device Class Definition for MIDI Devices Release 1.0
  16:main.c        **** *  MIDI 1.0 Detailed Specification Document Version 4.2
  17:main.c        **** *
  18:main.c        **** ********************************************************************************
  19:main.c        **** * Copyright 2012-2015, Cypress Semiconductor Corporation. All rights reserved.
  20:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  21:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  22:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  23:main.c        **** * accompanying the software package from which you obtained this software.
  24:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  25:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  26:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  27:main.c        **** *******************************************************************************/
  28:main.c        **** 
  29:main.c        **** #include <project.h>
  30:main.c        **** 
  31:main.c        **** #define BUTT1	                (0x01u)
  32:main.c        **** #define BUTT2	                (0x02u)
  33:main.c        **** 
  34:main.c        **** #define DEVICE                  (0u)
  35:main.c        **** #define MIDI_MSG_SIZE           (4u)
  36:main.c        **** 
  37:main.c        **** /*MIDI Message Fields */
  38:main.c        **** #define MIDI_MSG_TYPE           (0u)
  39:main.c        **** #define MIDI_NOTE_NUMBER        (1u)
  40:main.c        **** #define MIDI_NOTE_VELOCITY      (2u)
  41:main.c        **** 
  42:main.c        **** /* MIDI Notes*/
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 3


  43:main.c        **** #define NOTE_72                 (72u)
  44:main.c        **** #define NOTE_76                 (76u)
  45:main.c        **** 
  46:main.c        **** /* MIDI Notes Velocity*/
  47:main.c        **** #define VOLUME_OFF              (0u)
  48:main.c        **** #define VOLUME_ON               (100u)
  49:main.c        **** 
  50:main.c        **** #define USB_SUSPEND_TIMEOUT     (2u)
  51:main.c        **** 
  52:main.c        **** /* Identity Reply message */
  53:main.c        **** const uint8 CYCODE MIDI_IDENTITY_REPLY[] = {
  54:main.c        ****     0xF0u,      /* SysEx */
  55:main.c        ****     0x7Eu,      /* Non-real time */
  56:main.c        ****     0x7Fu,      /* ID of target device (7F - "All Call") */
  57:main.c        ****     0x06u,      /* Sub-ID#1 - General Information */
  58:main.c        ****     0x02u,      /* Sub-ID#2 - Identity Reply */
  59:main.c        ****     0x7Du,      /* Manufacturer's ID: 7D - Educational Use */
  60:main.c        ****     0xB4u, 0x04u,               /* Family code */
  61:main.c        ****     0x32u, 0xD2u,               /* Model number */
  62:main.c        ****     0x01u, 0x00u, 0x00u, 0x00u, /* Version number */
  63:main.c        ****     /*0xF7         End of SysEx automatically appended */
  64:main.c        **** };
  65:main.c        **** 
  66:main.c        **** /* Need for Identity Reply message */
  67:main.c        **** extern volatile uint8 USB_MIDI1_InqFlags;
  68:main.c        **** extern volatile uint8 USB_MIDI2_InqFlags;
  69:main.c        **** 
  70:main.c        **** volatile uint8 usbActivityCounter = 0u;
  71:main.c        **** 
  72:main.c        **** uint8 csButtStates = 0u;
  73:main.c        **** uint8 csButtStatesOld = 0u;
  74:main.c        **** uint8 csButtChange = 0u;
  75:main.c        **** uint8 inqFlagsOld = 0u;
  76:main.c        **** 
  77:main.c        **** 
  78:main.c        **** /*******************************************************************************
  79:main.c        **** * Function Name: SleepIsr
  80:main.c        **** ********************************************************************************
  81:main.c        **** * Summary:
  82:main.c        **** *  The sleep interrupt-service-routine used to determine a sleep condition.
  83:main.c        **** *  The device goes into the Suspend state when there is a constant Idle 
  84:main.c        **** *  state on its upstream-facing bus-lines for more than 3.0 ms. 
  85:main.c        **** *  The device must be suspended drawing only suspend current from the 
  86:main.c        **** *  bus after no more than 10 ms of the bus inactivity on all its ports.
  87:main.c        **** *  This ISR is run each 4 ms, so after a second turn without the USB activity,  
  88:main.c        **** *  the device should be suspended.
  89:main.c        **** *
  90:main.c        **** *******************************************************************************/
  91:main.c        **** CY_ISR(SleepIsr)
  92:main.c        **** {
  73              		.loc 1 92 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 1, uses_anonymous_args = 0
  77 0000 80B5     		push	{r7, lr}
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 7, -8
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 4


  80              		.cfi_offset 14, -4
  81 0002 00AF     		add	r7, sp, #0
  82              		.cfi_def_cfa_register 7
  93:main.c        ****     /* Check USB activity */
  94:main.c        ****     if(0u != USB_CheckActivity()) 
  83              		.loc 1 94 0
  84 0004 FFF7FEFF 		bl	USB_CheckActivity
  85 0008 0346     		mov	r3, r0
  86 000a 002B     		cmp	r3, #0
  87 000c 03D0     		beq	.L2
  95:main.c        ****     {
  96:main.c        ****         usbActivityCounter = 0u;
  88              		.loc 1 96 0
  89 000e 074B     		ldr	r3, .L4
  90 0010 0022     		movs	r2, #0
  91 0012 1A70     		strb	r2, [r3]
  92 0014 06E0     		b	.L3
  93              	.L2:
  97:main.c        ****     } 
  98:main.c        ****     else 
  99:main.c        ****     {
 100:main.c        ****         usbActivityCounter++;
  94              		.loc 1 100 0
  95 0016 054B     		ldr	r3, .L4
  96 0018 1B78     		ldrb	r3, [r3]
  97 001a DBB2     		uxtb	r3, r3
  98 001c 0133     		adds	r3, r3, #1
  99 001e DAB2     		uxtb	r2, r3
 100 0020 024B     		ldr	r3, .L4
 101 0022 1A70     		strb	r2, [r3]
 102              	.L3:
 101:main.c        ****     }
 102:main.c        ****     /* Clear Pending Interrupt */
 103:main.c        ****     SleepTimer_GetStatus();
 103              		.loc 1 103 0
 104 0024 FFF7FEFF 		bl	SleepTimer_GetStatus
 104:main.c        **** }
 105              		.loc 1 104 0
 106 0028 80BD     		pop	{r7, pc}
 107              	.L5:
 108 002a 00BF     		.align	2
 109              	.L4:
 110 002c 00000000 		.word	usbActivityCounter
 111              		.cfi_endproc
 112              	.LFE63:
 113              		.size	SleepIsr, .-SleepIsr
 114              		.section	.text.main,"ax",%progbits
 115              		.align	2
 116              		.global	main
 117              		.thumb
 118              		.thumb_func
 119              		.type	main, %function
 120              	main:
 121              	.LFB64:
 105:main.c        **** 
 106:main.c        **** 
 107:main.c        **** /*******************************************************************************
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 5


 108:main.c        **** * Function Name: main
 109:main.c        **** ********************************************************************************
 110:main.c        **** * Summary:
 111:main.c        **** *       1. Starts the USBFS device and waits for enumaration.
 112:main.c        **** *
 113:main.c        **** *******************************************************************************/
 114:main.c        **** int main()
 115:main.c        **** {
 122              		.loc 1 115 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 8
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0000 80B5     		push	{r7, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 82B0     		sub	sp, sp, #8
 131              		.cfi_def_cfa_offset 16
 132 0004 00AF     		add	r7, sp, #0
 133              		.cfi_def_cfa_register 7
 116:main.c        ****     uint8 midiMsg[MIDI_MSG_SIZE];    
 117:main.c        **** 
 118:main.c        ****     /* Enable Global Interrupts */
 119:main.c        ****     CyGlobalIntEnable;
 134              		.loc 1 119 0
 135              	@ 119 "main.c" 1
 136 0006 62B6     		CPSIE   i
 137              	@ 0 "" 2
 120:main.c        **** 
 121:main.c        ****     /* Start USBFS device 0 with VDDD operation */
 122:main.c        ****     USB_Start(DEVICE, USB_DWR_VDDD_OPERATION); 
 138              		.loc 1 122 0
 139              		.thumb
 140 0008 0020     		movs	r0, #0
 141 000a 0221     		movs	r1, #2
 142 000c FFF7FEFF 		bl	USB_Start
 123:main.c        ****     
 124:main.c        ****     /*Turn on some tabs*/
 125:main.c        ****     Tabs_1_Write(0xff);
 143              		.loc 1 125 0
 144 0010 FF20     		movs	r0, #255
 145 0012 FFF7FEFF 		bl	Tabs_1_Write
 126:main.c        ****     Tabs_2_Write(0xff);
 146              		.loc 1 126 0
 147 0016 FF20     		movs	r0, #255
 148 0018 FFF7FEFF 		bl	Tabs_2_Write
 127:main.c        ****     Tabs_3_Write(0xff);
 149              		.loc 1 127 0
 150 001c FF20     		movs	r0, #255
 151 001e FFF7FEFF 		bl	Tabs_3_Write
 128:main.c        ****     Tabs_4_Write(0xff);
 152              		.loc 1 128 0
 153 0022 FF20     		movs	r0, #255
 154 0024 FFF7FEFF 		bl	Tabs_4_Write
 129:main.c        ****     
 130:main.c        ****     Chords_Bass_Notes_Write(0xff);
 155              		.loc 1 130 0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 6


 156 0028 FF20     		movs	r0, #255
 157 002a FFF7FEFF 		bl	Chords_Bass_Notes_Write
 131:main.c        ****     Chords_Notes_Write(0xff);
 158              		.loc 1 131 0
 159 002e FF20     		movs	r0, #255
 160 0030 FFF7FEFF 		bl	Chords_Notes_Write
 132:main.c        ****     Bass_Notes_Write(0xff);
 161              		.loc 1 132 0
 162 0034 FF20     		movs	r0, #255
 163 0036 FFF7FEFF 		bl	Bass_Notes_Write
 133:main.c        ****     Chorus_Speed_Write(0xff);
 164              		.loc 1 133 0
 165 003a FF20     		movs	r0, #255
 166 003c FFF7FEFF 		bl	Chorus_Speed_Write
 134:main.c        ****     Control_Reg_10_Write(0xff);
 167              		.loc 1 134 0
 168 0040 FF20     		movs	r0, #255
 169 0042 FFF7FEFF 		bl	Control_Reg_10_Write
 135:main.c        ****     Control_Reg_11_Write(0xff);
 170              		.loc 1 135 0
 171 0046 FF20     		movs	r0, #255
 172 0048 FFF7FEFF 		bl	Control_Reg_11_Write
 173              	.L24:
 136:main.c        ****     
 137:main.c        ****     
 138:main.c        ****     
 139:main.c        ****     //Keys_Notes_5_Write(0x40);
 140:main.c        **** 
 141:main.c        ****     while(1u)
 142:main.c        ****     {
 143:main.c        ****         /* Host can send double SET_INTERFACE request */
 144:main.c        ****         if(0u != USB_IsConfigurationChanged())
 174              		.loc 1 144 0
 175 004c FFF7FEFF 		bl	USB_IsConfigurationChanged
 176 0050 0346     		mov	r3, r0
 177 0052 002B     		cmp	r3, #0
 178 0054 11D0     		beq	.L7
 145:main.c        ****         {
 146:main.c        ****             /* Initialize IN endpoints when device configured */
 147:main.c        ****             if(0u != USB_GetConfiguration())   
 179              		.loc 1 147 0
 180 0056 FFF7FEFF 		bl	USB_GetConfiguration
 181 005a 0346     		mov	r3, r0
 182 005c 002B     		cmp	r3, #0
 183 005e 0AD0     		beq	.L8
 148:main.c        ****             {
 149:main.c        ****                 /* Power ON CY8CKIT-044 board */
 150:main.c        ****                 MIDI_PWR_Write(0u); 
 184              		.loc 1 150 0
 185 0060 0020     		movs	r0, #0
 186 0062 FFF7FEFF 		bl	MIDI_PWR_Write
 151:main.c        ****                 
 152:main.c        ****                 /* Start ISR to determine sleep condition */		
 153:main.c        ****                 Sleep_isr_StartEx(SleepIsr);
 187              		.loc 1 153 0
 188 0066 7148     		ldr	r0, .L25
 189 0068 FFF7FEFF 		bl	Sleep_isr_StartEx
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 7


 154:main.c        ****                 
 155:main.c        ****                 /* Start SleepTimer's operation */
 156:main.c        ****                 SleepTimer_Start();
 190              		.loc 1 156 0
 191 006c FFF7FEFF 		bl	SleepTimer_Start
 157:main.c        ****                 
 158:main.c        ****             	/* Enable output endpoint */
 159:main.c        ****                 USB_MIDI_Init();
 192              		.loc 1 159 0
 193 0070 FFF7FEFF 		bl	USB_MIDI_Init
 194 0074 01E0     		b	.L7
 195              	.L8:
 160:main.c        ****             }
 161:main.c        ****             else
 162:main.c        ****             {
 163:main.c        ****                 SleepTimer_Stop();
 196              		.loc 1 163 0
 197 0076 FFF7FEFF 		bl	SleepTimer_Stop
 198              	.L7:
 164:main.c        ****             }    
 165:main.c        ****         }        
 166:main.c        ****         
 167:main.c        ****         /* Service USB MIDI when device is configured */
 168:main.c        ****         if(0u != USB_GetConfiguration())    
 199              		.loc 1 168 0
 200 007a FFF7FEFF 		bl	USB_GetConfiguration
 201 007e 0346     		mov	r3, r0
 202 0080 002B     		cmp	r3, #0
 203 0082 00F0D180 		beq	.L9
 169:main.c        ****         {
 170:main.c        ****             /* Call this API from UART RX ISR for Auto DMA mode */
 171:main.c        ****             #if(!USB_EP_MANAGEMENT_DMA_AUTO) 
 172:main.c        ****                 USB_MIDI_IN_Service();
 204              		.loc 1 172 0
 205 0086 FFF7FEFF 		bl	USB_MIDI_IN_Service
 173:main.c        ****             #endif
 174:main.c        ****             /* In Manual EP Memory Management mode OUT_EP_Service() 
 175:main.c        ****             *  may have to be called from main foreground or from OUT EP ISR
 176:main.c        ****             */
 177:main.c        ****             #if(!USB_EP_MANAGEMENT_DMA_AUTO) 
 178:main.c        ****                 USB_MIDI_OUT_Service();
 206              		.loc 1 178 0
 207 008a FFF7FEFF 		bl	USB_MIDI_OUT_Service
 179:main.c        ****             #endif
 180:main.c        **** 
 181:main.c        ****             /* Sending Identity Reply Universal System Exclusive message 
 182:main.c        ****              * back to computer */
 183:main.c        ****             if(0u != (USB_MIDI1_InqFlags & USB_INQ_IDENTITY_REQ_FLAG))
 208              		.loc 1 183 0
 209 008e 684B     		ldr	r3, .L25+4
 210 0090 1B78     		ldrb	r3, [r3]
 211 0092 DBB2     		uxtb	r3, r3
 212 0094 03F00203 		and	r3, r3, #2
 213 0098 002B     		cmp	r3, #0
 214 009a 0CD0     		beq	.L10
 184:main.c        ****             {
 185:main.c        ****                 USB_PutUsbMidiIn(sizeof(MIDI_IDENTITY_REPLY), \
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 8


 215              		.loc 1 185 0
 216 009c 0E20     		movs	r0, #14
 217 009e 6549     		ldr	r1, .L25+8
 218 00a0 0022     		movs	r2, #0
 219 00a2 FFF7FEFF 		bl	USB_PutUsbMidiIn
 186:main.c        ****                             (uint8 *)MIDI_IDENTITY_REPLY, USB_MIDI_CABLE_00);
 187:main.c        ****                 USB_MIDI1_InqFlags &= ~USB_INQ_IDENTITY_REQ_FLAG;
 220              		.loc 1 187 0
 221 00a6 624B     		ldr	r3, .L25+4
 222 00a8 1B78     		ldrb	r3, [r3]
 223 00aa DBB2     		uxtb	r3, r3
 224 00ac 23F00203 		bic	r3, r3, #2
 225 00b0 DAB2     		uxtb	r2, r3
 226 00b2 5F4B     		ldr	r3, .L25+4
 227 00b4 1A70     		strb	r2, [r3]
 228              	.L10:
 188:main.c        ****             }
 189:main.c        ****             #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 190:main.c        ****                 if(0u != (USB_MIDI2_InqFlags & USB_INQ_IDENTITY_REQ_FLAG))
 229              		.loc 1 190 0
 230 00b6 604B     		ldr	r3, .L25+12
 231 00b8 1B78     		ldrb	r3, [r3]
 232 00ba DBB2     		uxtb	r3, r3
 233 00bc 03F00203 		and	r3, r3, #2
 234 00c0 002B     		cmp	r3, #0
 235 00c2 0CD0     		beq	.L11
 191:main.c        ****                 {
 192:main.c        ****                     USB_PutUsbMidiIn(sizeof(MIDI_IDENTITY_REPLY), \
 236              		.loc 1 192 0
 237 00c4 0E20     		movs	r0, #14
 238 00c6 5B49     		ldr	r1, .L25+8
 239 00c8 1022     		movs	r2, #16
 240 00ca FFF7FEFF 		bl	USB_PutUsbMidiIn
 193:main.c        ****                             (uint8 *)MIDI_IDENTITY_REPLY, USB_MIDI_CABLE_01);
 194:main.c        ****                     USB_MIDI2_InqFlags &= ~USB_INQ_IDENTITY_REQ_FLAG;
 241              		.loc 1 194 0
 242 00ce 5A4B     		ldr	r3, .L25+12
 243 00d0 1B78     		ldrb	r3, [r3]
 244 00d2 DBB2     		uxtb	r3, r3
 245 00d4 23F00203 		bic	r3, r3, #2
 246 00d8 DAB2     		uxtb	r2, r3
 247 00da 574B     		ldr	r3, .L25+12
 248 00dc 1A70     		strb	r2, [r3]
 249              	.L11:
 195:main.c        ****                 }
 196:main.c        ****             #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 197:main.c        ****             
 198:main.c        ****             /* Service Keys */
 199:main.c        ****     		if (0u == SW1_Read()) 
 250              		.loc 1 199 0
 251 00de FFF7FEFF 		bl	SW1_Read
 252 00e2 0346     		mov	r3, r0
 253 00e4 002B     		cmp	r3, #0
 254 00e6 07D1     		bne	.L12
 200:main.c        ****             {
 201:main.c        ****                 csButtStates |= BUTT1;
 255              		.loc 1 201 0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 9


 256 00e8 544B     		ldr	r3, .L25+16
 257 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 258 00ec 43F00103 		orr	r3, r3, #1
 259 00f0 DAB2     		uxtb	r2, r3
 260 00f2 524B     		ldr	r3, .L25+16
 261 00f4 1A70     		strb	r2, [r3]
 262 00f6 06E0     		b	.L13
 263              	.L12:
 202:main.c        ****             }
 203:main.c        ****             else
 204:main.c        ****             {
 205:main.c        ****                 csButtStates &= ~BUTT1;
 264              		.loc 1 205 0
 265 00f8 504B     		ldr	r3, .L25+16
 266 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 267 00fc 23F00103 		bic	r3, r3, #1
 268 0100 DAB2     		uxtb	r2, r3
 269 0102 4E4B     		ldr	r3, .L25+16
 270 0104 1A70     		strb	r2, [r3]
 271              	.L13:
 206:main.c        ****             }
 207:main.c        ****     		if (0u == SW2_Read()) 
 272              		.loc 1 207 0
 273 0106 FFF7FEFF 		bl	SW2_Read
 274 010a 0346     		mov	r3, r0
 275 010c 002B     		cmp	r3, #0
 276 010e 07D1     		bne	.L14
 208:main.c        ****             {
 209:main.c        ****                 csButtStates |= BUTT2;
 277              		.loc 1 209 0
 278 0110 4A4B     		ldr	r3, .L25+16
 279 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 0114 43F00203 		orr	r3, r3, #2
 281 0118 DAB2     		uxtb	r2, r3
 282 011a 484B     		ldr	r3, .L25+16
 283 011c 1A70     		strb	r2, [r3]
 284 011e 06E0     		b	.L15
 285              	.L14:
 210:main.c        ****             }
 211:main.c        ****             else
 212:main.c        ****             {
 213:main.c        ****                 csButtStates &= ~BUTT2;
 286              		.loc 1 213 0
 287 0120 464B     		ldr	r3, .L25+16
 288 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 289 0124 23F00203 		bic	r3, r3, #2
 290 0128 DAB2     		uxtb	r2, r3
 291 012a 444B     		ldr	r3, .L25+16
 292 012c 1A70     		strb	r2, [r3]
 293              	.L15:
 214:main.c        ****             }
 215:main.c        ****             /* Process any button change */
 216:main.c        ****     		if (0u != (csButtChange = csButtStates ^ csButtStatesOld)) 
 294              		.loc 1 216 0
 295 012e 434B     		ldr	r3, .L25+16
 296 0130 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 297 0132 434B     		ldr	r3, .L25+20
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 10


 298 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 299 0136 5340     		eors	r3, r3, r2
 300 0138 DAB2     		uxtb	r2, r3
 301 013a 424B     		ldr	r3, .L25+24
 302 013c 1A70     		strb	r2, [r3]
 303 013e 414B     		ldr	r3, .L25+24
 304 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 305 0142 002B     		cmp	r3, #0
 306 0144 4CD0     		beq	.L16
 217:main.c        ****             {
 218:main.c        ****     			csButtStatesOld = csButtStates;
 307              		.loc 1 218 0
 308 0146 3D4B     		ldr	r3, .L25+16
 309 0148 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 310 014a 3D4B     		ldr	r3, .L25+20
 311 014c 1A70     		strb	r2, [r3]
 219:main.c        **** 
 220:main.c        ****     			/* All buttons are mapped to Note-On/Off messages */
 221:main.c        ****     			midiMsg[MIDI_MSG_TYPE] = USB_MIDI_NOTE_ON;
 312              		.loc 1 221 0
 313 014e 9023     		movs	r3, #144
 314 0150 3B71     		strb	r3, [r7, #4]
 222:main.c        ****     			
 223:main.c        ****     			/* Button 1 */
 224:main.c        ****     			if (0u != (csButtChange & BUTT1)) 
 315              		.loc 1 224 0
 316 0152 3C4B     		ldr	r3, .L25+24
 317 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 318 0156 03F00103 		and	r3, r3, #1
 319 015a 002B     		cmp	r3, #0
 320 015c 12D0     		beq	.L17
 225:main.c        ****                 {
 226:main.c        ****     				/* Button determines note number */			
 227:main.c        ****     				midiMsg[MIDI_NOTE_NUMBER] = NOTE_72;
 321              		.loc 1 227 0
 322 015e 4823     		movs	r3, #72
 323 0160 7B71     		strb	r3, [r7, #5]
 228:main.c        ****     				if (0u != (csButtStates & BUTT1))
 324              		.loc 1 228 0
 325 0162 364B     		ldr	r3, .L25+16
 326 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 327 0166 03F00103 		and	r3, r3, #1
 328 016a 002B     		cmp	r3, #0
 329 016c 02D0     		beq	.L18
 229:main.c        ****                     {
 230:main.c        ****                         /* Note On */
 231:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_ON;		
 330              		.loc 1 231 0
 331 016e 6423     		movs	r3, #100
 332 0170 BB71     		strb	r3, [r7, #6]
 333 0172 01E0     		b	.L19
 334              	.L18:
 232:main.c        ****                     }
 233:main.c        ****     				else
 234:main.c        ****                     {
 235:main.c        ****                         /* Note Off */
 236:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_OFF;			
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 11


 335              		.loc 1 236 0
 336 0174 0023     		movs	r3, #0
 337 0176 BB71     		strb	r3, [r7, #6]
 338              	.L19:
 237:main.c        ****                     }    
 238:main.c        ****         			/* Put MIDI Note-On/Off message into input endpoint */
 239:main.c        ****                     USB_PutUsbMidiIn(USB_3BYTE_COMMON, midiMsg, USB_MIDI_CABLE_00);
 339              		.loc 1 239 0
 340 0178 3B1D     		adds	r3, r7, #4
 341 017a 0320     		movs	r0, #3
 342 017c 1946     		mov	r1, r3
 343 017e 0022     		movs	r2, #0
 344 0180 FFF7FEFF 		bl	USB_PutUsbMidiIn
 345              	.L17:
 240:main.c        ****     			}
 241:main.c        **** 
 242:main.c        ****     			/* Button 2 */
 243:main.c        ****     			if (0u != (csButtChange & BUTT2))
 346              		.loc 1 243 0
 347 0184 2F4B     		ldr	r3, .L25+24
 348 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 349 0188 03F00203 		and	r3, r3, #2
 350 018c 002B     		cmp	r3, #0
 351 018e 27D0     		beq	.L16
 244:main.c        ****                 {
 245:main.c        ****     				/* Button determines note number */			
 246:main.c        ****     				midiMsg[MIDI_NOTE_NUMBER] = NOTE_76;
 352              		.loc 1 246 0
 353 0190 4C23     		movs	r3, #76
 354 0192 7B71     		strb	r3, [r7, #5]
 247:main.c        ****     				if (0u != (csButtStates & BUTT2))
 355              		.loc 1 247 0
 356 0194 294B     		ldr	r3, .L25+16
 357 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 358 0198 03F00203 		and	r3, r3, #2
 359 019c 002B     		cmp	r3, #0
 360 019e 02D0     		beq	.L20
 248:main.c        ****                     {
 249:main.c        ****                         /* Note On */
 250:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_ON;  
 361              		.loc 1 250 0
 362 01a0 6423     		movs	r3, #100
 363 01a2 BB71     		strb	r3, [r7, #6]
 364 01a4 01E0     		b	.L21
 365              	.L20:
 251:main.c        ****                     }
 252:main.c        ****     				else
 253:main.c        ****                     {
 254:main.c        ****                         /* Note Off */
 255:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_OFF; 
 366              		.loc 1 255 0
 367 01a6 0023     		movs	r3, #0
 368 01a8 BB71     		strb	r3, [r7, #6]
 369              	.L21:
 256:main.c        ****                     }    
 257:main.c        ****         			/* Put MIDI Note-On/Off message into input endpoint */
 258:main.c        ****     				USB_PutUsbMidiIn(USB_3BYTE_COMMON, midiMsg, USB_MIDI_CABLE_00);
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 12


 370              		.loc 1 258 0
 371 01aa 3B1D     		adds	r3, r7, #4
 372 01ac 0320     		movs	r0, #3
 373 01ae 1946     		mov	r1, r3
 374 01b0 0022     		movs	r2, #0
 375 01b2 FFF7FEFF 		bl	USB_PutUsbMidiIn
 259:main.c        ****                     /* Second Note message */
 260:main.c        ****                     midiMsg[MIDI_MSG_TYPE] = USB_MIDI_NOTE_ON;
 376              		.loc 1 260 0
 377 01b6 9023     		movs	r3, #144
 378 01b8 3B71     		strb	r3, [r7, #4]
 261:main.c        ****                 	midiMsg[MIDI_NOTE_NUMBER] = NOTE_72;
 379              		.loc 1 261 0
 380 01ba 4823     		movs	r3, #72
 381 01bc 7B71     		strb	r3, [r7, #5]
 262:main.c        ****                     if (0u != (csButtStates & BUTT2))
 382              		.loc 1 262 0
 383 01be 1F4B     		ldr	r3, .L25+16
 384 01c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 385 01c2 03F00203 		and	r3, r3, #2
 386 01c6 002B     		cmp	r3, #0
 387 01c8 02D0     		beq	.L22
 263:main.c        ****                     {
 264:main.c        ****                         /* Note On */
 265:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_ON;		    
 388              		.loc 1 265 0
 389 01ca 6423     		movs	r3, #100
 390 01cc BB71     		strb	r3, [r7, #6]
 391 01ce 01E0     		b	.L23
 392              	.L22:
 266:main.c        ****                     }
 267:main.c        ****     				else
 268:main.c        ****                     {
 269:main.c        ****                         /* Note Off */
 270:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_OFF;			
 393              		.loc 1 270 0
 394 01d0 0023     		movs	r3, #0
 395 01d2 BB71     		strb	r3, [r7, #6]
 396              	.L23:
 271:main.c        ****                     }    
 272:main.c        ****         			/* Put MIDI Note-On/Off message into input endpoint */
 273:main.c        ****                     USB_PutUsbMidiIn(USB_3BYTE_COMMON, midiMsg, USB_MIDI_CABLE_00);
 397              		.loc 1 273 0
 398 01d4 3B1D     		adds	r3, r7, #4
 399 01d6 0320     		movs	r0, #3
 400 01d8 1946     		mov	r1, r3
 401 01da 0022     		movs	r2, #0
 402 01dc FFF7FEFF 		bl	USB_PutUsbMidiIn
 403              	.L16:
 274:main.c        ****     			}
 275:main.c        ****                 #if(USB_EP_MANAGEMENT_DMA_AUTO) 
 276:main.c        ****                    #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 277:main.c        ****                         MIDI1_UART_DisableRxInt();
 278:main.c        ****                         #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 279:main.c        ****                             MIDI2_UART_DisableRxInt();
 280:main.c        ****                         #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 281:main.c        ****                     #endif /* End USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF */            
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 13


 282:main.c        ****                     USB_MIDI_IN_Service();
 283:main.c        ****                     #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 284:main.c        ****                         MIDI1_UART_EnableRxInt();
 285:main.c        ****                         #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 286:main.c        ****                             MIDI2_UART_EnableRxInt();
 287:main.c        ****                         #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 288:main.c        ****                     #endif /* End USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF */                
 289:main.c        ****                 #endif
 290:main.c        ****     		}
 291:main.c        ****         
 292:main.c        ****             /* Check if host requested USB Suspend */
 293:main.c        ****             if( usbActivityCounter >= USB_SUSPEND_TIMEOUT ) 
 404              		.loc 1 293 0
 405 01e0 194B     		ldr	r3, .L25+28
 406 01e2 1B78     		ldrb	r3, [r3]
 407 01e4 DBB2     		uxtb	r3, r3
 408 01e6 012B     		cmp	r3, #1
 409 01e8 1ED9     		bls	.L9
 294:main.c        ****             {
 295:main.c        ****                 MIDI1_UART_Sleep();
 410              		.loc 1 295 0
 411 01ea FFF7FEFF 		bl	MIDI1_UART_Sleep
 296:main.c        ****                 MIDI2_UART_Sleep();
 412              		.loc 1 296 0
 413 01ee FFF7FEFF 		bl	MIDI2_UART_Sleep
 297:main.c        ****                 
 298:main.c        ****                 /* Power OFF CY8CKIT-044 board */
 299:main.c        ****                 MIDI_PWR_Write(1u);     
 414              		.loc 1 299 0
 415 01f2 0120     		movs	r0, #1
 416 01f4 FFF7FEFF 		bl	MIDI_PWR_Write
 300:main.c        ****                 
 301:main.c        ****                 /***************************************************************
 302:main.c        ****                 * Disable USBFS block and set DP Interrupt for wake-up 
 303:main.c        ****                 * from sleep mode. 
 304:main.c        ****                 ***************************************************************/
 305:main.c        ****                 USB_Suspend(); 
 417              		.loc 1 305 0
 418 01f8 FFF7FEFF 		bl	USB_Suspend
 306:main.c        ****                 /* Prepares system clocks for sleep mode */
 307:main.c        ****                 CyPmSaveClocks();
 419              		.loc 1 307 0
 420 01fc FFF7FEFF 		bl	CyPmSaveClocks
 308:main.c        ****                 /***************************************************************
 309:main.c        ****                 * Switch to the Sleep Mode for the PSoC 3 or PSoC 5LP devices:
 310:main.c        ****                 *  - PM_SLEEP_TIME_NONE: wakeup time is defined by PICU source
 311:main.c        ****                 *  - PM_SLEEP_SRC_PICU: PICU wakeup source 
 312:main.c        ****                 ***************************************************************/
 313:main.c        ****                 CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_PICU);
 421              		.loc 1 313 0
 422 0200 0020     		movs	r0, #0
 423 0202 4021     		movs	r1, #64
 424 0204 FFF7FEFF 		bl	CyPmSleep
 314:main.c        ****                 /* Restore clock configuration */
 315:main.c        ****                 CyPmRestoreClocks();
 425              		.loc 1 315 0
 426 0208 FFF7FEFF 		bl	CyPmRestoreClocks
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 14


 316:main.c        ****                 /* Enable USBFS block after power-down mode */
 317:main.c        ****                 USB_Resume();
 427              		.loc 1 317 0
 428 020c FFF7FEFF 		bl	USB_Resume
 318:main.c        ****                 
 319:main.c        ****                 /* Enable output endpoint */
 320:main.c        ****                 USB_MIDI_Init();
 429              		.loc 1 320 0
 430 0210 FFF7FEFF 		bl	USB_MIDI_Init
 321:main.c        ****                 
 322:main.c        ****                 /* Power ON CY8CKIT-044 board */
 323:main.c        ****                 MIDI_PWR_Write(0u);
 431              		.loc 1 323 0
 432 0214 0020     		movs	r0, #0
 433 0216 FFF7FEFF 		bl	MIDI_PWR_Write
 324:main.c        ****                 
 325:main.c        ****                 MIDI1_UART_Wakeup();
 434              		.loc 1 325 0
 435 021a FFF7FEFF 		bl	MIDI1_UART_Wakeup
 326:main.c        ****                 MIDI2_UART_Wakeup();
 436              		.loc 1 326 0
 437 021e FFF7FEFF 		bl	MIDI2_UART_Wakeup
 327:main.c        ****                 usbActivityCounter = 0u; /* Re-init USB Activity Counter*/
 438              		.loc 1 327 0
 439 0222 094B     		ldr	r3, .L25+28
 440 0224 0022     		movs	r2, #0
 441 0226 1A70     		strb	r2, [r3]
 442              	.L9:
 328:main.c        ****             }
 329:main.c        ****         }
 330:main.c        ****     }
 443              		.loc 1 330 0
 444 0228 10E7     		b	.L24
 445              	.L26:
 446 022a 00BF     		.align	2
 447              	.L25:
 448 022c 00000000 		.word	SleepIsr
 449 0230 00000000 		.word	USB_MIDI1_InqFlags
 450 0234 00000000 		.word	MIDI_IDENTITY_REPLY
 451 0238 00000000 		.word	USB_MIDI2_InqFlags
 452 023c 00000000 		.word	csButtStates
 453 0240 00000000 		.word	csButtStatesOld
 454 0244 00000000 		.word	csButtChange
 455 0248 00000000 		.word	usbActivityCounter
 456              		.cfi_endproc
 457              	.LFE64:
 458              		.size	main, .-main
 459              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 460              		.align	2
 461              		.global	USB_callbackLocalMidiEvent
 462              		.thumb
 463              		.thumb_func
 464              		.type	USB_callbackLocalMidiEvent, %function
 465              	USB_callbackLocalMidiEvent:
 466              	.LFB65:
 331:main.c        **** }
 332:main.c        **** 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 15


 333:main.c        **** 
 334:main.c        **** /*******************************************************************************
 335:main.c        **** * Function Name: USB_callbackLocalMidiEvent
 336:main.c        **** ********************************************************************************
 337:main.c        **** * Summary: Local processing of the USB MIDI out-events.
 338:main.c        **** *
 339:main.c        **** *******************************************************************************/
 340:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
 341:main.c        **** {
 467              		.loc 1 341 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 8
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471 0000 80B5     		push	{r7, lr}
 472              		.cfi_def_cfa_offset 8
 473              		.cfi_offset 7, -8
 474              		.cfi_offset 14, -4
 475 0002 82B0     		sub	sp, sp, #8
 476              		.cfi_def_cfa_offset 16
 477 0004 00AF     		add	r7, sp, #0
 478              		.cfi_def_cfa_register 7
 479 0006 0346     		mov	r3, r0
 480 0008 3960     		str	r1, [r7]
 481 000a FB71     		strb	r3, [r7, #7]
 342:main.c        ****     /* Support General System On/Off Message. */
 343:main.c        ****     if((0u == (USB_MIDI1_InqFlags & USB_INQ_SYSEX_FLAG)) \
 482              		.loc 1 343 0
 483 000c BC4B     		ldr	r3, .L76
 484 000e 1B78     		ldrb	r3, [r3]
 485 0010 DBB2     		uxtb	r3, r3
 486 0012 03F00103 		and	r3, r3, #1
 487 0016 002B     		cmp	r3, #0
 488 0018 1AD1     		bne	.L28
 344:main.c        ****             && (0u != (inqFlagsOld & USB_INQ_SYSEX_FLAG)))
 489              		.loc 1 344 0
 490 001a BA4B     		ldr	r3, .L76+4
 491 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 492 001e 03F00103 		and	r3, r3, #1
 493 0022 002B     		cmp	r3, #0
 494 0024 14D0     		beq	.L28
 345:main.c        ****     {
 346:main.c        ****         if(midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX_GEN_MESSAGE)
 495              		.loc 1 346 0
 496 0026 3B68     		ldr	r3, [r7]
 497 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 498 002a 092B     		cmp	r3, #9
 499 002c 10D1     		bne	.L28
 347:main.c        ****         {
 348:main.c        ****             if(midiMsg[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_SYSTEM_ON)
 500              		.loc 1 348 0
 501 002e 3B68     		ldr	r3, [r7]
 502 0030 0133     		adds	r3, r3, #1
 503 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 504 0034 012B     		cmp	r3, #1
 505 0036 03D1     		bne	.L29
 349:main.c        ****             {
 350:main.c        ****                 MIDI_PWR_Write(0u); /* Power ON */
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 16


 506              		.loc 1 350 0
 507 0038 0020     		movs	r0, #0
 508 003a FFF7FEFF 		bl	MIDI_PWR_Write
 509 003e 07E0     		b	.L28
 510              	.L29:
 351:main.c        ****             }
 352:main.c        ****             else if(midiMsg[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_SYSTEM_OFF)
 511              		.loc 1 352 0
 512 0040 3B68     		ldr	r3, [r7]
 513 0042 0133     		adds	r3, r3, #1
 514 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 515 0046 022B     		cmp	r3, #2
 516 0048 02D1     		bne	.L28
 353:main.c        ****             {
 354:main.c        ****                 MIDI_PWR_Write(1u); /* Power OFF */
 517              		.loc 1 354 0
 518 004a 0120     		movs	r0, #1
 519 004c FFF7FEFF 		bl	MIDI_PWR_Write
 520              	.L28:
 355:main.c        ****             }
 356:main.c        ****         }
 357:main.c        ****     }
 358:main.c        ****     switch (midiMsg[USB_EVENT_BYTE0])
 521              		.loc 1 358 0
 522 0050 3B68     		ldr	r3, [r7]
 523 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 524 0054 902B     		cmp	r3, #144
 525 0056 06D0     		beq	.L31
 526 0058 B02B     		cmp	r3, #176
 527 005a 00F0DB81 		beq	.L32
 528 005e 802B     		cmp	r3, #128
 529 0060 00F03681 		beq	.L33
 530 0064 A3E2     		b	.L30
 531              	.L31:
 359:main.c        ****     //if(midiMsg[USB_EVENT_BYTE0] == USB_MIDI_NOTE_ON)
 360:main.c        ****     {
 361:main.c        ****     case USB_MIDI_NOTE_ON:
 362:main.c        ****         if(midiMsg[USB_EVENT_BYTE2] == 0x00)  //Note On with velocity 0 should be treated like note
 532              		.loc 1 362 0
 533 0066 3B68     		ldr	r3, [r7]
 534 0068 0233     		adds	r3, r3, #2
 535 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 536 006c 002B     		cmp	r3, #0
 537 006e 40F09D80 		bne	.L34
 363:main.c        ****         {
 364:main.c        ****         switch (midiMsg[USB_EVENT_BYTE1]/8)
 538              		.loc 1 364 0
 539 0072 3B68     		ldr	r3, [r7]
 540 0074 0133     		adds	r3, r3, #1
 541 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 542 0078 DB08     		lsrs	r3, r3, #3
 543 007a DBB2     		uxtb	r3, r3
 544 007c 052B     		cmp	r3, #5
 545 007e 00F29180 		bhi	.L35
 546 0082 01A2     		adr	r2, .L37
 547 0084 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 548              		.p2align 2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 17


 549              	.L37:
 550 0088 A1000000 		.word	.L36+1
 551 008c C9000000 		.word	.L38+1
 552 0090 F5000000 		.word	.L39+1
 553 0094 21010000 		.word	.L40+1
 554 0098 4D010000 		.word	.L41+1
 555 009c 79010000 		.word	.L42+1
 556              		.p2align 1
 557              	.L36:
 365:main.c        ****             {
 366:main.c        ****                 case 0: 
 367:main.c        ****                 
 368:main.c        ****                    Keys_Notes_1_Write(Keys_Notes_1_Read() & ~(0x01 << midiMsg[USB_EVENT_BYTE1]));
 558              		.loc 1 368 0
 559 00a0 FFF7FEFF 		bl	Keys_Notes_1_Read
 560 00a4 0346     		mov	r3, r0
 561 00a6 DAB2     		uxtb	r2, r3
 562 00a8 3B68     		ldr	r3, [r7]
 563 00aa 0133     		adds	r3, r3, #1
 564 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 565 00ae 1946     		mov	r1, r3
 566 00b0 0123     		movs	r3, #1
 567 00b2 8B40     		lsls	r3, r3, r1
 568 00b4 DBB2     		uxtb	r3, r3
 569 00b6 DB43     		mvns	r3, r3
 570 00b8 DBB2     		uxtb	r3, r3
 571 00ba 1340     		ands	r3, r3, r2
 572 00bc DBB2     		uxtb	r3, r3
 573 00be DBB2     		uxtb	r3, r3
 574 00c0 1846     		mov	r0, r3
 575 00c2 FFF7FEFF 		bl	Keys_Notes_1_Write
 369:main.c        ****                    //Keys_Notes_4_Write(0x40);
 370:main.c        ****                     break;
 576              		.loc 1 370 0
 577 00c6 6DE0     		b	.L35
 578              	.L38:
 371:main.c        ****                 
 372:main.c        ****                 case 1:
 373:main.c        ****                 
 374:main.c        ****                    Keys_Notes_2_Write(Keys_Notes_2_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-8))
 579              		.loc 1 374 0
 580 00c8 FFF7FEFF 		bl	Keys_Notes_2_Read
 581 00cc 0346     		mov	r3, r0
 582 00ce D9B2     		uxtb	r1, r3
 583 00d0 3B68     		ldr	r3, [r7]
 584 00d2 0133     		adds	r3, r3, #1
 585 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 586 00d6 083B     		subs	r3, r3, #8
 587 00d8 0122     		movs	r2, #1
 588 00da 02FA03F3 		lsl	r3, r2, r3
 589 00de DBB2     		uxtb	r3, r3
 590 00e0 DB43     		mvns	r3, r3
 591 00e2 DBB2     		uxtb	r3, r3
 592 00e4 0A46     		mov	r2, r1
 593 00e6 1340     		ands	r3, r3, r2
 594 00e8 DBB2     		uxtb	r3, r3
 595 00ea DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 18


 596 00ec 1846     		mov	r0, r3
 597 00ee FFF7FEFF 		bl	Keys_Notes_2_Write
 375:main.c        ****                    // Keys_Notes_4_Write(0x02);
 376:main.c        ****                     break;
 598              		.loc 1 376 0
 599 00f2 57E0     		b	.L35
 600              	.L39:
 377:main.c        ****                 
 378:main.c        ****                 case 2:
 379:main.c        ****                 
 380:main.c        ****                    Keys_Notes_3_Write(Keys_Notes_3_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-16)
 601              		.loc 1 380 0
 602 00f4 FFF7FEFF 		bl	Keys_Notes_3_Read
 603 00f8 0346     		mov	r3, r0
 604 00fa D9B2     		uxtb	r1, r3
 605 00fc 3B68     		ldr	r3, [r7]
 606 00fe 0133     		adds	r3, r3, #1
 607 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 608 0102 103B     		subs	r3, r3, #16
 609 0104 0122     		movs	r2, #1
 610 0106 02FA03F3 		lsl	r3, r2, r3
 611 010a DBB2     		uxtb	r3, r3
 612 010c DB43     		mvns	r3, r3
 613 010e DBB2     		uxtb	r3, r3
 614 0110 0A46     		mov	r2, r1
 615 0112 1340     		ands	r3, r3, r2
 616 0114 DBB2     		uxtb	r3, r3
 617 0116 DBB2     		uxtb	r3, r3
 618 0118 1846     		mov	r0, r3
 619 011a FFF7FEFF 		bl	Keys_Notes_3_Write
 381:main.c        ****                    // Keys_Notes_4_Write(0x04);
 382:main.c        ****                     break;
 620              		.loc 1 382 0
 621 011e 41E0     		b	.L35
 622              	.L40:
 383:main.c        ****                 
 384:main.c        ****                 case 3:
 385:main.c        ****                 
 386:main.c        ****                    Keys_Notes_4_Write(Keys_Notes_4_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-24)
 623              		.loc 1 386 0
 624 0120 FFF7FEFF 		bl	Keys_Notes_4_Read
 625 0124 0346     		mov	r3, r0
 626 0126 D9B2     		uxtb	r1, r3
 627 0128 3B68     		ldr	r3, [r7]
 628 012a 0133     		adds	r3, r3, #1
 629 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 630 012e 183B     		subs	r3, r3, #24
 631 0130 0122     		movs	r2, #1
 632 0132 02FA03F3 		lsl	r3, r2, r3
 633 0136 DBB2     		uxtb	r3, r3
 634 0138 DB43     		mvns	r3, r3
 635 013a DBB2     		uxtb	r3, r3
 636 013c 0A46     		mov	r2, r1
 637 013e 1340     		ands	r3, r3, r2
 638 0140 DBB2     		uxtb	r3, r3
 639 0142 DBB2     		uxtb	r3, r3
 640 0144 1846     		mov	r0, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 19


 641 0146 FFF7FEFF 		bl	Keys_Notes_4_Write
 387:main.c        ****                   //  Keys_Notes_4_Write(0x08);
 388:main.c        ****                     break;
 642              		.loc 1 388 0
 643 014a 2BE0     		b	.L35
 644              	.L41:
 389:main.c        ****                 
 390:main.c        ****                 case 4:
 391:main.c        ****                 
 392:main.c        ****                    Keys_Notes_5_Write(Keys_Notes_5_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-32)
 645              		.loc 1 392 0
 646 014c FFF7FEFF 		bl	Keys_Notes_5_Read
 647 0150 0346     		mov	r3, r0
 648 0152 D9B2     		uxtb	r1, r3
 649 0154 3B68     		ldr	r3, [r7]
 650 0156 0133     		adds	r3, r3, #1
 651 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 652 015a 203B     		subs	r3, r3, #32
 653 015c 0122     		movs	r2, #1
 654 015e 02FA03F3 		lsl	r3, r2, r3
 655 0162 DBB2     		uxtb	r3, r3
 656 0164 DB43     		mvns	r3, r3
 657 0166 DBB2     		uxtb	r3, r3
 658 0168 0A46     		mov	r2, r1
 659 016a 1340     		ands	r3, r3, r2
 660 016c DBB2     		uxtb	r3, r3
 661 016e DBB2     		uxtb	r3, r3
 662 0170 1846     		mov	r0, r3
 663 0172 FFF7FEFF 		bl	Keys_Notes_5_Write
 393:main.c        ****                  //   Keys_Notes_4_Write(0x10);
 394:main.c        ****                     break;
 664              		.loc 1 394 0
 665 0176 15E0     		b	.L35
 666              	.L42:
 395:main.c        ****                                 
 396:main.c        ****                 case 5:
 397:main.c        ****                 
 398:main.c        ****                    Keys_Notes_6_Write(Keys_Notes_6_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-40)
 667              		.loc 1 398 0
 668 0178 FFF7FEFF 		bl	Keys_Notes_6_Read
 669 017c 0346     		mov	r3, r0
 670 017e D9B2     		uxtb	r1, r3
 671 0180 3B68     		ldr	r3, [r7]
 672 0182 0133     		adds	r3, r3, #1
 673 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 674 0186 283B     		subs	r3, r3, #40
 675 0188 0122     		movs	r2, #1
 676 018a 02FA03F3 		lsl	r3, r2, r3
 677 018e DBB2     		uxtb	r3, r3
 678 0190 DB43     		mvns	r3, r3
 679 0192 DBB2     		uxtb	r3, r3
 680 0194 0A46     		mov	r2, r1
 681 0196 1340     		ands	r3, r3, r2
 682 0198 DBB2     		uxtb	r3, r3
 683 019a DBB2     		uxtb	r3, r3
 684 019c 1846     		mov	r0, r3
 685 019e FFF7FEFF 		bl	Keys_Notes_6_Write
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 20


 399:main.c        ****                   //  Keys_Notes_4_Write(0x20);
 400:main.c        ****                     break;           
 686              		.loc 1 400 0
 687 01a2 00BF     		nop
 688              	.L35:
 401:main.c        ****             }
 402:main.c        ****             LED_OutA_Write(0);
 689              		.loc 1 402 0
 690 01a4 0020     		movs	r0, #0
 691 01a6 FFF7FEFF 		bl	LED_OutA_Write
 403:main.c        ****         }
 404:main.c        ****         else    
 405:main.c        ****         {
 406:main.c        ****             switch (midiMsg[USB_EVENT_BYTE1]/8)
 407:main.c        ****             {
 408:main.c        ****                 case 0: 
 409:main.c        ****                 
 410:main.c        ****                    Keys_Notes_1_Write(Keys_Notes_1_Read() | 0x01 << midiMsg[USB_EVENT_BYTE1]);
 411:main.c        ****                    //Keys_Notes_4_Write(0x40);
 412:main.c        ****                     break;
 413:main.c        ****                 
 414:main.c        ****                 case 1:
 415:main.c        ****                 
 416:main.c        ****                    Keys_Notes_2_Write(Keys_Notes_2_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-8)); 
 417:main.c        ****                    // Keys_Notes_4_Write(0x02);
 418:main.c        ****                     break;
 419:main.c        ****                 
 420:main.c        ****                 case 2:
 421:main.c        ****                 
 422:main.c        ****                    Keys_Notes_3_Write(Keys_Notes_3_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-16));
 423:main.c        ****                    // Keys_Notes_4_Write(0x04);
 424:main.c        ****                     break;
 425:main.c        ****                 
 426:main.c        ****                 case 3:
 427:main.c        ****                 
 428:main.c        ****                    Keys_Notes_4_Write(Keys_Notes_4_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-24));
 429:main.c        ****                   //  Keys_Notes_4_Write(0x08);
 430:main.c        ****                     break;
 431:main.c        ****                 
 432:main.c        ****                 case 4:
 433:main.c        ****                 
 434:main.c        ****                    Keys_Notes_5_Write(Keys_Notes_5_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-32));
 435:main.c        ****                  //   Keys_Notes_4_Write(0x10);
 436:main.c        ****                     break;
 437:main.c        ****                                 
 438:main.c        ****                 case 5:
 439:main.c        ****                 
 440:main.c        ****                    Keys_Notes_6_Write(Keys_Notes_6_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-40));
 441:main.c        ****                   //  Keys_Notes_4_Write(0x20);
 442:main.c        ****                     break;           
 443:main.c        ****             }
 444:main.c        **** 
 445:main.c        ****             LED_OutA_Write(1);
 446:main.c        ****         }
 447:main.c        ****         break;  
 692              		.loc 1 447 0
 693 01aa 00E2     		b	.L30
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 21


 694              	.L34:
 406:main.c        ****             {
 695              		.loc 1 406 0
 696 01ac 3B68     		ldr	r3, [r7]
 697 01ae 0133     		adds	r3, r3, #1
 698 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 699 01b2 DB08     		lsrs	r3, r3, #3
 700 01b4 DBB2     		uxtb	r3, r3
 701 01b6 052B     		cmp	r3, #5
 702 01b8 00F28680 		bhi	.L44
 703 01bc 01A2     		adr	r2, .L46
 704 01be 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 705 01c2 00BF     		.p2align 2
 706              	.L46:
 707 01c4 DD010000 		.word	.L45+1
 708 01c8 01020000 		.word	.L47+1
 709 01cc 29020000 		.word	.L48+1
 710 01d0 51020000 		.word	.L49+1
 711 01d4 79020000 		.word	.L50+1
 712 01d8 A1020000 		.word	.L51+1
 713              		.p2align 1
 714              	.L45:
 410:main.c        ****                    //Keys_Notes_4_Write(0x40);
 715              		.loc 1 410 0
 716 01dc FFF7FEFF 		bl	Keys_Notes_1_Read
 717 01e0 0346     		mov	r3, r0
 718 01e2 DAB2     		uxtb	r2, r3
 719 01e4 3B68     		ldr	r3, [r7]
 720 01e6 0133     		adds	r3, r3, #1
 721 01e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 722 01ea 1946     		mov	r1, r3
 723 01ec 0123     		movs	r3, #1
 724 01ee 8B40     		lsls	r3, r3, r1
 725 01f0 DBB2     		uxtb	r3, r3
 726 01f2 1343     		orrs	r3, r3, r2
 727 01f4 DBB2     		uxtb	r3, r3
 728 01f6 DBB2     		uxtb	r3, r3
 729 01f8 1846     		mov	r0, r3
 730 01fa FFF7FEFF 		bl	Keys_Notes_1_Write
 412:main.c        ****                 
 731              		.loc 1 412 0
 732 01fe 63E0     		b	.L44
 733              	.L47:
 416:main.c        ****                    // Keys_Notes_4_Write(0x02);
 734              		.loc 1 416 0
 735 0200 FFF7FEFF 		bl	Keys_Notes_2_Read
 736 0204 0346     		mov	r3, r0
 737 0206 D9B2     		uxtb	r1, r3
 738 0208 3B68     		ldr	r3, [r7]
 739 020a 0133     		adds	r3, r3, #1
 740 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 741 020e 083B     		subs	r3, r3, #8
 742 0210 0122     		movs	r2, #1
 743 0212 02FA03F3 		lsl	r3, r2, r3
 744 0216 DBB2     		uxtb	r3, r3
 745 0218 0A46     		mov	r2, r1
 746 021a 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 22


 747 021c DBB2     		uxtb	r3, r3
 748 021e DBB2     		uxtb	r3, r3
 749 0220 1846     		mov	r0, r3
 750 0222 FFF7FEFF 		bl	Keys_Notes_2_Write
 418:main.c        ****                 
 751              		.loc 1 418 0
 752 0226 4FE0     		b	.L44
 753              	.L48:
 422:main.c        ****                    // Keys_Notes_4_Write(0x04);
 754              		.loc 1 422 0
 755 0228 FFF7FEFF 		bl	Keys_Notes_3_Read
 756 022c 0346     		mov	r3, r0
 757 022e D9B2     		uxtb	r1, r3
 758 0230 3B68     		ldr	r3, [r7]
 759 0232 0133     		adds	r3, r3, #1
 760 0234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 761 0236 103B     		subs	r3, r3, #16
 762 0238 0122     		movs	r2, #1
 763 023a 02FA03F3 		lsl	r3, r2, r3
 764 023e DBB2     		uxtb	r3, r3
 765 0240 0A46     		mov	r2, r1
 766 0242 1343     		orrs	r3, r3, r2
 767 0244 DBB2     		uxtb	r3, r3
 768 0246 DBB2     		uxtb	r3, r3
 769 0248 1846     		mov	r0, r3
 770 024a FFF7FEFF 		bl	Keys_Notes_3_Write
 424:main.c        ****                 
 771              		.loc 1 424 0
 772 024e 3BE0     		b	.L44
 773              	.L49:
 428:main.c        ****                   //  Keys_Notes_4_Write(0x08);
 774              		.loc 1 428 0
 775 0250 FFF7FEFF 		bl	Keys_Notes_4_Read
 776 0254 0346     		mov	r3, r0
 777 0256 D9B2     		uxtb	r1, r3
 778 0258 3B68     		ldr	r3, [r7]
 779 025a 0133     		adds	r3, r3, #1
 780 025c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 781 025e 183B     		subs	r3, r3, #24
 782 0260 0122     		movs	r2, #1
 783 0262 02FA03F3 		lsl	r3, r2, r3
 784 0266 DBB2     		uxtb	r3, r3
 785 0268 0A46     		mov	r2, r1
 786 026a 1343     		orrs	r3, r3, r2
 787 026c DBB2     		uxtb	r3, r3
 788 026e DBB2     		uxtb	r3, r3
 789 0270 1846     		mov	r0, r3
 790 0272 FFF7FEFF 		bl	Keys_Notes_4_Write
 430:main.c        ****                 
 791              		.loc 1 430 0
 792 0276 27E0     		b	.L44
 793              	.L50:
 434:main.c        ****                  //   Keys_Notes_4_Write(0x10);
 794              		.loc 1 434 0
 795 0278 FFF7FEFF 		bl	Keys_Notes_5_Read
 796 027c 0346     		mov	r3, r0
 797 027e D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 23


 798 0280 3B68     		ldr	r3, [r7]
 799 0282 0133     		adds	r3, r3, #1
 800 0284 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 801 0286 203B     		subs	r3, r3, #32
 802 0288 0122     		movs	r2, #1
 803 028a 02FA03F3 		lsl	r3, r2, r3
 804 028e DBB2     		uxtb	r3, r3
 805 0290 0A46     		mov	r2, r1
 806 0292 1343     		orrs	r3, r3, r2
 807 0294 DBB2     		uxtb	r3, r3
 808 0296 DBB2     		uxtb	r3, r3
 809 0298 1846     		mov	r0, r3
 810 029a FFF7FEFF 		bl	Keys_Notes_5_Write
 436:main.c        ****                                 
 811              		.loc 1 436 0
 812 029e 13E0     		b	.L44
 813              	.L51:
 440:main.c        ****                   //  Keys_Notes_4_Write(0x20);
 814              		.loc 1 440 0
 815 02a0 FFF7FEFF 		bl	Keys_Notes_6_Read
 816 02a4 0346     		mov	r3, r0
 817 02a6 D9B2     		uxtb	r1, r3
 818 02a8 3B68     		ldr	r3, [r7]
 819 02aa 0133     		adds	r3, r3, #1
 820 02ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 821 02ae 283B     		subs	r3, r3, #40
 822 02b0 0122     		movs	r2, #1
 823 02b2 02FA03F3 		lsl	r3, r2, r3
 824 02b6 DBB2     		uxtb	r3, r3
 825 02b8 0A46     		mov	r2, r1
 826 02ba 1343     		orrs	r3, r3, r2
 827 02bc DBB2     		uxtb	r3, r3
 828 02be DBB2     		uxtb	r3, r3
 829 02c0 1846     		mov	r0, r3
 830 02c2 FFF7FEFF 		bl	Keys_Notes_6_Write
 442:main.c        ****             }
 831              		.loc 1 442 0
 832 02c6 00BF     		nop
 833              	.L44:
 445:main.c        ****         }
 834              		.loc 1 445 0
 835 02c8 0120     		movs	r0, #1
 836 02ca FFF7FEFF 		bl	LED_OutA_Write
 837              		.loc 1 447 0
 838 02ce 6EE1     		b	.L30
 839              	.L33:
 448:main.c        ****         
 449:main.c        ****     //if(midiMsg[USB_EVENT_BYTE0] == USB_MIDI_NOTE_OFF)
 450:main.c        ****     case USB_MIDI_NOTE_OFF:
 451:main.c        ****         
 452:main.c        ****         switch (midiMsg[USB_EVENT_BYTE1]/8)
 840              		.loc 1 452 0
 841 02d0 3B68     		ldr	r3, [r7]
 842 02d2 0133     		adds	r3, r3, #1
 843 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 844 02d6 DB08     		lsrs	r3, r3, #3
 845 02d8 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 24


 846 02da 052B     		cmp	r3, #5
 847 02dc 00F29680 		bhi	.L52
 848 02e0 01A2     		adr	r2, .L54
 849 02e2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 850 02e6 00BF     		.p2align 2
 851              	.L54:
 852 02e8 09030000 		.word	.L53+1
 853 02ec 31030000 		.word	.L55+1
 854 02f0 5D030000 		.word	.L56+1
 855 02f4 89030000 		.word	.L57+1
 856 02f8 B5030000 		.word	.L58+1
 857 02fc E1030000 		.word	.L59+1
 858              		.p2align 1
 859              	.L77:
 860              		.align	2
 861              	.L76:
 862 0300 00000000 		.word	USB_MIDI1_InqFlags
 863 0304 00000000 		.word	inqFlagsOld
 864              	.L53:
 453:main.c        ****             {
 454:main.c        ****                 case 0: 
 455:main.c        ****                 
 456:main.c        ****                    Keys_Notes_1_Write(Keys_Notes_1_Read() & ~(0x01 << midiMsg[USB_EVENT_BYTE1]));
 865              		.loc 1 456 0
 866 0308 FFF7FEFF 		bl	Keys_Notes_1_Read
 867 030c 0346     		mov	r3, r0
 868 030e DAB2     		uxtb	r2, r3
 869 0310 3B68     		ldr	r3, [r7]
 870 0312 0133     		adds	r3, r3, #1
 871 0314 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 872 0316 1946     		mov	r1, r3
 873 0318 0123     		movs	r3, #1
 874 031a 8B40     		lsls	r3, r3, r1
 875 031c DBB2     		uxtb	r3, r3
 876 031e DB43     		mvns	r3, r3
 877 0320 DBB2     		uxtb	r3, r3
 878 0322 1340     		ands	r3, r3, r2
 879 0324 DBB2     		uxtb	r3, r3
 880 0326 DBB2     		uxtb	r3, r3
 881 0328 1846     		mov	r0, r3
 882 032a FFF7FEFF 		bl	Keys_Notes_1_Write
 457:main.c        ****                    //Keys_Notes_4_Write(0x40);
 458:main.c        ****                     break;
 883              		.loc 1 458 0
 884 032e 6DE0     		b	.L52
 885              	.L55:
 459:main.c        ****                 
 460:main.c        ****                 case 1:
 461:main.c        ****                 
 462:main.c        ****                    Keys_Notes_2_Write(Keys_Notes_2_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-8))
 886              		.loc 1 462 0
 887 0330 FFF7FEFF 		bl	Keys_Notes_2_Read
 888 0334 0346     		mov	r3, r0
 889 0336 D9B2     		uxtb	r1, r3
 890 0338 3B68     		ldr	r3, [r7]
 891 033a 0133     		adds	r3, r3, #1
 892 033c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 25


 893 033e 083B     		subs	r3, r3, #8
 894 0340 0122     		movs	r2, #1
 895 0342 02FA03F3 		lsl	r3, r2, r3
 896 0346 DBB2     		uxtb	r3, r3
 897 0348 DB43     		mvns	r3, r3
 898 034a DBB2     		uxtb	r3, r3
 899 034c 0A46     		mov	r2, r1
 900 034e 1340     		ands	r3, r3, r2
 901 0350 DBB2     		uxtb	r3, r3
 902 0352 DBB2     		uxtb	r3, r3
 903 0354 1846     		mov	r0, r3
 904 0356 FFF7FEFF 		bl	Keys_Notes_2_Write
 463:main.c        ****                    // Keys_Notes_4_Write(0x02);
 464:main.c        ****                     break;
 905              		.loc 1 464 0
 906 035a 57E0     		b	.L52
 907              	.L56:
 465:main.c        ****                 
 466:main.c        ****                 case 2:
 467:main.c        ****                 
 468:main.c        ****                    Keys_Notes_3_Write(Keys_Notes_3_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-16)
 908              		.loc 1 468 0
 909 035c FFF7FEFF 		bl	Keys_Notes_3_Read
 910 0360 0346     		mov	r3, r0
 911 0362 D9B2     		uxtb	r1, r3
 912 0364 3B68     		ldr	r3, [r7]
 913 0366 0133     		adds	r3, r3, #1
 914 0368 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 915 036a 103B     		subs	r3, r3, #16
 916 036c 0122     		movs	r2, #1
 917 036e 02FA03F3 		lsl	r3, r2, r3
 918 0372 DBB2     		uxtb	r3, r3
 919 0374 DB43     		mvns	r3, r3
 920 0376 DBB2     		uxtb	r3, r3
 921 0378 0A46     		mov	r2, r1
 922 037a 1340     		ands	r3, r3, r2
 923 037c DBB2     		uxtb	r3, r3
 924 037e DBB2     		uxtb	r3, r3
 925 0380 1846     		mov	r0, r3
 926 0382 FFF7FEFF 		bl	Keys_Notes_3_Write
 469:main.c        ****                    // Keys_Notes_4_Write(0x04);
 470:main.c        ****                     break;
 927              		.loc 1 470 0
 928 0386 41E0     		b	.L52
 929              	.L57:
 471:main.c        ****                 
 472:main.c        ****                 case 3:
 473:main.c        ****                 
 474:main.c        ****                    Keys_Notes_4_Write(Keys_Notes_4_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-24)
 930              		.loc 1 474 0
 931 0388 FFF7FEFF 		bl	Keys_Notes_4_Read
 932 038c 0346     		mov	r3, r0
 933 038e D9B2     		uxtb	r1, r3
 934 0390 3B68     		ldr	r3, [r7]
 935 0392 0133     		adds	r3, r3, #1
 936 0394 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 937 0396 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 26


 938 0398 0122     		movs	r2, #1
 939 039a 02FA03F3 		lsl	r3, r2, r3
 940 039e DBB2     		uxtb	r3, r3
 941 03a0 DB43     		mvns	r3, r3
 942 03a2 DBB2     		uxtb	r3, r3
 943 03a4 0A46     		mov	r2, r1
 944 03a6 1340     		ands	r3, r3, r2
 945 03a8 DBB2     		uxtb	r3, r3
 946 03aa DBB2     		uxtb	r3, r3
 947 03ac 1846     		mov	r0, r3
 948 03ae FFF7FEFF 		bl	Keys_Notes_4_Write
 475:main.c        ****                   //  Keys_Notes_4_Write(0x08);
 476:main.c        ****                     break;
 949              		.loc 1 476 0
 950 03b2 2BE0     		b	.L52
 951              	.L58:
 477:main.c        ****                 
 478:main.c        ****                 case 4:
 479:main.c        ****                 
 480:main.c        ****                    Keys_Notes_5_Write(Keys_Notes_5_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-32)
 952              		.loc 1 480 0
 953 03b4 FFF7FEFF 		bl	Keys_Notes_5_Read
 954 03b8 0346     		mov	r3, r0
 955 03ba D9B2     		uxtb	r1, r3
 956 03bc 3B68     		ldr	r3, [r7]
 957 03be 0133     		adds	r3, r3, #1
 958 03c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 959 03c2 203B     		subs	r3, r3, #32
 960 03c4 0122     		movs	r2, #1
 961 03c6 02FA03F3 		lsl	r3, r2, r3
 962 03ca DBB2     		uxtb	r3, r3
 963 03cc DB43     		mvns	r3, r3
 964 03ce DBB2     		uxtb	r3, r3
 965 03d0 0A46     		mov	r2, r1
 966 03d2 1340     		ands	r3, r3, r2
 967 03d4 DBB2     		uxtb	r3, r3
 968 03d6 DBB2     		uxtb	r3, r3
 969 03d8 1846     		mov	r0, r3
 970 03da FFF7FEFF 		bl	Keys_Notes_5_Write
 481:main.c        ****                  //   Keys_Notes_4_Write(0x10);
 482:main.c        ****                     break;
 971              		.loc 1 482 0
 972 03de 15E0     		b	.L52
 973              	.L59:
 483:main.c        ****                                 
 484:main.c        ****                 case 5:
 485:main.c        ****                 
 486:main.c        ****                    Keys_Notes_6_Write(Keys_Notes_6_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-40)
 974              		.loc 1 486 0
 975 03e0 FFF7FEFF 		bl	Keys_Notes_6_Read
 976 03e4 0346     		mov	r3, r0
 977 03e6 D9B2     		uxtb	r1, r3
 978 03e8 3B68     		ldr	r3, [r7]
 979 03ea 0133     		adds	r3, r3, #1
 980 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 981 03ee 283B     		subs	r3, r3, #40
 982 03f0 0122     		movs	r2, #1
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 27


 983 03f2 02FA03F3 		lsl	r3, r2, r3
 984 03f6 DBB2     		uxtb	r3, r3
 985 03f8 DB43     		mvns	r3, r3
 986 03fa DBB2     		uxtb	r3, r3
 987 03fc 0A46     		mov	r2, r1
 988 03fe 1340     		ands	r3, r3, r2
 989 0400 DBB2     		uxtb	r3, r3
 990 0402 DBB2     		uxtb	r3, r3
 991 0404 1846     		mov	r0, r3
 992 0406 FFF7FEFF 		bl	Keys_Notes_6_Write
 487:main.c        ****                   //  Keys_Notes_4_Write(0x20);
 488:main.c        ****                     break;           
 993              		.loc 1 488 0
 994 040a 00BF     		nop
 995              	.L52:
 489:main.c        ****             }
 490:main.c        ****             LED_OutA_Write(0);
 996              		.loc 1 490 0
 997 040c 0020     		movs	r0, #0
 998 040e FFF7FEFF 		bl	LED_OutA_Write
 491:main.c        ****             break;
 999              		.loc 1 491 0
 1000 0412 CCE0     		b	.L30
 1001              	.L32:
 492:main.c        ****     case USB_MIDI_CONTROL_CHANGE:
 493:main.c        ****             switch (midiMsg[USB_EVENT_BYTE1]/8)
 1002              		.loc 1 493 0
 1003 0414 3B68     		ldr	r3, [r7]
 1004 0416 0133     		adds	r3, r3, #1
 1005 0418 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1006 041a DB08     		lsrs	r3, r3, #3
 1007 041c DBB2     		uxtb	r3, r3
 1008 041e 032B     		cmp	r3, #3
 1009 0420 00F2C480 		bhi	.L74
 1010 0424 01A2     		adr	r2, .L62
 1011 0426 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1012 042a 00BF     		.p2align 2
 1013              	.L62:
 1014 042c 3D040000 		.word	.L61+1
 1015 0430 93040000 		.word	.L63+1
 1016 0434 F1040000 		.word	.L64+1
 1017 0438 4F050000 		.word	.L65+1
 1018              		.p2align 1
 1019              	.L61:
 494:main.c        ****             {
 495:main.c        ****                 case 0: 
 496:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1020              		.loc 1 496 0
 1021 043c 3B68     		ldr	r3, [r7]
 1022 043e 0233     		adds	r3, r3, #2
 1023 0440 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1024 0442 3E2B     		cmp	r3, #62
 1025 0444 13D8     		bhi	.L66
 497:main.c        ****                     {
 498:main.c        ****                     Tabs_1_Write(Tabs_1_Read() & ~(0x01 << midiMsg[USB_EVENT_BYTE1]));
 1026              		.loc 1 498 0
 1027 0446 FFF7FEFF 		bl	Tabs_1_Read
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 28


 1028 044a 0346     		mov	r3, r0
 1029 044c DAB2     		uxtb	r2, r3
 1030 044e 3B68     		ldr	r3, [r7]
 1031 0450 0133     		adds	r3, r3, #1
 1032 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1033 0454 1946     		mov	r1, r3
 1034 0456 0123     		movs	r3, #1
 1035 0458 8B40     		lsls	r3, r3, r1
 1036 045a DBB2     		uxtb	r3, r3
 1037 045c DB43     		mvns	r3, r3
 1038 045e DBB2     		uxtb	r3, r3
 1039 0460 1340     		ands	r3, r3, r2
 1040 0462 DBB2     		uxtb	r3, r3
 1041 0464 DBB2     		uxtb	r3, r3
 1042 0466 1846     		mov	r0, r3
 1043 0468 FFF7FEFF 		bl	Tabs_1_Write
 499:main.c        ****                     }
 500:main.c        ****                     else
 501:main.c        ****                     {
 502:main.c        ****                     Tabs_1_Write(Tabs_1_Read() | (0x01 << midiMsg[USB_EVENT_BYTE1]));    
 503:main.c        ****                     }
 504:main.c        ****                     break;
 1044              		.loc 1 504 0
 1045 046c 9EE0     		b	.L60
 1046              	.L66:
 502:main.c        ****                     }
 1047              		.loc 1 502 0
 1048 046e FFF7FEFF 		bl	Tabs_1_Read
 1049 0472 0346     		mov	r3, r0
 1050 0474 DAB2     		uxtb	r2, r3
 1051 0476 3B68     		ldr	r3, [r7]
 1052 0478 0133     		adds	r3, r3, #1
 1053 047a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1054 047c 1946     		mov	r1, r3
 1055 047e 0123     		movs	r3, #1
 1056 0480 8B40     		lsls	r3, r3, r1
 1057 0482 DBB2     		uxtb	r3, r3
 1058 0484 1343     		orrs	r3, r3, r2
 1059 0486 DBB2     		uxtb	r3, r3
 1060 0488 DBB2     		uxtb	r3, r3
 1061 048a 1846     		mov	r0, r3
 1062 048c FFF7FEFF 		bl	Tabs_1_Write
 1063              		.loc 1 504 0
 1064 0490 8CE0     		b	.L60
 1065              	.L63:
 505:main.c        ****                 
 506:main.c        ****                 case 1:
 507:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1066              		.loc 1 507 0
 1067 0492 3B68     		ldr	r3, [r7]
 1068 0494 0233     		adds	r3, r3, #2
 1069 0496 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1070 0498 3E2B     		cmp	r3, #62
 1071 049a 15D8     		bhi	.L68
 508:main.c        ****                     {
 509:main.c        ****                     Tabs_2_Write(Tabs_2_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-8)));
 1072              		.loc 1 509 0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 29


 1073 049c FFF7FEFF 		bl	Tabs_2_Read
 1074 04a0 0346     		mov	r3, r0
 1075 04a2 D9B2     		uxtb	r1, r3
 1076 04a4 3B68     		ldr	r3, [r7]
 1077 04a6 0133     		adds	r3, r3, #1
 1078 04a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1079 04aa 083B     		subs	r3, r3, #8
 1080 04ac 0122     		movs	r2, #1
 1081 04ae 02FA03F3 		lsl	r3, r2, r3
 1082 04b2 DBB2     		uxtb	r3, r3
 1083 04b4 DB43     		mvns	r3, r3
 1084 04b6 DBB2     		uxtb	r3, r3
 1085 04b8 0A46     		mov	r2, r1
 1086 04ba 1340     		ands	r3, r3, r2
 1087 04bc DBB2     		uxtb	r3, r3
 1088 04be DBB2     		uxtb	r3, r3
 1089 04c0 1846     		mov	r0, r3
 1090 04c2 FFF7FEFF 		bl	Tabs_2_Write
 510:main.c        ****                     }
 511:main.c        ****                     else
 512:main.c        ****                     {
 513:main.c        ****                     Tabs_2_Write(Tabs_2_Read() | (0x01 << (midiMsg[USB_EVENT_BYTE1]-8)));    
 514:main.c        ****                     }
 515:main.c        ****                     break;
 1091              		.loc 1 515 0
 1092 04c6 71E0     		b	.L60
 1093              	.L68:
 513:main.c        ****                     }
 1094              		.loc 1 513 0
 1095 04c8 FFF7FEFF 		bl	Tabs_2_Read
 1096 04cc 0346     		mov	r3, r0
 1097 04ce D9B2     		uxtb	r1, r3
 1098 04d0 3B68     		ldr	r3, [r7]
 1099 04d2 0133     		adds	r3, r3, #1
 1100 04d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1101 04d6 083B     		subs	r3, r3, #8
 1102 04d8 0122     		movs	r2, #1
 1103 04da 02FA03F3 		lsl	r3, r2, r3
 1104 04de DBB2     		uxtb	r3, r3
 1105 04e0 0A46     		mov	r2, r1
 1106 04e2 1343     		orrs	r3, r3, r2
 1107 04e4 DBB2     		uxtb	r3, r3
 1108 04e6 DBB2     		uxtb	r3, r3
 1109 04e8 1846     		mov	r0, r3
 1110 04ea FFF7FEFF 		bl	Tabs_2_Write
 1111              		.loc 1 515 0
 1112 04ee 5DE0     		b	.L60
 1113              	.L64:
 516:main.c        ****                 
 517:main.c        ****                 case 2:
 518:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1114              		.loc 1 518 0
 1115 04f0 3B68     		ldr	r3, [r7]
 1116 04f2 0233     		adds	r3, r3, #2
 1117 04f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1118 04f6 3E2B     		cmp	r3, #62
 1119 04f8 15D8     		bhi	.L70
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 30


 519:main.c        ****                     {
 520:main.c        ****                     Tabs_3_Write(Tabs_3_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-16)));
 1120              		.loc 1 520 0
 1121 04fa FFF7FEFF 		bl	Tabs_3_Read
 1122 04fe 0346     		mov	r3, r0
 1123 0500 D9B2     		uxtb	r1, r3
 1124 0502 3B68     		ldr	r3, [r7]
 1125 0504 0133     		adds	r3, r3, #1
 1126 0506 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1127 0508 103B     		subs	r3, r3, #16
 1128 050a 0122     		movs	r2, #1
 1129 050c 02FA03F3 		lsl	r3, r2, r3
 1130 0510 DBB2     		uxtb	r3, r3
 1131 0512 DB43     		mvns	r3, r3
 1132 0514 DBB2     		uxtb	r3, r3
 1133 0516 0A46     		mov	r2, r1
 1134 0518 1340     		ands	r3, r3, r2
 1135 051a DBB2     		uxtb	r3, r3
 1136 051c DBB2     		uxtb	r3, r3
 1137 051e 1846     		mov	r0, r3
 1138 0520 FFF7FEFF 		bl	Tabs_3_Write
 521:main.c        ****                     }
 522:main.c        ****                     else
 523:main.c        ****                     {
 524:main.c        ****                     Tabs_3_Write(Tabs_3_Read() | (0x01 << (midiMsg[USB_EVENT_BYTE1]-16)));    
 525:main.c        ****                     }
 526:main.c        ****                     break;
 1139              		.loc 1 526 0
 1140 0524 42E0     		b	.L60
 1141              	.L70:
 524:main.c        ****                     }
 1142              		.loc 1 524 0
 1143 0526 FFF7FEFF 		bl	Tabs_3_Read
 1144 052a 0346     		mov	r3, r0
 1145 052c D9B2     		uxtb	r1, r3
 1146 052e 3B68     		ldr	r3, [r7]
 1147 0530 0133     		adds	r3, r3, #1
 1148 0532 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1149 0534 103B     		subs	r3, r3, #16
 1150 0536 0122     		movs	r2, #1
 1151 0538 02FA03F3 		lsl	r3, r2, r3
 1152 053c DBB2     		uxtb	r3, r3
 1153 053e 0A46     		mov	r2, r1
 1154 0540 1343     		orrs	r3, r3, r2
 1155 0542 DBB2     		uxtb	r3, r3
 1156 0544 DBB2     		uxtb	r3, r3
 1157 0546 1846     		mov	r0, r3
 1158 0548 FFF7FEFF 		bl	Tabs_3_Write
 1159              		.loc 1 526 0
 1160 054c 2EE0     		b	.L60
 1161              	.L65:
 527:main.c        ****                 
 528:main.c        ****                 case 3:
 529:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1162              		.loc 1 529 0
 1163 054e 3B68     		ldr	r3, [r7]
 1164 0550 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 31


 1165 0552 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1166 0554 3E2B     		cmp	r3, #62
 1167 0556 15D8     		bhi	.L72
 530:main.c        ****                     {
 531:main.c        ****                     Tabs_4_Write(Tabs_4_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-32)));
 1168              		.loc 1 531 0
 1169 0558 FFF7FEFF 		bl	Tabs_4_Read
 1170 055c 0346     		mov	r3, r0
 1171 055e D9B2     		uxtb	r1, r3
 1172 0560 3B68     		ldr	r3, [r7]
 1173 0562 0133     		adds	r3, r3, #1
 1174 0564 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1175 0566 203B     		subs	r3, r3, #32
 1176 0568 0122     		movs	r2, #1
 1177 056a 02FA03F3 		lsl	r3, r2, r3
 1178 056e DBB2     		uxtb	r3, r3
 1179 0570 DB43     		mvns	r3, r3
 1180 0572 DBB2     		uxtb	r3, r3
 1181 0574 0A46     		mov	r2, r1
 1182 0576 1340     		ands	r3, r3, r2
 1183 0578 DBB2     		uxtb	r3, r3
 1184 057a DBB2     		uxtb	r3, r3
 1185 057c 1846     		mov	r0, r3
 1186 057e FFF7FEFF 		bl	Tabs_4_Write
 532:main.c        ****                     }
 533:main.c        ****                     else
 534:main.c        ****                     {
 535:main.c        ****                     Tabs_4_Write(Tabs_4_Read() | (0x01 << (midiMsg[USB_EVENT_BYTE1]-32)));    
 536:main.c        ****                     }
 537:main.c        ****                     break;
 1187              		.loc 1 537 0
 1188 0582 12E0     		b	.L75
 1189              	.L72:
 535:main.c        ****                     }
 1190              		.loc 1 535 0
 1191 0584 FFF7FEFF 		bl	Tabs_4_Read
 1192 0588 0346     		mov	r3, r0
 1193 058a D9B2     		uxtb	r1, r3
 1194 058c 3B68     		ldr	r3, [r7]
 1195 058e 0133     		adds	r3, r3, #1
 1196 0590 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1197 0592 203B     		subs	r3, r3, #32
 1198 0594 0122     		movs	r2, #1
 1199 0596 02FA03F3 		lsl	r3, r2, r3
 1200 059a DBB2     		uxtb	r3, r3
 1201 059c 0A46     		mov	r2, r1
 1202 059e 1343     		orrs	r3, r3, r2
 1203 05a0 DBB2     		uxtb	r3, r3
 1204 05a2 DBB2     		uxtb	r3, r3
 1205 05a4 1846     		mov	r0, r3
 1206 05a6 FFF7FEFF 		bl	Tabs_4_Write
 1207              	.L75:
 1208              		.loc 1 537 0
 1209 05aa 00BF     		nop
 1210              	.L60:
 1211              	.L74:
 538:main.c        ****              
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 32


 539:main.c        ****             }
 540:main.c        ****             break;        
 1212              		.loc 1 540 0
 1213 05ac 00BF     		nop
 1214              	.L30:
 541:main.c        ****     }
 542:main.c        ****     
 543:main.c        ****     
 544:main.c        ****     inqFlagsOld = USB_MIDI1_InqFlags;
 1215              		.loc 1 544 0
 1216 05ae 044B     		ldr	r3, .L78
 1217 05b0 1B78     		ldrb	r3, [r3]
 1218 05b2 DAB2     		uxtb	r2, r3
 1219 05b4 034B     		ldr	r3, .L78+4
 1220 05b6 1A70     		strb	r2, [r3]
 545:main.c        ****     cable = cable;
 546:main.c        **** }    
 1221              		.loc 1 546 0
 1222 05b8 0837     		adds	r7, r7, #8
 1223              		.cfi_def_cfa_offset 8
 1224 05ba BD46     		mov	sp, r7
 1225              		.cfi_def_cfa_register 13
 1226              		@ sp needed
 1227 05bc 80BD     		pop	{r7, pc}
 1228              	.L79:
 1229 05be 00BF     		.align	2
 1230              	.L78:
 1231 05c0 00000000 		.word	USB_MIDI1_InqFlags
 1232 05c4 00000000 		.word	inqFlagsOld
 1233              		.cfi_endproc
 1234              	.LFE65:
 1235              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 1236              		.section	.text.USB_MIDI1_ProcessUsbOut_EntryCallback,"ax",%progbits
 1237              		.align	2
 1238              		.global	USB_MIDI1_ProcessUsbOut_EntryCallback
 1239              		.thumb
 1240              		.thumb_func
 1241              		.type	USB_MIDI1_ProcessUsbOut_EntryCallback, %function
 1242              	USB_MIDI1_ProcessUsbOut_EntryCallback:
 1243              	.LFB66:
 547:main.c        **** 
 548:main.c        **** 
 549:main.c        **** /*******************************************************************************
 550:main.c        **** * Function Name: USB_MIDI1_ProcessUsbOut_EntryCallback
 551:main.c        **** ********************************************************************************
 552:main.c        **** * Summary:  Turn the LED_OutA on at the beginning of the function
 553:main.c        **** * USB_MIDI1_ProcessUsbOut() when data comes to be put in the UART1 out
 554:main.c        **** * buffer.
 555:main.c        **** * 
 556:main.c        **** *******************************************************************************/
 557:main.c        **** void USB_MIDI1_ProcessUsbOut_EntryCallback(void)
 558:main.c        **** {
 1244              		.loc 1 558 0
 1245              		.cfi_startproc
 1246              		@ args = 0, pretend = 0, frame = 0
 1247              		@ frame_needed = 1, uses_anonymous_args = 0
 1248              		@ link register save eliminated.
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 33


 1249 0000 80B4     		push	{r7}
 1250              		.cfi_def_cfa_offset 4
 1251              		.cfi_offset 7, -4
 1252 0002 00AF     		add	r7, sp, #0
 1253              		.cfi_def_cfa_register 7
 559:main.c        ****   //  LED_OutA_Write(1);
 560:main.c        **** }
 1254              		.loc 1 560 0
 1255 0004 BD46     		mov	sp, r7
 1256              		.cfi_def_cfa_register 13
 1257              		@ sp needed
 1258 0006 5DF8047B 		ldr	r7, [sp], #4
 1259              		.cfi_restore 7
 1260              		.cfi_def_cfa_offset 0
 1261 000a 7047     		bx	lr
 1262              		.cfi_endproc
 1263              	.LFE66:
 1264              		.size	USB_MIDI1_ProcessUsbOut_EntryCallback, .-USB_MIDI1_ProcessUsbOut_EntryCallback
 1265              		.section	.text.USB_MIDI1_ProcessUsbOut_ExitCallback,"ax",%progbits
 1266              		.align	2
 1267              		.global	USB_MIDI1_ProcessUsbOut_ExitCallback
 1268              		.thumb
 1269              		.thumb_func
 1270              		.type	USB_MIDI1_ProcessUsbOut_ExitCallback, %function
 1271              	USB_MIDI1_ProcessUsbOut_ExitCallback:
 1272              	.LFB67:
 561:main.c        **** 
 562:main.c        **** 
 563:main.c        **** /*******************************************************************************
 564:main.c        **** * Function Name: USB_MIDI1_ProcessUsbOut_ExitCallback
 565:main.c        **** ********************************************************************************
 566:main.c        **** * Summary:  Turn the LED_OutA off at the end of the function  
 567:main.c        **** * USB_MIDI1_ProcessUsbOut() when data is put in the UART1 out-buffer.
 568:main.c        **** * 
 569:main.c        **** *******************************************************************************/
 570:main.c        **** void USB_MIDI1_ProcessUsbOut_ExitCallback(void)
 571:main.c        **** {
 1273              		.loc 1 571 0
 1274              		.cfi_startproc
 1275              		@ args = 0, pretend = 0, frame = 0
 1276              		@ frame_needed = 1, uses_anonymous_args = 0
 1277              		@ link register save eliminated.
 1278 0000 80B4     		push	{r7}
 1279              		.cfi_def_cfa_offset 4
 1280              		.cfi_offset 7, -4
 1281 0002 00AF     		add	r7, sp, #0
 1282              		.cfi_def_cfa_register 7
 572:main.c        ****   //  LED_OutA_Write(0);
 573:main.c        **** }
 1283              		.loc 1 573 0
 1284 0004 BD46     		mov	sp, r7
 1285              		.cfi_def_cfa_register 13
 1286              		@ sp needed
 1287 0006 5DF8047B 		ldr	r7, [sp], #4
 1288              		.cfi_restore 7
 1289              		.cfi_def_cfa_offset 0
 1290 000a 7047     		bx	lr
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 34


 1291              		.cfi_endproc
 1292              	.LFE67:
 1293              		.size	USB_MIDI1_ProcessUsbOut_ExitCallback, .-USB_MIDI1_ProcessUsbOut_ExitCallback
 1294              		.section	.text.USB_MIDI2_ProcessUsbOut_EntryCallback,"ax",%progbits
 1295              		.align	2
 1296              		.global	USB_MIDI2_ProcessUsbOut_EntryCallback
 1297              		.thumb
 1298              		.thumb_func
 1299              		.type	USB_MIDI2_ProcessUsbOut_EntryCallback, %function
 1300              	USB_MIDI2_ProcessUsbOut_EntryCallback:
 1301              	.LFB68:
 574:main.c        **** 
 575:main.c        **** 
 576:main.c        **** /*******************************************************************************
 577:main.c        **** * Function Name: USB_MIDI2_ProcessUsbOut_EntryCallback
 578:main.c        **** ********************************************************************************
 579:main.c        **** * Summary:  Turn the LED_OutB on at the beginning of the function  
 580:main.c        **** * USB_MIDI2_ProcessUsbOut() when data comes to be put in the UART2 out- 
 581:main.c        **** * buffer  
 582:main.c        **** * 
 583:main.c        **** *******************************************************************************/
 584:main.c        **** void USB_MIDI2_ProcessUsbOut_EntryCallback(void)
 585:main.c        **** {
 1302              		.loc 1 585 0
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 0
 1305              		@ frame_needed = 1, uses_anonymous_args = 0
 1306 0000 80B5     		push	{r7, lr}
 1307              		.cfi_def_cfa_offset 8
 1308              		.cfi_offset 7, -8
 1309              		.cfi_offset 14, -4
 1310 0002 00AF     		add	r7, sp, #0
 1311              		.cfi_def_cfa_register 7
 586:main.c        ****     LED_OutB_Write(1);
 1312              		.loc 1 586 0
 1313 0004 0120     		movs	r0, #1
 1314 0006 FFF7FEFF 		bl	LED_OutB_Write
 587:main.c        **** }
 1315              		.loc 1 587 0
 1316 000a 80BD     		pop	{r7, pc}
 1317              		.cfi_endproc
 1318              	.LFE68:
 1319              		.size	USB_MIDI2_ProcessUsbOut_EntryCallback, .-USB_MIDI2_ProcessUsbOut_EntryCallback
 1320              		.section	.text.USB_MIDI2_ProcessUsbOut_ExitCallback,"ax",%progbits
 1321              		.align	2
 1322              		.global	USB_MIDI2_ProcessUsbOut_ExitCallback
 1323              		.thumb
 1324              		.thumb_func
 1325              		.type	USB_MIDI2_ProcessUsbOut_ExitCallback, %function
 1326              	USB_MIDI2_ProcessUsbOut_ExitCallback:
 1327              	.LFB69:
 588:main.c        **** 
 589:main.c        **** 
 590:main.c        **** /*******************************************************************************
 591:main.c        **** * Function Name: USB_MIDI2_ProcessUsbOut_ExitCallback
 592:main.c        **** ********************************************************************************
 593:main.c        **** * Summary:  Turn the LED_OutB off at the end of the function  
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 35


 594:main.c        **** * USB_MIDI2_ProcessUsbOut() when data is put in the UART2 out-buffer.
 595:main.c        **** * 
 596:main.c        **** *******************************************************************************/
 597:main.c        **** void USB_MIDI2_ProcessUsbOut_ExitCallback(void)
 598:main.c        **** {
 1328              		.loc 1 598 0
 1329              		.cfi_startproc
 1330              		@ args = 0, pretend = 0, frame = 0
 1331              		@ frame_needed = 1, uses_anonymous_args = 0
 1332 0000 80B5     		push	{r7, lr}
 1333              		.cfi_def_cfa_offset 8
 1334              		.cfi_offset 7, -8
 1335              		.cfi_offset 14, -4
 1336 0002 00AF     		add	r7, sp, #0
 1337              		.cfi_def_cfa_register 7
 599:main.c        ****     LED_OutB_Write(0);
 1338              		.loc 1 599 0
 1339 0004 0020     		movs	r0, #0
 1340 0006 FFF7FEFF 		bl	LED_OutB_Write
 600:main.c        **** }
 1341              		.loc 1 600 0
 1342 000a 80BD     		pop	{r7, pc}
 1343              		.cfi_endproc
 1344              	.LFE69:
 1345              		.size	USB_MIDI2_ProcessUsbOut_ExitCallback, .-USB_MIDI2_ProcessUsbOut_ExitCallback
 1346              		.section	.text.MIDI1_UART_RXISR_EntryCallback,"ax",%progbits
 1347              		.align	2
 1348              		.global	MIDI1_UART_RXISR_EntryCallback
 1349              		.thumb
 1350              		.thumb_func
 1351              		.type	MIDI1_UART_RXISR_EntryCallback, %function
 1352              	MIDI1_UART_RXISR_EntryCallback:
 1353              	.LFB70:
 601:main.c        **** 
 602:main.c        **** 
 603:main.c        **** /*******************************************************************************
 604:main.c        **** * Function Name: MIDI1_UART_RXISR_EntryCallback
 605:main.c        **** ********************************************************************************
 606:main.c        **** * Summary:  Turn the LED_InA on at the beginning of the MIDI1_UART_RXISR ISR  
 607:main.c        **** * when data comes to UART1 to be put in the USBFS_MIDI IN endpoint
 608:main.c        **** * buffer.
 609:main.c        **** *
 610:main.c        **** *******************************************************************************/
 611:main.c        **** void MIDI1_UART_RXISR_EntryCallback(void)
 612:main.c        **** {
 1354              		.loc 1 612 0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 0
 1357              		@ frame_needed = 1, uses_anonymous_args = 0
 1358 0000 80B5     		push	{r7, lr}
 1359              		.cfi_def_cfa_offset 8
 1360              		.cfi_offset 7, -8
 1361              		.cfi_offset 14, -4
 1362 0002 00AF     		add	r7, sp, #0
 1363              		.cfi_def_cfa_register 7
 613:main.c        ****     /* These LEDs indicate MIDI input activity */
 614:main.c        ****     LED_InA_Write(1);
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 36


 1364              		.loc 1 614 0
 1365 0004 0120     		movs	r0, #1
 1366 0006 FFF7FEFF 		bl	LED_InA_Write
 615:main.c        **** }
 1367              		.loc 1 615 0
 1368 000a 80BD     		pop	{r7, pc}
 1369              		.cfi_endproc
 1370              	.LFE70:
 1371              		.size	MIDI1_UART_RXISR_EntryCallback, .-MIDI1_UART_RXISR_EntryCallback
 1372              		.section	.text.MIDI1_UART_RXISR_ExitCallback,"ax",%progbits
 1373              		.align	2
 1374              		.global	MIDI1_UART_RXISR_ExitCallback
 1375              		.thumb
 1376              		.thumb_func
 1377              		.type	MIDI1_UART_RXISR_ExitCallback, %function
 1378              	MIDI1_UART_RXISR_ExitCallback:
 1379              	.LFB71:
 616:main.c        **** 
 617:main.c        **** 
 618:main.c        **** /*******************************************************************************
 619:main.c        **** * Function Name: MIDI1_UART_RXISR_ExitCallback
 620:main.c        **** ********************************************************************************
 621:main.c        **** * Summary:  Turn the LED_InA off at the end of the MIDI1_UART_RXISR ISR  
 622:main.c        **** * when data is put in the USBFS_MIDI IN endpoint buffer.
 623:main.c        **** *
 624:main.c        **** *******************************************************************************/
 625:main.c        **** void MIDI1_UART_RXISR_ExitCallback(void)
 626:main.c        **** {
 1380              		.loc 1 626 0
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 0
 1383              		@ frame_needed = 1, uses_anonymous_args = 0
 1384 0000 80B5     		push	{r7, lr}
 1385              		.cfi_def_cfa_offset 8
 1386              		.cfi_offset 7, -8
 1387              		.cfi_offset 14, -4
 1388 0002 00AF     		add	r7, sp, #0
 1389              		.cfi_def_cfa_register 7
 627:main.c        ****     #if (USB_EP_MANAGEMENT_DMA_AUTO) 
 628:main.c        ****         USB_MIDI_IN_Service();
 629:main.c        ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 630:main.c        ****     
 631:main.c        ****     LED_InA_Write(0);
 1390              		.loc 1 631 0
 1391 0004 0020     		movs	r0, #0
 1392 0006 FFF7FEFF 		bl	LED_InA_Write
 632:main.c        **** }
 1393              		.loc 1 632 0
 1394 000a 80BD     		pop	{r7, pc}
 1395              		.cfi_endproc
 1396              	.LFE71:
 1397              		.size	MIDI1_UART_RXISR_ExitCallback, .-MIDI1_UART_RXISR_ExitCallback
 1398              		.section	.text.MIDI2_UART_RXISR_EntryCallback,"ax",%progbits
 1399              		.align	2
 1400              		.global	MIDI2_UART_RXISR_EntryCallback
 1401              		.thumb
 1402              		.thumb_func
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 37


 1403              		.type	MIDI2_UART_RXISR_EntryCallback, %function
 1404              	MIDI2_UART_RXISR_EntryCallback:
 1405              	.LFB72:
 633:main.c        **** 
 634:main.c        **** 
 635:main.c        **** /*******************************************************************************
 636:main.c        **** * Function Name: MIDI2_UART_RXISR_EntryCallback
 637:main.c        **** ********************************************************************************
 638:main.c        **** * Summary:  Turn the LED_InB on at the beginning of the MIDI2_UART_RXISR ISR  
 639:main.c        **** * when data comes to UART2 to be put in the USBFS_MIDI IN endpoint  
 640:main.c        **** * buffer.
 641:main.c        **** *
 642:main.c        **** *******************************************************************************/
 643:main.c        **** void MIDI2_UART_RXISR_EntryCallback(void)
 644:main.c        **** {
 1406              		.loc 1 644 0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 0
 1409              		@ frame_needed = 1, uses_anonymous_args = 0
 1410 0000 80B5     		push	{r7, lr}
 1411              		.cfi_def_cfa_offset 8
 1412              		.cfi_offset 7, -8
 1413              		.cfi_offset 14, -4
 1414 0002 00AF     		add	r7, sp, #0
 1415              		.cfi_def_cfa_register 7
 645:main.c        ****     /* These LEDs indicate MIDI input activity */
 646:main.c        ****     LED_InB_Write(1);
 1416              		.loc 1 646 0
 1417 0004 0120     		movs	r0, #1
 1418 0006 FFF7FEFF 		bl	LED_InB_Write
 647:main.c        **** }
 1419              		.loc 1 647 0
 1420 000a 80BD     		pop	{r7, pc}
 1421              		.cfi_endproc
 1422              	.LFE72:
 1423              		.size	MIDI2_UART_RXISR_EntryCallback, .-MIDI2_UART_RXISR_EntryCallback
 1424              		.section	.text.MIDI2_UART_RXISR_ExitCallback,"ax",%progbits
 1425              		.align	2
 1426              		.global	MIDI2_UART_RXISR_ExitCallback
 1427              		.thumb
 1428              		.thumb_func
 1429              		.type	MIDI2_UART_RXISR_ExitCallback, %function
 1430              	MIDI2_UART_RXISR_ExitCallback:
 1431              	.LFB73:
 648:main.c        **** 
 649:main.c        **** 
 650:main.c        **** /*******************************************************************************
 651:main.c        **** * Function Name: MIDI2_UART_RXISR_ExitCallback
 652:main.c        **** ********************************************************************************
 653:main.c        **** * Summary:  Turn the LED_InB off at the end of the MIDI2_UART_RXISR ISR  
 654:main.c        **** * when data is put in the USBFS_MIDI IN endpoint buffer
 655:main.c        **** *
 656:main.c        **** *******************************************************************************/
 657:main.c        **** void MIDI2_UART_RXISR_ExitCallback(void)
 658:main.c        **** {
 1432              		.loc 1 658 0
 1433              		.cfi_startproc
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 38


 1434              		@ args = 0, pretend = 0, frame = 0
 1435              		@ frame_needed = 1, uses_anonymous_args = 0
 1436 0000 80B5     		push	{r7, lr}
 1437              		.cfi_def_cfa_offset 8
 1438              		.cfi_offset 7, -8
 1439              		.cfi_offset 14, -4
 1440 0002 00AF     		add	r7, sp, #0
 1441              		.cfi_def_cfa_register 7
 659:main.c        ****     #if (USB_EP_MANAGEMENT_DMA_AUTO) 
 660:main.c        ****         USB_MIDI_IN_Service();
 661:main.c        ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 662:main.c        ****     
 663:main.c        ****     LED_InB_Write(0);
 1442              		.loc 1 663 0
 1443 0004 0020     		movs	r0, #0
 1444 0006 FFF7FEFF 		bl	LED_InB_Write
 664:main.c        **** }
 1445              		.loc 1 664 0
 1446 000a 80BD     		pop	{r7, pc}
 1447              		.cfi_endproc
 1448              	.LFE73:
 1449              		.size	MIDI2_UART_RXISR_ExitCallback, .-MIDI2_UART_RXISR_ExitCallback
 1450              		.text
 1451              	.Letext0:
 1452              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1453              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1454              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1455              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1456              		.section	.debug_info,"",%progbits
 1457              	.Ldebug_info0:
 1458 0000 61020000 		.4byte	0x261
 1459 0004 0400     		.2byte	0x4
 1460 0006 00000000 		.4byte	.Ldebug_abbrev0
 1461 000a 04       		.byte	0x4
 1462 000b 01       		.uleb128 0x1
 1463 000c 53000000 		.4byte	.LASF38
 1464 0010 01       		.byte	0x1
 1465 0011 C6020000 		.4byte	.LASF39
 1466 0015 E1000000 		.4byte	.LASF40
 1467 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1468 001d 00000000 		.4byte	0
 1469 0021 00000000 		.4byte	.Ldebug_line0
 1470 0025 02       		.uleb128 0x2
 1471 0026 01       		.byte	0x1
 1472 0027 06       		.byte	0x6
 1473 0028 0E030000 		.4byte	.LASF0
 1474 002c 02       		.uleb128 0x2
 1475 002d 01       		.byte	0x1
 1476 002e 08       		.byte	0x8
 1477 002f 65010000 		.4byte	.LASF1
 1478 0033 02       		.uleb128 0x2
 1479 0034 02       		.byte	0x2
 1480 0035 05       		.byte	0x5
 1481 0036 F5020000 		.4byte	.LASF2
 1482 003a 02       		.uleb128 0x2
 1483 003b 02       		.byte	0x2
 1484 003c 07       		.byte	0x7
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 39


 1485 003d 85010000 		.4byte	.LASF3
 1486 0041 03       		.uleb128 0x3
 1487 0042 2A000000 		.4byte	.LASF9
 1488 0046 02       		.byte	0x2
 1489 0047 3F       		.byte	0x3f
 1490 0048 4C000000 		.4byte	0x4c
 1491 004c 02       		.uleb128 0x2
 1492 004d 04       		.byte	0x4
 1493 004e 05       		.byte	0x5
 1494 004f 05030000 		.4byte	.LASF4
 1495 0053 02       		.uleb128 0x2
 1496 0054 04       		.byte	0x4
 1497 0055 07       		.byte	0x7
 1498 0056 73010000 		.4byte	.LASF5
 1499 005a 02       		.uleb128 0x2
 1500 005b 08       		.byte	0x8
 1501 005c 05       		.byte	0x5
 1502 005d 57010000 		.4byte	.LASF6
 1503 0061 02       		.uleb128 0x2
 1504 0062 08       		.byte	0x8
 1505 0063 07       		.byte	0x7
 1506 0064 26020000 		.4byte	.LASF7
 1507 0068 04       		.uleb128 0x4
 1508 0069 04       		.byte	0x4
 1509 006a 05       		.byte	0x5
 1510 006b 696E7400 		.ascii	"int\000"
 1511 006f 02       		.uleb128 0x2
 1512 0070 04       		.byte	0x4
 1513 0071 07       		.byte	0x7
 1514 0072 19020000 		.4byte	.LASF8
 1515 0076 03       		.uleb128 0x3
 1516 0077 8E020000 		.4byte	.LASF10
 1517 007b 03       		.byte	0x3
 1518 007c 2C       		.byte	0x2c
 1519 007d 41000000 		.4byte	0x41
 1520 0081 05       		.uleb128 0x5
 1521 0082 FF020000 		.4byte	.LASF11
 1522 0086 04       		.byte	0x4
 1523 0087 9201     		.2byte	0x192
 1524 0089 2C000000 		.4byte	0x2c
 1525 008d 02       		.uleb128 0x2
 1526 008e 04       		.byte	0x4
 1527 008f 04       		.byte	0x4
 1528 0090 51010000 		.4byte	.LASF12
 1529 0094 02       		.uleb128 0x2
 1530 0095 08       		.byte	0x8
 1531 0096 04       		.byte	0x4
 1532 0097 AB010000 		.4byte	.LASF13
 1533 009b 02       		.uleb128 0x2
 1534 009c 01       		.byte	0x1
 1535 009d 08       		.byte	0x8
 1536 009e CD020000 		.4byte	.LASF14
 1537 00a2 06       		.uleb128 0x6
 1538 00a3 81000000 		.4byte	0x81
 1539 00a7 02       		.uleb128 0x2
 1540 00a8 04       		.byte	0x4
 1541 00a9 07       		.byte	0x7
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 40


 1542 00aa 96020000 		.4byte	.LASF15
 1543 00ae 07       		.uleb128 0x7
 1544 00af 81000000 		.4byte	0x81
 1545 00b3 BE000000 		.4byte	0xbe
 1546 00b7 08       		.uleb128 0x8
 1547 00b8 A7000000 		.4byte	0xa7
 1548 00bc 03       		.byte	0x3
 1549 00bd 00       		.byte	0
 1550 00be 09       		.uleb128 0x9
 1551 00bf EA010000 		.4byte	.LASF20
 1552 00c3 01       		.byte	0x1
 1553 00c4 5B       		.byte	0x5b
 1554 00c5 00000000 		.4byte	.LFB63
 1555 00c9 30000000 		.4byte	.LFE63-.LFB63
 1556 00cd 01       		.uleb128 0x1
 1557 00ce 9C       		.byte	0x9c
 1558 00cf 0A       		.uleb128 0xa
 1559 00d0 B2010000 		.4byte	.LASF16
 1560 00d4 01       		.byte	0x1
 1561 00d5 72       		.byte	0x72
 1562 00d6 68000000 		.4byte	0x68
 1563 00da 00000000 		.4byte	.LFB64
 1564 00de 4C020000 		.4byte	.LFE64-.LFB64
 1565 00e2 01       		.uleb128 0x1
 1566 00e3 9C       		.byte	0x9c
 1567 00e4 F7000000 		.4byte	0xf7
 1568 00e8 0B       		.uleb128 0xb
 1569 00e9 ED020000 		.4byte	.LASF19
 1570 00ed 01       		.byte	0x1
 1571 00ee 74       		.byte	0x74
 1572 00ef AE000000 		.4byte	0xae
 1573 00f3 02       		.uleb128 0x2
 1574 00f4 91       		.byte	0x91
 1575 00f5 74       		.sleb128 -12
 1576 00f6 00       		.byte	0
 1577 00f7 0C       		.uleb128 0xc
 1578 00f8 D2020000 		.4byte	.LASF17
 1579 00fc 01       		.byte	0x1
 1580 00fd 5401     		.2byte	0x154
 1581 00ff 00000000 		.4byte	.LFB65
 1582 0103 C8050000 		.4byte	.LFE65-.LFB65
 1583 0107 01       		.uleb128 0x1
 1584 0108 9C       		.byte	0x9c
 1585 0109 2C010000 		.4byte	0x12c
 1586 010d 0D       		.uleb128 0xd
 1587 010e 98010000 		.4byte	.LASF18
 1588 0112 01       		.byte	0x1
 1589 0113 5401     		.2byte	0x154
 1590 0115 81000000 		.4byte	0x81
 1591 0119 02       		.uleb128 0x2
 1592 011a 91       		.byte	0x91
 1593 011b 77       		.sleb128 -9
 1594 011c 0D       		.uleb128 0xd
 1595 011d ED020000 		.4byte	.LASF19
 1596 0121 01       		.byte	0x1
 1597 0122 5401     		.2byte	0x154
 1598 0124 2C010000 		.4byte	0x12c
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 41


 1599 0128 02       		.uleb128 0x2
 1600 0129 91       		.byte	0x91
 1601 012a 70       		.sleb128 -16
 1602 012b 00       		.byte	0
 1603 012c 0E       		.uleb128 0xe
 1604 012d 04       		.byte	0x4
 1605 012e 81000000 		.4byte	0x81
 1606 0132 0F       		.uleb128 0xf
 1607 0133 F3010000 		.4byte	.LASF21
 1608 0137 01       		.byte	0x1
 1609 0138 2D02     		.2byte	0x22d
 1610 013a 00000000 		.4byte	.LFB66
 1611 013e 0C000000 		.4byte	.LFE66-.LFB66
 1612 0142 01       		.uleb128 0x1
 1613 0143 9C       		.byte	0x9c
 1614 0144 0F       		.uleb128 0xf
 1615 0145 1A030000 		.4byte	.LASF22
 1616 0149 01       		.byte	0x1
 1617 014a 3A02     		.2byte	0x23a
 1618 014c 00000000 		.4byte	.LFB67
 1619 0150 0C000000 		.4byte	.LFE67-.LFB67
 1620 0154 01       		.uleb128 0x1
 1621 0155 9C       		.byte	0x9c
 1622 0156 10       		.uleb128 0x10
 1623 0157 B7010000 		.4byte	.LASF23
 1624 015b 01       		.byte	0x1
 1625 015c 4802     		.2byte	0x248
 1626 015e 00000000 		.4byte	.LFB68
 1627 0162 0C000000 		.4byte	.LFE68-.LFB68
 1628 0166 01       		.uleb128 0x1
 1629 0167 9C       		.byte	0x9c
 1630 0168 10       		.uleb128 0x10
 1631 0169 4A020000 		.4byte	.LASF24
 1632 016d 01       		.byte	0x1
 1633 016e 5502     		.2byte	0x255
 1634 0170 00000000 		.4byte	.LFB69
 1635 0174 0C000000 		.4byte	.LFE69-.LFB69
 1636 0178 01       		.uleb128 0x1
 1637 0179 9C       		.byte	0x9c
 1638 017a 10       		.uleb128 0x10
 1639 017b 6F020000 		.4byte	.LASF25
 1640 017f 01       		.byte	0x1
 1641 0180 6302     		.2byte	0x263
 1642 0182 00000000 		.4byte	.LFB70
 1643 0186 0C000000 		.4byte	.LFE70-.LFB70
 1644 018a 01       		.uleb128 0x1
 1645 018b 9C       		.byte	0x9c
 1646 018c 10       		.uleb128 0x10
 1647 018d 20010000 		.4byte	.LASF26
 1648 0191 01       		.byte	0x1
 1649 0192 7102     		.2byte	0x271
 1650 0194 00000000 		.4byte	.LFB71
 1651 0198 0C000000 		.4byte	.LFE71-.LFB71
 1652 019c 01       		.uleb128 0x1
 1653 019d 9C       		.byte	0x9c
 1654 019e 10       		.uleb128 0x10
 1655 019f 34000000 		.4byte	.LASF27
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 42


 1656 01a3 01       		.byte	0x1
 1657 01a4 8302     		.2byte	0x283
 1658 01a6 00000000 		.4byte	.LFB72
 1659 01aa 0C000000 		.4byte	.LFE72-.LFB72
 1660 01ae 01       		.uleb128 0x1
 1661 01af 9C       		.byte	0x9c
 1662 01b0 10       		.uleb128 0x10
 1663 01b1 0C000000 		.4byte	.LASF28
 1664 01b5 01       		.byte	0x1
 1665 01b6 9102     		.2byte	0x291
 1666 01b8 00000000 		.4byte	.LFB73
 1667 01bc 0C000000 		.4byte	.LFE73-.LFB73
 1668 01c0 01       		.uleb128 0x1
 1669 01c1 9C       		.byte	0x9c
 1670 01c2 11       		.uleb128 0x11
 1671 01c3 B3020000 		.4byte	.LASF29
 1672 01c7 01       		.byte	0x1
 1673 01c8 43       		.byte	0x43
 1674 01c9 A2000000 		.4byte	0xa2
 1675 01cd 11       		.uleb128 0x11
 1676 01ce 3F030000 		.4byte	.LASF30
 1677 01d2 01       		.byte	0x1
 1678 01d3 44       		.byte	0x44
 1679 01d4 A2000000 		.4byte	0xa2
 1680 01d8 12       		.uleb128 0x12
 1681 01d9 9E010000 		.4byte	.LASF31
 1682 01dd 05       		.byte	0x5
 1683 01de 9606     		.2byte	0x696
 1684 01e0 E4010000 		.4byte	0x1e4
 1685 01e4 06       		.uleb128 0x6
 1686 01e5 76000000 		.4byte	0x76
 1687 01e9 07       		.uleb128 0x7
 1688 01ea 81000000 		.4byte	0x81
 1689 01ee F9010000 		.4byte	0x1f9
 1690 01f2 08       		.uleb128 0x8
 1691 01f3 A7000000 		.4byte	0xa7
 1692 01f7 0D       		.byte	0xd
 1693 01f8 00       		.byte	0
 1694 01f9 13       		.uleb128 0x13
 1695 01fa 9F020000 		.4byte	.LASF32
 1696 01fe 01       		.byte	0x1
 1697 01ff 35       		.byte	0x35
 1698 0200 0A020000 		.4byte	0x20a
 1699 0204 05       		.uleb128 0x5
 1700 0205 03       		.byte	0x3
 1701 0206 00000000 		.4byte	MIDI_IDENTITY_REPLY
 1702 020a 14       		.uleb128 0x14
 1703 020b E9010000 		.4byte	0x1e9
 1704 020f 13       		.uleb128 0x13
 1705 0210 3E010000 		.4byte	.LASF33
 1706 0214 01       		.byte	0x1
 1707 0215 46       		.byte	0x46
 1708 0216 A2000000 		.4byte	0xa2
 1709 021a 05       		.uleb128 0x5
 1710 021b 03       		.byte	0x3
 1711 021c 00000000 		.4byte	usbActivityCounter
 1712 0220 13       		.uleb128 0x13
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 43


 1713 0221 3D020000 		.4byte	.LASF34
 1714 0225 01       		.byte	0x1
 1715 0226 48       		.byte	0x48
 1716 0227 81000000 		.4byte	0x81
 1717 022b 05       		.uleb128 0x5
 1718 022c 03       		.byte	0x3
 1719 022d 00000000 		.4byte	csButtStates
 1720 0231 13       		.uleb128 0x13
 1721 0232 52030000 		.4byte	.LASF35
 1722 0236 01       		.byte	0x1
 1723 0237 49       		.byte	0x49
 1724 0238 81000000 		.4byte	0x81
 1725 023c 05       		.uleb128 0x5
 1726 023d 03       		.byte	0x3
 1727 023e 00000000 		.4byte	csButtStatesOld
 1728 0242 13       		.uleb128 0x13
 1729 0243 DD010000 		.4byte	.LASF36
 1730 0247 01       		.byte	0x1
 1731 0248 4A       		.byte	0x4a
 1732 0249 81000000 		.4byte	0x81
 1733 024d 05       		.uleb128 0x5
 1734 024e 03       		.byte	0x3
 1735 024f 00000000 		.4byte	csButtChange
 1736 0253 13       		.uleb128 0x13
 1737 0254 00000000 		.4byte	.LASF37
 1738 0258 01       		.byte	0x1
 1739 0259 4B       		.byte	0x4b
 1740 025a 81000000 		.4byte	0x81
 1741 025e 05       		.uleb128 0x5
 1742 025f 03       		.byte	0x3
 1743 0260 00000000 		.4byte	inqFlagsOld
 1744 0264 00       		.byte	0
 1745              		.section	.debug_abbrev,"",%progbits
 1746              	.Ldebug_abbrev0:
 1747 0000 01       		.uleb128 0x1
 1748 0001 11       		.uleb128 0x11
 1749 0002 01       		.byte	0x1
 1750 0003 25       		.uleb128 0x25
 1751 0004 0E       		.uleb128 0xe
 1752 0005 13       		.uleb128 0x13
 1753 0006 0B       		.uleb128 0xb
 1754 0007 03       		.uleb128 0x3
 1755 0008 0E       		.uleb128 0xe
 1756 0009 1B       		.uleb128 0x1b
 1757 000a 0E       		.uleb128 0xe
 1758 000b 55       		.uleb128 0x55
 1759 000c 17       		.uleb128 0x17
 1760 000d 11       		.uleb128 0x11
 1761 000e 01       		.uleb128 0x1
 1762 000f 10       		.uleb128 0x10
 1763 0010 17       		.uleb128 0x17
 1764 0011 00       		.byte	0
 1765 0012 00       		.byte	0
 1766 0013 02       		.uleb128 0x2
 1767 0014 24       		.uleb128 0x24
 1768 0015 00       		.byte	0
 1769 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 44


 1770 0017 0B       		.uleb128 0xb
 1771 0018 3E       		.uleb128 0x3e
 1772 0019 0B       		.uleb128 0xb
 1773 001a 03       		.uleb128 0x3
 1774 001b 0E       		.uleb128 0xe
 1775 001c 00       		.byte	0
 1776 001d 00       		.byte	0
 1777 001e 03       		.uleb128 0x3
 1778 001f 16       		.uleb128 0x16
 1779 0020 00       		.byte	0
 1780 0021 03       		.uleb128 0x3
 1781 0022 0E       		.uleb128 0xe
 1782 0023 3A       		.uleb128 0x3a
 1783 0024 0B       		.uleb128 0xb
 1784 0025 3B       		.uleb128 0x3b
 1785 0026 0B       		.uleb128 0xb
 1786 0027 49       		.uleb128 0x49
 1787 0028 13       		.uleb128 0x13
 1788 0029 00       		.byte	0
 1789 002a 00       		.byte	0
 1790 002b 04       		.uleb128 0x4
 1791 002c 24       		.uleb128 0x24
 1792 002d 00       		.byte	0
 1793 002e 0B       		.uleb128 0xb
 1794 002f 0B       		.uleb128 0xb
 1795 0030 3E       		.uleb128 0x3e
 1796 0031 0B       		.uleb128 0xb
 1797 0032 03       		.uleb128 0x3
 1798 0033 08       		.uleb128 0x8
 1799 0034 00       		.byte	0
 1800 0035 00       		.byte	0
 1801 0036 05       		.uleb128 0x5
 1802 0037 16       		.uleb128 0x16
 1803 0038 00       		.byte	0
 1804 0039 03       		.uleb128 0x3
 1805 003a 0E       		.uleb128 0xe
 1806 003b 3A       		.uleb128 0x3a
 1807 003c 0B       		.uleb128 0xb
 1808 003d 3B       		.uleb128 0x3b
 1809 003e 05       		.uleb128 0x5
 1810 003f 49       		.uleb128 0x49
 1811 0040 13       		.uleb128 0x13
 1812 0041 00       		.byte	0
 1813 0042 00       		.byte	0
 1814 0043 06       		.uleb128 0x6
 1815 0044 35       		.uleb128 0x35
 1816 0045 00       		.byte	0
 1817 0046 49       		.uleb128 0x49
 1818 0047 13       		.uleb128 0x13
 1819 0048 00       		.byte	0
 1820 0049 00       		.byte	0
 1821 004a 07       		.uleb128 0x7
 1822 004b 01       		.uleb128 0x1
 1823 004c 01       		.byte	0x1
 1824 004d 49       		.uleb128 0x49
 1825 004e 13       		.uleb128 0x13
 1826 004f 01       		.uleb128 0x1
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 45


 1827 0050 13       		.uleb128 0x13
 1828 0051 00       		.byte	0
 1829 0052 00       		.byte	0
 1830 0053 08       		.uleb128 0x8
 1831 0054 21       		.uleb128 0x21
 1832 0055 00       		.byte	0
 1833 0056 49       		.uleb128 0x49
 1834 0057 13       		.uleb128 0x13
 1835 0058 2F       		.uleb128 0x2f
 1836 0059 0B       		.uleb128 0xb
 1837 005a 00       		.byte	0
 1838 005b 00       		.byte	0
 1839 005c 09       		.uleb128 0x9
 1840 005d 2E       		.uleb128 0x2e
 1841 005e 00       		.byte	0
 1842 005f 3F       		.uleb128 0x3f
 1843 0060 19       		.uleb128 0x19
 1844 0061 03       		.uleb128 0x3
 1845 0062 0E       		.uleb128 0xe
 1846 0063 3A       		.uleb128 0x3a
 1847 0064 0B       		.uleb128 0xb
 1848 0065 3B       		.uleb128 0x3b
 1849 0066 0B       		.uleb128 0xb
 1850 0067 27       		.uleb128 0x27
 1851 0068 19       		.uleb128 0x19
 1852 0069 11       		.uleb128 0x11
 1853 006a 01       		.uleb128 0x1
 1854 006b 12       		.uleb128 0x12
 1855 006c 06       		.uleb128 0x6
 1856 006d 40       		.uleb128 0x40
 1857 006e 18       		.uleb128 0x18
 1858 006f 9642     		.uleb128 0x2116
 1859 0071 19       		.uleb128 0x19
 1860 0072 00       		.byte	0
 1861 0073 00       		.byte	0
 1862 0074 0A       		.uleb128 0xa
 1863 0075 2E       		.uleb128 0x2e
 1864 0076 01       		.byte	0x1
 1865 0077 3F       		.uleb128 0x3f
 1866 0078 19       		.uleb128 0x19
 1867 0079 03       		.uleb128 0x3
 1868 007a 0E       		.uleb128 0xe
 1869 007b 3A       		.uleb128 0x3a
 1870 007c 0B       		.uleb128 0xb
 1871 007d 3B       		.uleb128 0x3b
 1872 007e 0B       		.uleb128 0xb
 1873 007f 49       		.uleb128 0x49
 1874 0080 13       		.uleb128 0x13
 1875 0081 11       		.uleb128 0x11
 1876 0082 01       		.uleb128 0x1
 1877 0083 12       		.uleb128 0x12
 1878 0084 06       		.uleb128 0x6
 1879 0085 40       		.uleb128 0x40
 1880 0086 18       		.uleb128 0x18
 1881 0087 9642     		.uleb128 0x2116
 1882 0089 19       		.uleb128 0x19
 1883 008a 01       		.uleb128 0x1
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 46


 1884 008b 13       		.uleb128 0x13
 1885 008c 00       		.byte	0
 1886 008d 00       		.byte	0
 1887 008e 0B       		.uleb128 0xb
 1888 008f 34       		.uleb128 0x34
 1889 0090 00       		.byte	0
 1890 0091 03       		.uleb128 0x3
 1891 0092 0E       		.uleb128 0xe
 1892 0093 3A       		.uleb128 0x3a
 1893 0094 0B       		.uleb128 0xb
 1894 0095 3B       		.uleb128 0x3b
 1895 0096 0B       		.uleb128 0xb
 1896 0097 49       		.uleb128 0x49
 1897 0098 13       		.uleb128 0x13
 1898 0099 02       		.uleb128 0x2
 1899 009a 18       		.uleb128 0x18
 1900 009b 00       		.byte	0
 1901 009c 00       		.byte	0
 1902 009d 0C       		.uleb128 0xc
 1903 009e 2E       		.uleb128 0x2e
 1904 009f 01       		.byte	0x1
 1905 00a0 3F       		.uleb128 0x3f
 1906 00a1 19       		.uleb128 0x19
 1907 00a2 03       		.uleb128 0x3
 1908 00a3 0E       		.uleb128 0xe
 1909 00a4 3A       		.uleb128 0x3a
 1910 00a5 0B       		.uleb128 0xb
 1911 00a6 3B       		.uleb128 0x3b
 1912 00a7 05       		.uleb128 0x5
 1913 00a8 27       		.uleb128 0x27
 1914 00a9 19       		.uleb128 0x19
 1915 00aa 11       		.uleb128 0x11
 1916 00ab 01       		.uleb128 0x1
 1917 00ac 12       		.uleb128 0x12
 1918 00ad 06       		.uleb128 0x6
 1919 00ae 40       		.uleb128 0x40
 1920 00af 18       		.uleb128 0x18
 1921 00b0 9642     		.uleb128 0x2116
 1922 00b2 19       		.uleb128 0x19
 1923 00b3 01       		.uleb128 0x1
 1924 00b4 13       		.uleb128 0x13
 1925 00b5 00       		.byte	0
 1926 00b6 00       		.byte	0
 1927 00b7 0D       		.uleb128 0xd
 1928 00b8 05       		.uleb128 0x5
 1929 00b9 00       		.byte	0
 1930 00ba 03       		.uleb128 0x3
 1931 00bb 0E       		.uleb128 0xe
 1932 00bc 3A       		.uleb128 0x3a
 1933 00bd 0B       		.uleb128 0xb
 1934 00be 3B       		.uleb128 0x3b
 1935 00bf 05       		.uleb128 0x5
 1936 00c0 49       		.uleb128 0x49
 1937 00c1 13       		.uleb128 0x13
 1938 00c2 02       		.uleb128 0x2
 1939 00c3 18       		.uleb128 0x18
 1940 00c4 00       		.byte	0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 47


 1941 00c5 00       		.byte	0
 1942 00c6 0E       		.uleb128 0xe
 1943 00c7 0F       		.uleb128 0xf
 1944 00c8 00       		.byte	0
 1945 00c9 0B       		.uleb128 0xb
 1946 00ca 0B       		.uleb128 0xb
 1947 00cb 49       		.uleb128 0x49
 1948 00cc 13       		.uleb128 0x13
 1949 00cd 00       		.byte	0
 1950 00ce 00       		.byte	0
 1951 00cf 0F       		.uleb128 0xf
 1952 00d0 2E       		.uleb128 0x2e
 1953 00d1 00       		.byte	0
 1954 00d2 3F       		.uleb128 0x3f
 1955 00d3 19       		.uleb128 0x19
 1956 00d4 03       		.uleb128 0x3
 1957 00d5 0E       		.uleb128 0xe
 1958 00d6 3A       		.uleb128 0x3a
 1959 00d7 0B       		.uleb128 0xb
 1960 00d8 3B       		.uleb128 0x3b
 1961 00d9 05       		.uleb128 0x5
 1962 00da 27       		.uleb128 0x27
 1963 00db 19       		.uleb128 0x19
 1964 00dc 11       		.uleb128 0x11
 1965 00dd 01       		.uleb128 0x1
 1966 00de 12       		.uleb128 0x12
 1967 00df 06       		.uleb128 0x6
 1968 00e0 40       		.uleb128 0x40
 1969 00e1 18       		.uleb128 0x18
 1970 00e2 9742     		.uleb128 0x2117
 1971 00e4 19       		.uleb128 0x19
 1972 00e5 00       		.byte	0
 1973 00e6 00       		.byte	0
 1974 00e7 10       		.uleb128 0x10
 1975 00e8 2E       		.uleb128 0x2e
 1976 00e9 00       		.byte	0
 1977 00ea 3F       		.uleb128 0x3f
 1978 00eb 19       		.uleb128 0x19
 1979 00ec 03       		.uleb128 0x3
 1980 00ed 0E       		.uleb128 0xe
 1981 00ee 3A       		.uleb128 0x3a
 1982 00ef 0B       		.uleb128 0xb
 1983 00f0 3B       		.uleb128 0x3b
 1984 00f1 05       		.uleb128 0x5
 1985 00f2 27       		.uleb128 0x27
 1986 00f3 19       		.uleb128 0x19
 1987 00f4 11       		.uleb128 0x11
 1988 00f5 01       		.uleb128 0x1
 1989 00f6 12       		.uleb128 0x12
 1990 00f7 06       		.uleb128 0x6
 1991 00f8 40       		.uleb128 0x40
 1992 00f9 18       		.uleb128 0x18
 1993 00fa 9642     		.uleb128 0x2116
 1994 00fc 19       		.uleb128 0x19
 1995 00fd 00       		.byte	0
 1996 00fe 00       		.byte	0
 1997 00ff 11       		.uleb128 0x11
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 48


 1998 0100 34       		.uleb128 0x34
 1999 0101 00       		.byte	0
 2000 0102 03       		.uleb128 0x3
 2001 0103 0E       		.uleb128 0xe
 2002 0104 3A       		.uleb128 0x3a
 2003 0105 0B       		.uleb128 0xb
 2004 0106 3B       		.uleb128 0x3b
 2005 0107 0B       		.uleb128 0xb
 2006 0108 49       		.uleb128 0x49
 2007 0109 13       		.uleb128 0x13
 2008 010a 3F       		.uleb128 0x3f
 2009 010b 19       		.uleb128 0x19
 2010 010c 3C       		.uleb128 0x3c
 2011 010d 19       		.uleb128 0x19
 2012 010e 00       		.byte	0
 2013 010f 00       		.byte	0
 2014 0110 12       		.uleb128 0x12
 2015 0111 34       		.uleb128 0x34
 2016 0112 00       		.byte	0
 2017 0113 03       		.uleb128 0x3
 2018 0114 0E       		.uleb128 0xe
 2019 0115 3A       		.uleb128 0x3a
 2020 0116 0B       		.uleb128 0xb
 2021 0117 3B       		.uleb128 0x3b
 2022 0118 05       		.uleb128 0x5
 2023 0119 49       		.uleb128 0x49
 2024 011a 13       		.uleb128 0x13
 2025 011b 3F       		.uleb128 0x3f
 2026 011c 19       		.uleb128 0x19
 2027 011d 3C       		.uleb128 0x3c
 2028 011e 19       		.uleb128 0x19
 2029 011f 00       		.byte	0
 2030 0120 00       		.byte	0
 2031 0121 13       		.uleb128 0x13
 2032 0122 34       		.uleb128 0x34
 2033 0123 00       		.byte	0
 2034 0124 03       		.uleb128 0x3
 2035 0125 0E       		.uleb128 0xe
 2036 0126 3A       		.uleb128 0x3a
 2037 0127 0B       		.uleb128 0xb
 2038 0128 3B       		.uleb128 0x3b
 2039 0129 0B       		.uleb128 0xb
 2040 012a 49       		.uleb128 0x49
 2041 012b 13       		.uleb128 0x13
 2042 012c 3F       		.uleb128 0x3f
 2043 012d 19       		.uleb128 0x19
 2044 012e 02       		.uleb128 0x2
 2045 012f 18       		.uleb128 0x18
 2046 0130 00       		.byte	0
 2047 0131 00       		.byte	0
 2048 0132 14       		.uleb128 0x14
 2049 0133 26       		.uleb128 0x26
 2050 0134 00       		.byte	0
 2051 0135 49       		.uleb128 0x49
 2052 0136 13       		.uleb128 0x13
 2053 0137 00       		.byte	0
 2054 0138 00       		.byte	0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 49


 2055 0139 00       		.byte	0
 2056              		.section	.debug_aranges,"",%progbits
 2057 0000 6C000000 		.4byte	0x6c
 2058 0004 0200     		.2byte	0x2
 2059 0006 00000000 		.4byte	.Ldebug_info0
 2060 000a 04       		.byte	0x4
 2061 000b 00       		.byte	0
 2062 000c 0000     		.2byte	0
 2063 000e 0000     		.2byte	0
 2064 0010 00000000 		.4byte	.LFB63
 2065 0014 30000000 		.4byte	.LFE63-.LFB63
 2066 0018 00000000 		.4byte	.LFB64
 2067 001c 4C020000 		.4byte	.LFE64-.LFB64
 2068 0020 00000000 		.4byte	.LFB65
 2069 0024 C8050000 		.4byte	.LFE65-.LFB65
 2070 0028 00000000 		.4byte	.LFB66
 2071 002c 0C000000 		.4byte	.LFE66-.LFB66
 2072 0030 00000000 		.4byte	.LFB67
 2073 0034 0C000000 		.4byte	.LFE67-.LFB67
 2074 0038 00000000 		.4byte	.LFB68
 2075 003c 0C000000 		.4byte	.LFE68-.LFB68
 2076 0040 00000000 		.4byte	.LFB69
 2077 0044 0C000000 		.4byte	.LFE69-.LFB69
 2078 0048 00000000 		.4byte	.LFB70
 2079 004c 0C000000 		.4byte	.LFE70-.LFB70
 2080 0050 00000000 		.4byte	.LFB71
 2081 0054 0C000000 		.4byte	.LFE71-.LFB71
 2082 0058 00000000 		.4byte	.LFB72
 2083 005c 0C000000 		.4byte	.LFE72-.LFB72
 2084 0060 00000000 		.4byte	.LFB73
 2085 0064 0C000000 		.4byte	.LFE73-.LFB73
 2086 0068 00000000 		.4byte	0
 2087 006c 00000000 		.4byte	0
 2088              		.section	.debug_ranges,"",%progbits
 2089              	.Ldebug_ranges0:
 2090 0000 00000000 		.4byte	.LFB63
 2091 0004 30000000 		.4byte	.LFE63
 2092 0008 00000000 		.4byte	.LFB64
 2093 000c 4C020000 		.4byte	.LFE64
 2094 0010 00000000 		.4byte	.LFB65
 2095 0014 C8050000 		.4byte	.LFE65
 2096 0018 00000000 		.4byte	.LFB66
 2097 001c 0C000000 		.4byte	.LFE66
 2098 0020 00000000 		.4byte	.LFB67
 2099 0024 0C000000 		.4byte	.LFE67
 2100 0028 00000000 		.4byte	.LFB68
 2101 002c 0C000000 		.4byte	.LFE68
 2102 0030 00000000 		.4byte	.LFB69
 2103 0034 0C000000 		.4byte	.LFE69
 2104 0038 00000000 		.4byte	.LFB70
 2105 003c 0C000000 		.4byte	.LFE70
 2106 0040 00000000 		.4byte	.LFB71
 2107 0044 0C000000 		.4byte	.LFE71
 2108 0048 00000000 		.4byte	.LFB72
 2109 004c 0C000000 		.4byte	.LFE72
 2110 0050 00000000 		.4byte	.LFB73
 2111 0054 0C000000 		.4byte	.LFE73
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 50


 2112 0058 00000000 		.4byte	0
 2113 005c 00000000 		.4byte	0
 2114              		.section	.debug_line,"",%progbits
 2115              	.Ldebug_line0:
 2116 0000 CA020000 		.section	.debug_str,"MS",%progbits,1
 2116      02004701 
 2116      00000201 
 2116      FB0E0D00 
 2116      01010101 
 2117              	.LASF37:
 2118 0000 696E7146 		.ascii	"inqFlagsOld\000"
 2118      6C616773 
 2118      4F6C6400 
 2119              	.LASF28:
 2120 000c 4D494449 		.ascii	"MIDI2_UART_RXISR_ExitCallback\000"
 2120      325F5541 
 2120      52545F52 
 2120      58495352 
 2120      5F457869 
 2121              	.LASF9:
 2122 002a 5F5F696E 		.ascii	"__int32_t\000"
 2122      7433325F 
 2122      7400
 2123              	.LASF27:
 2124 0034 4D494449 		.ascii	"MIDI2_UART_RXISR_EntryCallback\000"
 2124      325F5541 
 2124      52545F52 
 2124      58495352 
 2124      5F456E74 
 2125              	.LASF38:
 2126 0053 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2126      4320342E 
 2126      392E3320 
 2126      32303135 
 2126      30333033 
 2127 0086 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2127      20726576 
 2127      6973696F 
 2127      6E203232 
 2127      31323230 
 2128 00b9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2128      66756E63 
 2128      74696F6E 
 2128      2D736563 
 2128      74696F6E 
 2129              	.LASF40:
 2130 00e1 433A5C55 		.ascii	"C:\\Users\\214016586\\Documents\\GitHub\\Accoder\\A"
 2130      73657273 
 2130      5C323134 
 2130      30313635 
 2130      38365C44 
 2131 010e 63636F64 		.ascii	"ccoder_MIDI.cydsn\000"
 2131      65725F4D 
 2131      4944492E 
 2131      63796473 
 2131      6E00
 2132              	.LASF26:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 51


 2133 0120 4D494449 		.ascii	"MIDI1_UART_RXISR_ExitCallback\000"
 2133      315F5541 
 2133      52545F52 
 2133      58495352 
 2133      5F457869 
 2134              	.LASF33:
 2135 013e 75736241 		.ascii	"usbActivityCounter\000"
 2135      63746976 
 2135      69747943 
 2135      6F756E74 
 2135      657200
 2136              	.LASF12:
 2137 0151 666C6F61 		.ascii	"float\000"
 2137      7400
 2138              	.LASF6:
 2139 0157 6C6F6E67 		.ascii	"long long int\000"
 2139      206C6F6E 
 2139      6720696E 
 2139      7400
 2140              	.LASF1:
 2141 0165 756E7369 		.ascii	"unsigned char\000"
 2141      676E6564 
 2141      20636861 
 2141      7200
 2142              	.LASF5:
 2143 0173 6C6F6E67 		.ascii	"long unsigned int\000"
 2143      20756E73 
 2143      69676E65 
 2143      6420696E 
 2143      7400
 2144              	.LASF3:
 2145 0185 73686F72 		.ascii	"short unsigned int\000"
 2145      7420756E 
 2145      7369676E 
 2145      65642069 
 2145      6E7400
 2146              	.LASF18:
 2147 0198 6361626C 		.ascii	"cable\000"
 2147      6500
 2148              	.LASF31:
 2149 019e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2149      52784275 
 2149      66666572 
 2149      00
 2150              	.LASF13:
 2151 01ab 646F7562 		.ascii	"double\000"
 2151      6C6500
 2152              	.LASF16:
 2153 01b2 6D61696E 		.ascii	"main\000"
 2153      00
 2154              	.LASF23:
 2155 01b7 5553425F 		.ascii	"USB_MIDI2_ProcessUsbOut_EntryCallback\000"
 2155      4D494449 
 2155      325F5072 
 2155      6F636573 
 2155      73557362 
 2156              	.LASF36:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 52


 2157 01dd 63734275 		.ascii	"csButtChange\000"
 2157      74744368 
 2157      616E6765 
 2157      00
 2158              	.LASF20:
 2159 01ea 536C6565 		.ascii	"SleepIsr\000"
 2159      70497372 
 2159      00
 2160              	.LASF21:
 2161 01f3 5553425F 		.ascii	"USB_MIDI1_ProcessUsbOut_EntryCallback\000"
 2161      4D494449 
 2161      315F5072 
 2161      6F636573 
 2161      73557362 
 2162              	.LASF8:
 2163 0219 756E7369 		.ascii	"unsigned int\000"
 2163      676E6564 
 2163      20696E74 
 2163      00
 2164              	.LASF7:
 2165 0226 6C6F6E67 		.ascii	"long long unsigned int\000"
 2165      206C6F6E 
 2165      6720756E 
 2165      7369676E 
 2165      65642069 
 2166              	.LASF34:
 2167 023d 63734275 		.ascii	"csButtStates\000"
 2167      74745374 
 2167      61746573 
 2167      00
 2168              	.LASF24:
 2169 024a 5553425F 		.ascii	"USB_MIDI2_ProcessUsbOut_ExitCallback\000"
 2169      4D494449 
 2169      325F5072 
 2169      6F636573 
 2169      73557362 
 2170              	.LASF25:
 2171 026f 4D494449 		.ascii	"MIDI1_UART_RXISR_EntryCallback\000"
 2171      315F5541 
 2171      52545F52 
 2171      58495352 
 2171      5F456E74 
 2172              	.LASF10:
 2173 028e 696E7433 		.ascii	"int32_t\000"
 2173      325F7400 
 2174              	.LASF15:
 2175 0296 73697A65 		.ascii	"sizetype\000"
 2175      74797065 
 2175      00
 2176              	.LASF32:
 2177 029f 4D494449 		.ascii	"MIDI_IDENTITY_REPLY\000"
 2177      5F494445 
 2177      4E544954 
 2177      595F5245 
 2177      504C5900 
 2178              	.LASF29:
 2179 02b3 5553425F 		.ascii	"USB_MIDI1_InqFlags\000"
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc3ccfzd.s 			page 53


 2179      4D494449 
 2179      315F496E 
 2179      71466C61 
 2179      677300
 2180              	.LASF39:
 2181 02c6 6D61696E 		.ascii	"main.c\000"
 2181      2E6300
 2182              	.LASF14:
 2183 02cd 63686172 		.ascii	"char\000"
 2183      00
 2184              	.LASF17:
 2185 02d2 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 2185      63616C6C 
 2185      6261636B 
 2185      4C6F6361 
 2185      6C4D6964 
 2186              	.LASF19:
 2187 02ed 6D696469 		.ascii	"midiMsg\000"
 2187      4D736700 
 2188              	.LASF2:
 2189 02f5 73686F72 		.ascii	"short int\000"
 2189      7420696E 
 2189      7400
 2190              	.LASF11:
 2191 02ff 75696E74 		.ascii	"uint8\000"
 2191      3800
 2192              	.LASF4:
 2193 0305 6C6F6E67 		.ascii	"long int\000"
 2193      20696E74 
 2193      00
 2194              	.LASF0:
 2195 030e 7369676E 		.ascii	"signed char\000"
 2195      65642063 
 2195      68617200 
 2196              	.LASF22:
 2197 031a 5553425F 		.ascii	"USB_MIDI1_ProcessUsbOut_ExitCallback\000"
 2197      4D494449 
 2197      315F5072 
 2197      6F636573 
 2197      73557362 
 2198              	.LASF30:
 2199 033f 5553425F 		.ascii	"USB_MIDI2_InqFlags\000"
 2199      4D494449 
 2199      325F496E 
 2199      71466C61 
 2199      677300
 2200              	.LASF35:
 2201 0352 63734275 		.ascii	"csButtStatesOld\000"
 2201      74745374 
 2201      61746573 
 2201      4F6C6400 
 2202              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
