ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	MIDI_IDENTITY_REPLY
  19              		.section	.rodata
  20              		.align	2
  21              		.type	MIDI_IDENTITY_REPLY, %object
  22              		.size	MIDI_IDENTITY_REPLY, 14
  23              	MIDI_IDENTITY_REPLY:
  24 0000 F0       		.byte	-16
  25 0001 7E       		.byte	126
  26 0002 7F       		.byte	127
  27 0003 06       		.byte	6
  28 0004 02       		.byte	2
  29 0005 7D       		.byte	125
  30 0006 B4       		.byte	-76
  31 0007 04       		.byte	4
  32 0008 32       		.byte	50
  33 0009 D2       		.byte	-46
  34 000a 01       		.byte	1
  35 000b 00       		.byte	0
  36 000c 00       		.byte	0
  37 000d 00       		.byte	0
  38              		.global	usbActivityCounter
  39 000e 0000     		.bss
  40              		.type	usbActivityCounter, %object
  41              		.size	usbActivityCounter, 1
  42              	usbActivityCounter:
  43 0000 00       		.space	1
  44              		.global	csButtStates
  45              		.type	csButtStates, %object
  46              		.size	csButtStates, 1
  47              	csButtStates:
  48 0001 00       		.space	1
  49              		.global	csButtStatesOld
  50              		.type	csButtStatesOld, %object
  51              		.size	csButtStatesOld, 1
  52              	csButtStatesOld:
  53 0002 00       		.space	1
  54              		.global	csButtChange
  55              		.type	csButtChange, %object
  56              		.size	csButtChange, 1
  57              	csButtChange:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 2


  58 0003 00       		.space	1
  59              		.global	inqFlagsOld
  60              		.type	inqFlagsOld, %object
  61              		.size	inqFlagsOld, 1
  62              	inqFlagsOld:
  63 0004 00       		.space	1
  64              		.section	.text.SleepIsr,"ax",%progbits
  65              		.align	2
  66              		.global	SleepIsr
  67              		.thumb
  68              		.thumb_func
  69              		.type	SleepIsr, %function
  70              	SleepIsr:
  71              	.LFB63:
  72              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 1.0
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This example project demonstrates the MIDI interface device operation.  The 
   8:main.c        **** *  project enumerates as a USB Audio Device with the MIDI feature and does not 
   9:main.c        **** *  require additional drivers. The main goal of the USB MIDI interface is to 
  10:main.c        **** *  transfer and convert MIDI data between external MIDI devices that use the 
  11:main.c        **** *  UART interface, and a PC through the USB bus.			
  12:main.c        **** *   
  13:main.c        **** * Related Document:
  14:main.c        **** *  Universal Serial Bus Specification Revision 2.0 
  15:main.c        **** *  Universal Serial Bus Device Class Definition for MIDI Devices Release 1.0
  16:main.c        **** *  MIDI 1.0 Detailed Specification Document Version 4.2
  17:main.c        **** *
  18:main.c        **** ********************************************************************************
  19:main.c        **** * Copyright 2012-2015, Cypress Semiconductor Corporation. All rights reserved.
  20:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  21:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  22:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  23:main.c        **** * accompanying the software package from which you obtained this software.
  24:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  25:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  26:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  27:main.c        **** *******************************************************************************/
  28:main.c        **** 
  29:main.c        **** #include <project.h>
  30:main.c        **** 
  31:main.c        **** #define BUTT1	                (0x01u)
  32:main.c        **** #define BUTT2	                (0x02u)
  33:main.c        **** 
  34:main.c        **** #define DEVICE                  (0u)
  35:main.c        **** #define MIDI_MSG_SIZE           (4u)
  36:main.c        **** 
  37:main.c        **** /*MIDI Message Fields */
  38:main.c        **** #define MIDI_MSG_TYPE           (0u)
  39:main.c        **** #define MIDI_NOTE_NUMBER        (1u)
  40:main.c        **** #define MIDI_NOTE_VELOCITY      (2u)
  41:main.c        **** 
  42:main.c        **** /* MIDI Notes*/
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 3


  43:main.c        **** #define NOTE_72                 (72u)
  44:main.c        **** #define NOTE_76                 (76u)
  45:main.c        **** 
  46:main.c        **** /* MIDI Notes Velocity*/
  47:main.c        **** #define VOLUME_OFF              (0u)
  48:main.c        **** #define VOLUME_ON               (100u)
  49:main.c        **** 
  50:main.c        **** #define USB_SUSPEND_TIMEOUT     (2u)
  51:main.c        **** 
  52:main.c        **** /* Identity Reply message */
  53:main.c        **** const uint8 CYCODE MIDI_IDENTITY_REPLY[] = {
  54:main.c        ****     0xF0u,      /* SysEx */
  55:main.c        ****     0x7Eu,      /* Non-real time */
  56:main.c        ****     0x7Fu,      /* ID of target device (7F - "All Call") */
  57:main.c        ****     0x06u,      /* Sub-ID#1 - General Information */
  58:main.c        ****     0x02u,      /* Sub-ID#2 - Identity Reply */
  59:main.c        ****     0x7Du,      /* Manufacturer's ID: 7D - Educational Use */
  60:main.c        ****     0xB4u, 0x04u,               /* Family code */
  61:main.c        ****     0x32u, 0xD2u,               /* Model number */
  62:main.c        ****     0x01u, 0x00u, 0x00u, 0x00u, /* Version number */
  63:main.c        ****     /*0xF7         End of SysEx automatically appended */
  64:main.c        **** };
  65:main.c        **** 
  66:main.c        **** /* Need for Identity Reply message */
  67:main.c        **** extern volatile uint8 USB_MIDI1_InqFlags;
  68:main.c        **** extern volatile uint8 USB_MIDI2_InqFlags;
  69:main.c        **** 
  70:main.c        **** volatile uint8 usbActivityCounter = 0u;
  71:main.c        **** 
  72:main.c        **** uint8 csButtStates = 0u;
  73:main.c        **** uint8 csButtStatesOld = 0u;
  74:main.c        **** uint8 csButtChange = 0u;
  75:main.c        **** uint8 inqFlagsOld = 0u;
  76:main.c        **** 
  77:main.c        **** 
  78:main.c        **** /*******************************************************************************
  79:main.c        **** * Function Name: SleepIsr
  80:main.c        **** ********************************************************************************
  81:main.c        **** * Summary:
  82:main.c        **** *  The sleep interrupt-service-routine used to determine a sleep condition.
  83:main.c        **** *  The device goes into the Suspend state when there is a constant Idle 
  84:main.c        **** *  state on its upstream-facing bus-lines for more than 3.0 ms. 
  85:main.c        **** *  The device must be suspended drawing only suspend current from the 
  86:main.c        **** *  bus after no more than 10 ms of the bus inactivity on all its ports.
  87:main.c        **** *  This ISR is run each 4 ms, so after a second turn without the USB activity,  
  88:main.c        **** *  the device should be suspended.
  89:main.c        **** *
  90:main.c        **** *******************************************************************************/
  91:main.c        **** CY_ISR(SleepIsr)
  92:main.c        **** {
  73              		.loc 1 92 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 1, uses_anonymous_args = 0
  77 0000 80B5     		push	{r7, lr}
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 7, -8
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 4


  80              		.cfi_offset 14, -4
  81 0002 00AF     		add	r7, sp, #0
  82              		.cfi_def_cfa_register 7
  93:main.c        ****     /* Check USB activity */
  94:main.c        ****     if(0u != USB_CheckActivity()) 
  83              		.loc 1 94 0
  84 0004 FFF7FEFF 		bl	USB_CheckActivity
  85 0008 0346     		mov	r3, r0
  86 000a 002B     		cmp	r3, #0
  87 000c 03D0     		beq	.L2
  95:main.c        ****     {
  96:main.c        ****         usbActivityCounter = 0u;
  88              		.loc 1 96 0
  89 000e 074B     		ldr	r3, .L4
  90 0010 0022     		movs	r2, #0
  91 0012 1A70     		strb	r2, [r3]
  92 0014 06E0     		b	.L3
  93              	.L2:
  97:main.c        ****     } 
  98:main.c        ****     else 
  99:main.c        ****     {
 100:main.c        ****         usbActivityCounter++;
  94              		.loc 1 100 0
  95 0016 054B     		ldr	r3, .L4
  96 0018 1B78     		ldrb	r3, [r3]
  97 001a DBB2     		uxtb	r3, r3
  98 001c 0133     		adds	r3, r3, #1
  99 001e DAB2     		uxtb	r2, r3
 100 0020 024B     		ldr	r3, .L4
 101 0022 1A70     		strb	r2, [r3]
 102              	.L3:
 101:main.c        ****     }
 102:main.c        ****     /* Clear Pending Interrupt */
 103:main.c        ****     SleepTimer_GetStatus();
 103              		.loc 1 103 0
 104 0024 FFF7FEFF 		bl	SleepTimer_GetStatus
 104:main.c        **** }
 105              		.loc 1 104 0
 106 0028 80BD     		pop	{r7, pc}
 107              	.L5:
 108 002a 00BF     		.align	2
 109              	.L4:
 110 002c 00000000 		.word	usbActivityCounter
 111              		.cfi_endproc
 112              	.LFE63:
 113              		.size	SleepIsr, .-SleepIsr
 114              		.section	.text.main,"ax",%progbits
 115              		.align	2
 116              		.global	main
 117              		.thumb
 118              		.thumb_func
 119              		.type	main, %function
 120              	main:
 121              	.LFB64:
 105:main.c        **** 
 106:main.c        **** 
 107:main.c        **** /*******************************************************************************
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 5


 108:main.c        **** * Function Name: main
 109:main.c        **** ********************************************************************************
 110:main.c        **** * Summary:
 111:main.c        **** *       1. Starts the USBFS device and waits for enumaration.
 112:main.c        **** *
 113:main.c        **** *******************************************************************************/
 114:main.c        **** int main()
 115:main.c        **** {
 122              		.loc 1 115 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 8
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0000 80B5     		push	{r7, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 82B0     		sub	sp, sp, #8
 131              		.cfi_def_cfa_offset 16
 132 0004 00AF     		add	r7, sp, #0
 133              		.cfi_def_cfa_register 7
 116:main.c        ****     uint8 midiMsg[MIDI_MSG_SIZE];    
 117:main.c        **** 
 118:main.c        ****     /* Enable Global Interrupts */
 119:main.c        ****     CyGlobalIntEnable;
 134              		.loc 1 119 0
 135              	@ 119 "main.c" 1
 136 0006 62B6     		CPSIE   i
 137              	@ 0 "" 2
 120:main.c        **** 
 121:main.c        ****     /* Start USBFS device 0 with VDDD operation */
 122:main.c        ****     USB_Start(DEVICE, USB_DWR_VDDD_OPERATION); 
 138              		.loc 1 122 0
 139              		.thumb
 140 0008 0020     		movs	r0, #0
 141 000a 0221     		movs	r1, #2
 142 000c FFF7FEFF 		bl	USB_Start
 143              	.L24:
 123:main.c        **** 
 124:main.c        ****     while(1u)
 125:main.c        ****     {
 126:main.c        ****         /* Host can send double SET_INTERFACE request */
 127:main.c        ****         if(0u != USB_IsConfigurationChanged())
 144              		.loc 1 127 0
 145 0010 FFF7FEFF 		bl	USB_IsConfigurationChanged
 146 0014 0346     		mov	r3, r0
 147 0016 002B     		cmp	r3, #0
 148 0018 11D0     		beq	.L7
 128:main.c        ****         {
 129:main.c        ****             /* Initialize IN endpoints when device configured */
 130:main.c        ****             if(0u != USB_GetConfiguration())   
 149              		.loc 1 130 0
 150 001a FFF7FEFF 		bl	USB_GetConfiguration
 151 001e 0346     		mov	r3, r0
 152 0020 002B     		cmp	r3, #0
 153 0022 0AD0     		beq	.L8
 131:main.c        ****             {
 132:main.c        ****                 /* Power ON CY8CKIT-044 board */
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 6


 133:main.c        ****                 MIDI_PWR_Write(0u); 
 154              		.loc 1 133 0
 155 0024 0020     		movs	r0, #0
 156 0026 FFF7FEFF 		bl	MIDI_PWR_Write
 134:main.c        ****                 
 135:main.c        ****                 /* Start ISR to determine sleep condition */		
 136:main.c        ****                 Sleep_isr_StartEx(SleepIsr);
 157              		.loc 1 136 0
 158 002a 7148     		ldr	r0, .L25
 159 002c FFF7FEFF 		bl	Sleep_isr_StartEx
 137:main.c        ****                 
 138:main.c        ****                 /* Start SleepTimer's operation */
 139:main.c        ****                 SleepTimer_Start();
 160              		.loc 1 139 0
 161 0030 FFF7FEFF 		bl	SleepTimer_Start
 140:main.c        ****                 
 141:main.c        ****             	/* Enable output endpoint */
 142:main.c        ****                 USB_MIDI_Init();
 162              		.loc 1 142 0
 163 0034 FFF7FEFF 		bl	USB_MIDI_Init
 164 0038 01E0     		b	.L7
 165              	.L8:
 143:main.c        ****             }
 144:main.c        ****             else
 145:main.c        ****             {
 146:main.c        ****                 SleepTimer_Stop();
 166              		.loc 1 146 0
 167 003a FFF7FEFF 		bl	SleepTimer_Stop
 168              	.L7:
 147:main.c        ****             }    
 148:main.c        ****         }        
 149:main.c        ****         
 150:main.c        ****         /* Service USB MIDI when device is configured */
 151:main.c        ****         if(0u != USB_GetConfiguration())    
 169              		.loc 1 151 0
 170 003e FFF7FEFF 		bl	USB_GetConfiguration
 171 0042 0346     		mov	r3, r0
 172 0044 002B     		cmp	r3, #0
 173 0046 00F0D180 		beq	.L9
 152:main.c        ****         {
 153:main.c        ****             /* Call this API from UART RX ISR for Auto DMA mode */
 154:main.c        ****             #if(!USB_EP_MANAGEMENT_DMA_AUTO) 
 155:main.c        ****                 USB_MIDI_IN_Service();
 174              		.loc 1 155 0
 175 004a FFF7FEFF 		bl	USB_MIDI_IN_Service
 156:main.c        ****             #endif
 157:main.c        ****             /* In Manual EP Memory Management mode OUT_EP_Service() 
 158:main.c        ****             *  may have to be called from main foreground or from OUT EP ISR
 159:main.c        ****             */
 160:main.c        ****             #if(!USB_EP_MANAGEMENT_DMA_AUTO) 
 161:main.c        ****                 USB_MIDI_OUT_Service();
 176              		.loc 1 161 0
 177 004e FFF7FEFF 		bl	USB_MIDI_OUT_Service
 162:main.c        ****             #endif
 163:main.c        **** 
 164:main.c        ****             /* Sending Identity Reply Universal System Exclusive message 
 165:main.c        ****              * back to computer */
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 7


 166:main.c        ****             if(0u != (USB_MIDI1_InqFlags & USB_INQ_IDENTITY_REQ_FLAG))
 178              		.loc 1 166 0
 179 0052 684B     		ldr	r3, .L25+4
 180 0054 1B78     		ldrb	r3, [r3]
 181 0056 DBB2     		uxtb	r3, r3
 182 0058 03F00203 		and	r3, r3, #2
 183 005c 002B     		cmp	r3, #0
 184 005e 0CD0     		beq	.L10
 167:main.c        ****             {
 168:main.c        ****                 USB_PutUsbMidiIn(sizeof(MIDI_IDENTITY_REPLY), \
 185              		.loc 1 168 0
 186 0060 0E20     		movs	r0, #14
 187 0062 6549     		ldr	r1, .L25+8
 188 0064 0022     		movs	r2, #0
 189 0066 FFF7FEFF 		bl	USB_PutUsbMidiIn
 169:main.c        ****                             (uint8 *)MIDI_IDENTITY_REPLY, USB_MIDI_CABLE_00);
 170:main.c        ****                 USB_MIDI1_InqFlags &= ~USB_INQ_IDENTITY_REQ_FLAG;
 190              		.loc 1 170 0
 191 006a 624B     		ldr	r3, .L25+4
 192 006c 1B78     		ldrb	r3, [r3]
 193 006e DBB2     		uxtb	r3, r3
 194 0070 23F00203 		bic	r3, r3, #2
 195 0074 DAB2     		uxtb	r2, r3
 196 0076 5F4B     		ldr	r3, .L25+4
 197 0078 1A70     		strb	r2, [r3]
 198              	.L10:
 171:main.c        ****             }
 172:main.c        ****             #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 173:main.c        ****                 if(0u != (USB_MIDI2_InqFlags & USB_INQ_IDENTITY_REQ_FLAG))
 199              		.loc 1 173 0
 200 007a 604B     		ldr	r3, .L25+12
 201 007c 1B78     		ldrb	r3, [r3]
 202 007e DBB2     		uxtb	r3, r3
 203 0080 03F00203 		and	r3, r3, #2
 204 0084 002B     		cmp	r3, #0
 205 0086 0CD0     		beq	.L11
 174:main.c        ****                 {
 175:main.c        ****                     USB_PutUsbMidiIn(sizeof(MIDI_IDENTITY_REPLY), \
 206              		.loc 1 175 0
 207 0088 0E20     		movs	r0, #14
 208 008a 5B49     		ldr	r1, .L25+8
 209 008c 1022     		movs	r2, #16
 210 008e FFF7FEFF 		bl	USB_PutUsbMidiIn
 176:main.c        ****                             (uint8 *)MIDI_IDENTITY_REPLY, USB_MIDI_CABLE_01);
 177:main.c        ****                     USB_MIDI2_InqFlags &= ~USB_INQ_IDENTITY_REQ_FLAG;
 211              		.loc 1 177 0
 212 0092 5A4B     		ldr	r3, .L25+12
 213 0094 1B78     		ldrb	r3, [r3]
 214 0096 DBB2     		uxtb	r3, r3
 215 0098 23F00203 		bic	r3, r3, #2
 216 009c DAB2     		uxtb	r2, r3
 217 009e 574B     		ldr	r3, .L25+12
 218 00a0 1A70     		strb	r2, [r3]
 219              	.L11:
 178:main.c        ****                 }
 179:main.c        ****             #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 180:main.c        ****             
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 8


 181:main.c        ****             /* Service Keys */
 182:main.c        ****     		if (0u == SW1_Read()) 
 220              		.loc 1 182 0
 221 00a2 FFF7FEFF 		bl	SW1_Read
 222 00a6 0346     		mov	r3, r0
 223 00a8 002B     		cmp	r3, #0
 224 00aa 07D1     		bne	.L12
 183:main.c        ****             {
 184:main.c        ****                 csButtStates |= BUTT1;
 225              		.loc 1 184 0
 226 00ac 544B     		ldr	r3, .L25+16
 227 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 228 00b0 43F00103 		orr	r3, r3, #1
 229 00b4 DAB2     		uxtb	r2, r3
 230 00b6 524B     		ldr	r3, .L25+16
 231 00b8 1A70     		strb	r2, [r3]
 232 00ba 06E0     		b	.L13
 233              	.L12:
 185:main.c        ****             }
 186:main.c        ****             else
 187:main.c        ****             {
 188:main.c        ****                 csButtStates &= ~BUTT1;
 234              		.loc 1 188 0
 235 00bc 504B     		ldr	r3, .L25+16
 236 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 237 00c0 23F00103 		bic	r3, r3, #1
 238 00c4 DAB2     		uxtb	r2, r3
 239 00c6 4E4B     		ldr	r3, .L25+16
 240 00c8 1A70     		strb	r2, [r3]
 241              	.L13:
 189:main.c        ****             }
 190:main.c        ****     		if (0u == SW2_Read()) 
 242              		.loc 1 190 0
 243 00ca FFF7FEFF 		bl	SW2_Read
 244 00ce 0346     		mov	r3, r0
 245 00d0 002B     		cmp	r3, #0
 246 00d2 07D1     		bne	.L14
 191:main.c        ****             {
 192:main.c        ****                 csButtStates |= BUTT2;
 247              		.loc 1 192 0
 248 00d4 4A4B     		ldr	r3, .L25+16
 249 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 250 00d8 43F00203 		orr	r3, r3, #2
 251 00dc DAB2     		uxtb	r2, r3
 252 00de 484B     		ldr	r3, .L25+16
 253 00e0 1A70     		strb	r2, [r3]
 254 00e2 06E0     		b	.L15
 255              	.L14:
 193:main.c        ****             }
 194:main.c        ****             else
 195:main.c        ****             {
 196:main.c        ****                 csButtStates &= ~BUTT2;
 256              		.loc 1 196 0
 257 00e4 464B     		ldr	r3, .L25+16
 258 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 259 00e8 23F00203 		bic	r3, r3, #2
 260 00ec DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 9


 261 00ee 444B     		ldr	r3, .L25+16
 262 00f0 1A70     		strb	r2, [r3]
 263              	.L15:
 197:main.c        ****             }
 198:main.c        ****             /* Process any button change */
 199:main.c        ****     		if (0u != (csButtChange = csButtStates ^ csButtStatesOld)) 
 264              		.loc 1 199 0
 265 00f2 434B     		ldr	r3, .L25+16
 266 00f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 267 00f6 434B     		ldr	r3, .L25+20
 268 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 269 00fa 5340     		eors	r3, r3, r2
 270 00fc DAB2     		uxtb	r2, r3
 271 00fe 424B     		ldr	r3, .L25+24
 272 0100 1A70     		strb	r2, [r3]
 273 0102 414B     		ldr	r3, .L25+24
 274 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 275 0106 002B     		cmp	r3, #0
 276 0108 4CD0     		beq	.L16
 200:main.c        ****             {
 201:main.c        ****     			csButtStatesOld = csButtStates;
 277              		.loc 1 201 0
 278 010a 3D4B     		ldr	r3, .L25+16
 279 010c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 280 010e 3D4B     		ldr	r3, .L25+20
 281 0110 1A70     		strb	r2, [r3]
 202:main.c        **** 
 203:main.c        ****     			/* All buttons are mapped to Note-On/Off messages */
 204:main.c        ****     			midiMsg[MIDI_MSG_TYPE] = USB_MIDI_NOTE_ON;
 282              		.loc 1 204 0
 283 0112 9023     		movs	r3, #144
 284 0114 3B71     		strb	r3, [r7, #4]
 205:main.c        ****     			
 206:main.c        ****     			/* Button 1 */
 207:main.c        ****     			if (0u != (csButtChange & BUTT1)) 
 285              		.loc 1 207 0
 286 0116 3C4B     		ldr	r3, .L25+24
 287 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 288 011a 03F00103 		and	r3, r3, #1
 289 011e 002B     		cmp	r3, #0
 290 0120 12D0     		beq	.L17
 208:main.c        ****                 {
 209:main.c        ****     				/* Button determines note number */			
 210:main.c        ****     				midiMsg[MIDI_NOTE_NUMBER] = NOTE_72;
 291              		.loc 1 210 0
 292 0122 4823     		movs	r3, #72
 293 0124 7B71     		strb	r3, [r7, #5]
 211:main.c        ****     				if (0u != (csButtStates & BUTT1))
 294              		.loc 1 211 0
 295 0126 364B     		ldr	r3, .L25+16
 296 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 297 012a 03F00103 		and	r3, r3, #1
 298 012e 002B     		cmp	r3, #0
 299 0130 02D0     		beq	.L18
 212:main.c        ****                     {
 213:main.c        ****                         /* Note On */
 214:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_ON;		
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 10


 300              		.loc 1 214 0
 301 0132 6423     		movs	r3, #100
 302 0134 BB71     		strb	r3, [r7, #6]
 303 0136 01E0     		b	.L19
 304              	.L18:
 215:main.c        ****                     }
 216:main.c        ****     				else
 217:main.c        ****                     {
 218:main.c        ****                         /* Note Off */
 219:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_OFF;			
 305              		.loc 1 219 0
 306 0138 0023     		movs	r3, #0
 307 013a BB71     		strb	r3, [r7, #6]
 308              	.L19:
 220:main.c        ****                     }    
 221:main.c        ****         			/* Put MIDI Note-On/Off message into input endpoint */
 222:main.c        ****                     USB_PutUsbMidiIn(USB_3BYTE_COMMON, midiMsg, USB_MIDI_CABLE_00);
 309              		.loc 1 222 0
 310 013c 3B1D     		adds	r3, r7, #4
 311 013e 0320     		movs	r0, #3
 312 0140 1946     		mov	r1, r3
 313 0142 0022     		movs	r2, #0
 314 0144 FFF7FEFF 		bl	USB_PutUsbMidiIn
 315              	.L17:
 223:main.c        ****     			}
 224:main.c        **** 
 225:main.c        ****     			/* Button 2 */
 226:main.c        ****     			if (0u != (csButtChange & BUTT2))
 316              		.loc 1 226 0
 317 0148 2F4B     		ldr	r3, .L25+24
 318 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 319 014c 03F00203 		and	r3, r3, #2
 320 0150 002B     		cmp	r3, #0
 321 0152 27D0     		beq	.L16
 227:main.c        ****                 {
 228:main.c        ****     				/* Button determines note number */			
 229:main.c        ****     				midiMsg[MIDI_NOTE_NUMBER] = NOTE_76;
 322              		.loc 1 229 0
 323 0154 4C23     		movs	r3, #76
 324 0156 7B71     		strb	r3, [r7, #5]
 230:main.c        ****     				if (0u != (csButtStates & BUTT2))
 325              		.loc 1 230 0
 326 0158 294B     		ldr	r3, .L25+16
 327 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 328 015c 03F00203 		and	r3, r3, #2
 329 0160 002B     		cmp	r3, #0
 330 0162 02D0     		beq	.L20
 231:main.c        ****                     {
 232:main.c        ****                         /* Note On */
 233:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_ON;  
 331              		.loc 1 233 0
 332 0164 6423     		movs	r3, #100
 333 0166 BB71     		strb	r3, [r7, #6]
 334 0168 01E0     		b	.L21
 335              	.L20:
 234:main.c        ****                     }
 235:main.c        ****     				else
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 11


 236:main.c        ****                     {
 237:main.c        ****                         /* Note Off */
 238:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_OFF; 
 336              		.loc 1 238 0
 337 016a 0023     		movs	r3, #0
 338 016c BB71     		strb	r3, [r7, #6]
 339              	.L21:
 239:main.c        ****                     }    
 240:main.c        ****         			/* Put MIDI Note-On/Off message into input endpoint */
 241:main.c        ****     				USB_PutUsbMidiIn(USB_3BYTE_COMMON, midiMsg, USB_MIDI_CABLE_00);
 340              		.loc 1 241 0
 341 016e 3B1D     		adds	r3, r7, #4
 342 0170 0320     		movs	r0, #3
 343 0172 1946     		mov	r1, r3
 344 0174 0022     		movs	r2, #0
 345 0176 FFF7FEFF 		bl	USB_PutUsbMidiIn
 242:main.c        ****                     /* Second Note message */
 243:main.c        ****                     midiMsg[MIDI_MSG_TYPE] = USB_MIDI_NOTE_ON;
 346              		.loc 1 243 0
 347 017a 9023     		movs	r3, #144
 348 017c 3B71     		strb	r3, [r7, #4]
 244:main.c        ****                 	midiMsg[MIDI_NOTE_NUMBER] = NOTE_72;
 349              		.loc 1 244 0
 350 017e 4823     		movs	r3, #72
 351 0180 7B71     		strb	r3, [r7, #5]
 245:main.c        ****                     if (0u != (csButtStates & BUTT2))
 352              		.loc 1 245 0
 353 0182 1F4B     		ldr	r3, .L25+16
 354 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 355 0186 03F00203 		and	r3, r3, #2
 356 018a 002B     		cmp	r3, #0
 357 018c 02D0     		beq	.L22
 246:main.c        ****                     {
 247:main.c        ****                         /* Note On */
 248:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_ON;		    
 358              		.loc 1 248 0
 359 018e 6423     		movs	r3, #100
 360 0190 BB71     		strb	r3, [r7, #6]
 361 0192 01E0     		b	.L23
 362              	.L22:
 249:main.c        ****                     }
 250:main.c        ****     				else
 251:main.c        ****                     {
 252:main.c        ****                         /* Note Off */
 253:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_OFF;			
 363              		.loc 1 253 0
 364 0194 0023     		movs	r3, #0
 365 0196 BB71     		strb	r3, [r7, #6]
 366              	.L23:
 254:main.c        ****                     }    
 255:main.c        ****         			/* Put MIDI Note-On/Off message into input endpoint */
 256:main.c        ****                     USB_PutUsbMidiIn(USB_3BYTE_COMMON, midiMsg, USB_MIDI_CABLE_00);
 367              		.loc 1 256 0
 368 0198 3B1D     		adds	r3, r7, #4
 369 019a 0320     		movs	r0, #3
 370 019c 1946     		mov	r1, r3
 371 019e 0022     		movs	r2, #0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 12


 372 01a0 FFF7FEFF 		bl	USB_PutUsbMidiIn
 373              	.L16:
 257:main.c        ****     			}
 258:main.c        ****                 #if(USB_EP_MANAGEMENT_DMA_AUTO) 
 259:main.c        ****                    #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 260:main.c        ****                         MIDI1_UART_DisableRxInt();
 261:main.c        ****                         #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 262:main.c        ****                             MIDI2_UART_DisableRxInt();
 263:main.c        ****                         #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 264:main.c        ****                     #endif /* End USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF */            
 265:main.c        ****                     USB_MIDI_IN_Service();
 266:main.c        ****                     #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 267:main.c        ****                         MIDI1_UART_EnableRxInt();
 268:main.c        ****                         #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 269:main.c        ****                             MIDI2_UART_EnableRxInt();
 270:main.c        ****                         #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 271:main.c        ****                     #endif /* End USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF */                
 272:main.c        ****                 #endif
 273:main.c        ****     		}
 274:main.c        ****         
 275:main.c        ****             /* Check if host requested USB Suspend */
 276:main.c        ****             if( usbActivityCounter >= USB_SUSPEND_TIMEOUT ) 
 374              		.loc 1 276 0
 375 01a4 194B     		ldr	r3, .L25+28
 376 01a6 1B78     		ldrb	r3, [r3]
 377 01a8 DBB2     		uxtb	r3, r3
 378 01aa 012B     		cmp	r3, #1
 379 01ac 1ED9     		bls	.L9
 277:main.c        ****             {
 278:main.c        ****                 MIDI1_UART_Sleep();
 380              		.loc 1 278 0
 381 01ae FFF7FEFF 		bl	MIDI1_UART_Sleep
 279:main.c        ****                 MIDI2_UART_Sleep();
 382              		.loc 1 279 0
 383 01b2 FFF7FEFF 		bl	MIDI2_UART_Sleep
 280:main.c        ****                 
 281:main.c        ****                 /* Power OFF CY8CKIT-044 board */
 282:main.c        ****                 MIDI_PWR_Write(1u);     
 384              		.loc 1 282 0
 385 01b6 0120     		movs	r0, #1
 386 01b8 FFF7FEFF 		bl	MIDI_PWR_Write
 283:main.c        ****                 
 284:main.c        ****                 /***************************************************************
 285:main.c        ****                 * Disable USBFS block and set DP Interrupt for wake-up 
 286:main.c        ****                 * from sleep mode. 
 287:main.c        ****                 ***************************************************************/
 288:main.c        ****                 USB_Suspend(); 
 387              		.loc 1 288 0
 388 01bc FFF7FEFF 		bl	USB_Suspend
 289:main.c        ****                 /* Prepares system clocks for sleep mode */
 290:main.c        ****                 CyPmSaveClocks();
 389              		.loc 1 290 0
 390 01c0 FFF7FEFF 		bl	CyPmSaveClocks
 291:main.c        ****                 /***************************************************************
 292:main.c        ****                 * Switch to the Sleep Mode for the PSoC 3 or PSoC 5LP devices:
 293:main.c        ****                 *  - PM_SLEEP_TIME_NONE: wakeup time is defined by PICU source
 294:main.c        ****                 *  - PM_SLEEP_SRC_PICU: PICU wakeup source 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 13


 295:main.c        ****                 ***************************************************************/
 296:main.c        ****                 CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_PICU);
 391              		.loc 1 296 0
 392 01c4 0020     		movs	r0, #0
 393 01c6 4021     		movs	r1, #64
 394 01c8 FFF7FEFF 		bl	CyPmSleep
 297:main.c        ****                 /* Restore clock configuration */
 298:main.c        ****                 CyPmRestoreClocks();
 395              		.loc 1 298 0
 396 01cc FFF7FEFF 		bl	CyPmRestoreClocks
 299:main.c        ****                 /* Enable USBFS block after power-down mode */
 300:main.c        ****                 USB_Resume();
 397              		.loc 1 300 0
 398 01d0 FFF7FEFF 		bl	USB_Resume
 301:main.c        ****                 
 302:main.c        ****                 /* Enable output endpoint */
 303:main.c        ****                 USB_MIDI_Init();
 399              		.loc 1 303 0
 400 01d4 FFF7FEFF 		bl	USB_MIDI_Init
 304:main.c        ****                 
 305:main.c        ****                 /* Power ON CY8CKIT-044 board */
 306:main.c        ****                 MIDI_PWR_Write(0u);
 401              		.loc 1 306 0
 402 01d8 0020     		movs	r0, #0
 403 01da FFF7FEFF 		bl	MIDI_PWR_Write
 307:main.c        ****                 
 308:main.c        ****                 MIDI1_UART_Wakeup();
 404              		.loc 1 308 0
 405 01de FFF7FEFF 		bl	MIDI1_UART_Wakeup
 309:main.c        ****                 MIDI2_UART_Wakeup();
 406              		.loc 1 309 0
 407 01e2 FFF7FEFF 		bl	MIDI2_UART_Wakeup
 310:main.c        ****                 usbActivityCounter = 0u; /* Re-init USB Activity Counter*/
 408              		.loc 1 310 0
 409 01e6 094B     		ldr	r3, .L25+28
 410 01e8 0022     		movs	r2, #0
 411 01ea 1A70     		strb	r2, [r3]
 412              	.L9:
 311:main.c        ****             }
 312:main.c        ****         }
 313:main.c        ****     }
 413              		.loc 1 313 0
 414 01ec 10E7     		b	.L24
 415              	.L26:
 416 01ee 00BF     		.align	2
 417              	.L25:
 418 01f0 00000000 		.word	SleepIsr
 419 01f4 00000000 		.word	USB_MIDI1_InqFlags
 420 01f8 00000000 		.word	MIDI_IDENTITY_REPLY
 421 01fc 00000000 		.word	USB_MIDI2_InqFlags
 422 0200 00000000 		.word	csButtStates
 423 0204 00000000 		.word	csButtStatesOld
 424 0208 00000000 		.word	csButtChange
 425 020c 00000000 		.word	usbActivityCounter
 426              		.cfi_endproc
 427              	.LFE64:
 428              		.size	main, .-main
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 14


 429              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 430              		.align	2
 431              		.global	USB_callbackLocalMidiEvent
 432              		.thumb
 433              		.thumb_func
 434              		.type	USB_callbackLocalMidiEvent, %function
 435              	USB_callbackLocalMidiEvent:
 436              	.LFB65:
 314:main.c        **** }
 315:main.c        **** 
 316:main.c        **** 
 317:main.c        **** /*******************************************************************************
 318:main.c        **** * Function Name: USB_callbackLocalMidiEvent
 319:main.c        **** ********************************************************************************
 320:main.c        **** * Summary: Local processing of the USB MIDI out-events.
 321:main.c        **** *
 322:main.c        **** *******************************************************************************/
 323:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
 324:main.c        **** {
 437              		.loc 1 324 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 8
 440              		@ frame_needed = 1, uses_anonymous_args = 0
 441 0000 80B5     		push	{r7, lr}
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 7, -8
 444              		.cfi_offset 14, -4
 445 0002 82B0     		sub	sp, sp, #8
 446              		.cfi_def_cfa_offset 16
 447 0004 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 449 0006 0346     		mov	r3, r0
 450 0008 3960     		str	r1, [r7]
 451 000a FB71     		strb	r3, [r7, #7]
 325:main.c        ****     /* Support General System On/Off Message. */
 326:main.c        ****     if((0u == (USB_MIDI1_InqFlags & USB_INQ_SYSEX_FLAG)) \
 452              		.loc 1 326 0
 453 000c B74B     		ldr	r3, .L88
 454 000e 1B78     		ldrb	r3, [r3]
 455 0010 DBB2     		uxtb	r3, r3
 456 0012 03F00103 		and	r3, r3, #1
 457 0016 002B     		cmp	r3, #0
 458 0018 1AD1     		bne	.L28
 327:main.c        ****             && (0u != (inqFlagsOld & USB_INQ_SYSEX_FLAG)))
 459              		.loc 1 327 0
 460 001a B54B     		ldr	r3, .L88+4
 461 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 462 001e 03F00103 		and	r3, r3, #1
 463 0022 002B     		cmp	r3, #0
 464 0024 14D0     		beq	.L28
 328:main.c        ****     {
 329:main.c        ****         if(midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX_GEN_MESSAGE)
 465              		.loc 1 329 0
 466 0026 3B68     		ldr	r3, [r7]
 467 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 468 002a 092B     		cmp	r3, #9
 469 002c 10D1     		bne	.L28
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 15


 330:main.c        ****         {
 331:main.c        ****             if(midiMsg[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_SYSTEM_ON)
 470              		.loc 1 331 0
 471 002e 3B68     		ldr	r3, [r7]
 472 0030 0133     		adds	r3, r3, #1
 473 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 474 0034 012B     		cmp	r3, #1
 475 0036 03D1     		bne	.L29
 332:main.c        ****             {
 333:main.c        ****                 MIDI_PWR_Write(0u); /* Power ON */
 476              		.loc 1 333 0
 477 0038 0020     		movs	r0, #0
 478 003a FFF7FEFF 		bl	MIDI_PWR_Write
 479 003e 07E0     		b	.L28
 480              	.L29:
 334:main.c        ****             }
 335:main.c        ****             else if(midiMsg[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_SYSTEM_OFF)
 481              		.loc 1 335 0
 482 0040 3B68     		ldr	r3, [r7]
 483 0042 0133     		adds	r3, r3, #1
 484 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 485 0046 022B     		cmp	r3, #2
 486 0048 02D1     		bne	.L28
 336:main.c        ****             {
 337:main.c        ****                 MIDI_PWR_Write(1u); /* Power OFF */
 487              		.loc 1 337 0
 488 004a 0120     		movs	r0, #1
 489 004c FFF7FEFF 		bl	MIDI_PWR_Write
 490              	.L28:
 338:main.c        ****             }
 339:main.c        ****         }
 340:main.c        ****     }
 341:main.c        ****     /***************TAG: Start of my code****************************************/
 342:main.c        ****     switch (midiMsg[USB_EVENT_BYTE0])  //TAG: Event type
 491              		.loc 1 342 0
 492 0050 3B68     		ldr	r3, [r7]
 493 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 494 0054 902B     		cmp	r3, #144
 495 0056 06D0     		beq	.L31
 496 0058 B02B     		cmp	r3, #176
 497 005a 00F0AD82 		beq	.L32
 498 005e 802B     		cmp	r3, #128
 499 0060 00F0C481 		beq	.L33
 500 0064 84E3     		b	.L30
 501              	.L31:
 343:main.c        **** 
 344:main.c        ****     {
 345:main.c        ****     case USB_MIDI_NOTE_ON:   //TAG: This #define assumes channel 1, should parse channel too, have 
 346:main.c        ****         if(midiMsg[USB_EVENT_BYTE2] == 0x00)  //TAG: Note On with velocity 0 should be treated like
 502              		.loc 1 346 0
 503 0066 3B68     		ldr	r3, [r7]
 504 0068 0233     		adds	r3, r3, #2
 505 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 506 006c 002B     		cmp	r3, #0
 507 006e 40F0E580 		bne	.L34
 347:main.c        ****         {
 348:main.c        ****         switch ((midiMsg[USB_EVENT_BYTE1]/*-36*/)/8) //TAG: Parse the note on messages to the appro
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 16


 508              		.loc 1 348 0
 509 0072 3B68     		ldr	r3, [r7]
 510 0074 0133     		adds	r3, r3, #1
 511 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 512 0078 DB08     		lsrs	r3, r3, #3
 513 007a DBB2     		uxtb	r3, r3
 514 007c 082B     		cmp	r3, #8
 515 007e 00F2D980 		bhi	.L35
 516 0082 01A2     		adr	r2, .L37
 517 0084 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 518              		.p2align 2
 519              	.L37:
 520 0088 AD000000 		.word	.L36+1
 521 008c D5000000 		.word	.L38+1
 522 0090 01010000 		.word	.L39+1
 523 0094 2D010000 		.word	.L40+1
 524 0098 59010000 		.word	.L41+1
 525 009c 85010000 		.word	.L42+1
 526 00a0 B1010000 		.word	.L43+1
 527 00a4 DD010000 		.word	.L44+1
 528 00a8 09020000 		.word	.L45+1
 529              		.p2align 1
 530              	.L36:
 349:main.c        ****             {
 350:main.c        ****                 case 0: 
 351:main.c        ****                 
 352:main.c        ****                    Keys_Notes_1_Write(Keys_Notes_1_Read() & ~(0x01 << midiMsg[USB_EVENT_BYTE1]));
 531              		.loc 1 352 0
 532 00ac FFF7FEFF 		bl	Keys_Notes_1_Read
 533 00b0 0346     		mov	r3, r0
 534 00b2 DAB2     		uxtb	r2, r3
 535 00b4 3B68     		ldr	r3, [r7]
 536 00b6 0133     		adds	r3, r3, #1
 537 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 538 00ba 1946     		mov	r1, r3
 539 00bc 0123     		movs	r3, #1
 540 00be 8B40     		lsls	r3, r3, r1
 541 00c0 DBB2     		uxtb	r3, r3
 542 00c2 DB43     		mvns	r3, r3
 543 00c4 DBB2     		uxtb	r3, r3
 544 00c6 1340     		ands	r3, r3, r2
 545 00c8 DBB2     		uxtb	r3, r3
 546 00ca DBB2     		uxtb	r3, r3
 547 00cc 1846     		mov	r0, r3
 548 00ce FFF7FEFF 		bl	Keys_Notes_1_Write
 353:main.c        ****                     break;
 549              		.loc 1 353 0
 550 00d2 AFE0     		b	.L35
 551              	.L38:
 354:main.c        ****                 
 355:main.c        ****                 case 1:
 356:main.c        ****                 
 357:main.c        ****                    Keys_Notes_2_Write(Keys_Notes_2_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-8))
 552              		.loc 1 357 0
 553 00d4 FFF7FEFF 		bl	Keys_Notes_2_Read
 554 00d8 0346     		mov	r3, r0
 555 00da D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 17


 556 00dc 3B68     		ldr	r3, [r7]
 557 00de 0133     		adds	r3, r3, #1
 558 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 559 00e2 083B     		subs	r3, r3, #8
 560 00e4 0122     		movs	r2, #1
 561 00e6 02FA03F3 		lsl	r3, r2, r3
 562 00ea DBB2     		uxtb	r3, r3
 563 00ec DB43     		mvns	r3, r3
 564 00ee DBB2     		uxtb	r3, r3
 565 00f0 0A46     		mov	r2, r1
 566 00f2 1340     		ands	r3, r3, r2
 567 00f4 DBB2     		uxtb	r3, r3
 568 00f6 DBB2     		uxtb	r3, r3
 569 00f8 1846     		mov	r0, r3
 570 00fa FFF7FEFF 		bl	Keys_Notes_2_Write
 358:main.c        ****                     break;
 571              		.loc 1 358 0
 572 00fe 99E0     		b	.L35
 573              	.L39:
 359:main.c        ****                 
 360:main.c        ****                 case 2:
 361:main.c        ****                 
 362:main.c        ****                    Keys_Notes_3_Write(Keys_Notes_3_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-16)
 574              		.loc 1 362 0
 575 0100 FFF7FEFF 		bl	Keys_Notes_3_Read
 576 0104 0346     		mov	r3, r0
 577 0106 D9B2     		uxtb	r1, r3
 578 0108 3B68     		ldr	r3, [r7]
 579 010a 0133     		adds	r3, r3, #1
 580 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 581 010e 103B     		subs	r3, r3, #16
 582 0110 0122     		movs	r2, #1
 583 0112 02FA03F3 		lsl	r3, r2, r3
 584 0116 DBB2     		uxtb	r3, r3
 585 0118 DB43     		mvns	r3, r3
 586 011a DBB2     		uxtb	r3, r3
 587 011c 0A46     		mov	r2, r1
 588 011e 1340     		ands	r3, r3, r2
 589 0120 DBB2     		uxtb	r3, r3
 590 0122 DBB2     		uxtb	r3, r3
 591 0124 1846     		mov	r0, r3
 592 0126 FFF7FEFF 		bl	Keys_Notes_3_Write
 363:main.c        ****                     break;
 593              		.loc 1 363 0
 594 012a 83E0     		b	.L35
 595              	.L40:
 364:main.c        ****                 
 365:main.c        ****                 case 3:
 366:main.c        ****                 
 367:main.c        ****                    Keys_Notes_4_Write(Keys_Notes_4_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-24)
 596              		.loc 1 367 0
 597 012c FFF7FEFF 		bl	Keys_Notes_4_Read
 598 0130 0346     		mov	r3, r0
 599 0132 D9B2     		uxtb	r1, r3
 600 0134 3B68     		ldr	r3, [r7]
 601 0136 0133     		adds	r3, r3, #1
 602 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 18


 603 013a 183B     		subs	r3, r3, #24
 604 013c 0122     		movs	r2, #1
 605 013e 02FA03F3 		lsl	r3, r2, r3
 606 0142 DBB2     		uxtb	r3, r3
 607 0144 DB43     		mvns	r3, r3
 608 0146 DBB2     		uxtb	r3, r3
 609 0148 0A46     		mov	r2, r1
 610 014a 1340     		ands	r3, r3, r2
 611 014c DBB2     		uxtb	r3, r3
 612 014e DBB2     		uxtb	r3, r3
 613 0150 1846     		mov	r0, r3
 614 0152 FFF7FEFF 		bl	Keys_Notes_4_Write
 368:main.c        ****                     break;
 615              		.loc 1 368 0
 616 0156 6DE0     		b	.L35
 617              	.L41:
 369:main.c        ****                 
 370:main.c        ****                 case 4:
 371:main.c        ****                 
 372:main.c        ****                    Keys_Notes_5_Write(Keys_Notes_5_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-32)
 618              		.loc 1 372 0
 619 0158 FFF7FEFF 		bl	Keys_Notes_5_Read
 620 015c 0346     		mov	r3, r0
 621 015e D9B2     		uxtb	r1, r3
 622 0160 3B68     		ldr	r3, [r7]
 623 0162 0133     		adds	r3, r3, #1
 624 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 625 0166 203B     		subs	r3, r3, #32
 626 0168 0122     		movs	r2, #1
 627 016a 02FA03F3 		lsl	r3, r2, r3
 628 016e DBB2     		uxtb	r3, r3
 629 0170 DB43     		mvns	r3, r3
 630 0172 DBB2     		uxtb	r3, r3
 631 0174 0A46     		mov	r2, r1
 632 0176 1340     		ands	r3, r3, r2
 633 0178 DBB2     		uxtb	r3, r3
 634 017a DBB2     		uxtb	r3, r3
 635 017c 1846     		mov	r0, r3
 636 017e FFF7FEFF 		bl	Keys_Notes_5_Write
 373:main.c        ****                     break;
 637              		.loc 1 373 0
 638 0182 57E0     		b	.L35
 639              	.L42:
 374:main.c        ****                                 
 375:main.c        ****                 case 5:
 376:main.c        ****                 
 377:main.c        ****                    Keys_Notes_6_Write(Keys_Notes_6_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-40)
 640              		.loc 1 377 0
 641 0184 FFF7FEFF 		bl	Keys_Notes_6_Read
 642 0188 0346     		mov	r3, r0
 643 018a D9B2     		uxtb	r1, r3
 644 018c 3B68     		ldr	r3, [r7]
 645 018e 0133     		adds	r3, r3, #1
 646 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 647 0192 283B     		subs	r3, r3, #40
 648 0194 0122     		movs	r2, #1
 649 0196 02FA03F3 		lsl	r3, r2, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 19


 650 019a DBB2     		uxtb	r3, r3
 651 019c DB43     		mvns	r3, r3
 652 019e DBB2     		uxtb	r3, r3
 653 01a0 0A46     		mov	r2, r1
 654 01a2 1340     		ands	r3, r3, r2
 655 01a4 DBB2     		uxtb	r3, r3
 656 01a6 DBB2     		uxtb	r3, r3
 657 01a8 1846     		mov	r0, r3
 658 01aa FFF7FEFF 		bl	Keys_Notes_6_Write
 378:main.c        ****                    break;     
 659              		.loc 1 378 0
 660 01ae 41E0     		b	.L35
 661              	.L43:
 379:main.c        ****                 case 6:
 380:main.c        ****                 
 381:main.c        ****                    Chords_Notes_Write(Chords_Notes_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-48)
 662              		.loc 1 381 0
 663 01b0 FFF7FEFF 		bl	Chords_Notes_Read
 664 01b4 0346     		mov	r3, r0
 665 01b6 D9B2     		uxtb	r1, r3
 666 01b8 3B68     		ldr	r3, [r7]
 667 01ba 0133     		adds	r3, r3, #1
 668 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 669 01be 303B     		subs	r3, r3, #48
 670 01c0 0122     		movs	r2, #1
 671 01c2 02FA03F3 		lsl	r3, r2, r3
 672 01c6 DBB2     		uxtb	r3, r3
 673 01c8 DB43     		mvns	r3, r3
 674 01ca DBB2     		uxtb	r3, r3
 675 01cc 0A46     		mov	r2, r1
 676 01ce 1340     		ands	r3, r3, r2
 677 01d0 DBB2     		uxtb	r3, r3
 678 01d2 DBB2     		uxtb	r3, r3
 679 01d4 1846     		mov	r0, r3
 680 01d6 FFF7FEFF 		bl	Chords_Notes_Write
 382:main.c        ****                    break;    
 681              		.loc 1 382 0
 682 01da 2BE0     		b	.L35
 683              	.L44:
 383:main.c        ****                 case 7:
 384:main.c        ****                 
 385:main.c        ****                    Chords_Bass_Notes_Write(Chords_Bass_Notes_Read() & ~(0x01 << (midiMsg[USB_EVENT_
 684              		.loc 1 385 0
 685 01dc FFF7FEFF 		bl	Chords_Bass_Notes_Read
 686 01e0 0346     		mov	r3, r0
 687 01e2 D9B2     		uxtb	r1, r3
 688 01e4 3B68     		ldr	r3, [r7]
 689 01e6 0133     		adds	r3, r3, #1
 690 01e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 691 01ea 383B     		subs	r3, r3, #56
 692 01ec 0122     		movs	r2, #1
 693 01ee 02FA03F3 		lsl	r3, r2, r3
 694 01f2 DBB2     		uxtb	r3, r3
 695 01f4 DB43     		mvns	r3, r3
 696 01f6 DBB2     		uxtb	r3, r3
 697 01f8 0A46     		mov	r2, r1
 698 01fa 1340     		ands	r3, r3, r2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 20


 699 01fc DBB2     		uxtb	r3, r3
 700 01fe DBB2     		uxtb	r3, r3
 701 0200 1846     		mov	r0, r3
 702 0202 FFF7FEFF 		bl	Chords_Bass_Notes_Write
 386:main.c        ****                    break;    
 703              		.loc 1 386 0
 704 0206 15E0     		b	.L35
 705              	.L45:
 387:main.c        ****                 case 8:
 388:main.c        ****                 
 389:main.c        ****                    Bass_Notes_Write(Bass_Notes_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-64)));
 706              		.loc 1 389 0
 707 0208 FFF7FEFF 		bl	Bass_Notes_Read
 708 020c 0346     		mov	r3, r0
 709 020e D9B2     		uxtb	r1, r3
 710 0210 3B68     		ldr	r3, [r7]
 711 0212 0133     		adds	r3, r3, #1
 712 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 713 0216 403B     		subs	r3, r3, #64
 714 0218 0122     		movs	r2, #1
 715 021a 02FA03F3 		lsl	r3, r2, r3
 716 021e DBB2     		uxtb	r3, r3
 717 0220 DB43     		mvns	r3, r3
 718 0222 DBB2     		uxtb	r3, r3
 719 0224 0A46     		mov	r2, r1
 720 0226 1340     		ands	r3, r3, r2
 721 0228 DBB2     		uxtb	r3, r3
 722 022a DBB2     		uxtb	r3, r3
 723 022c 1846     		mov	r0, r3
 724 022e FFF7FEFF 		bl	Bass_Notes_Write
 390:main.c        ****                    break;                    
 725              		.loc 1 390 0
 726 0232 00BF     		nop
 727              	.L35:
 391:main.c        ****             }
 392:main.c        ****             LED_OutA_Write(0);
 728              		.loc 1 392 0
 729 0234 0020     		movs	r0, #0
 730 0236 FFF7FEFF 		bl	LED_OutA_Write
 393:main.c        ****         }
 394:main.c        ****         else    //TAG: Velocity is not zero, turn on note/bit
 395:main.c        ****         {
 396:main.c        ****             switch ((midiMsg[USB_EVENT_BYTE1]/*-36*/)/8) //TAG: Parse the note on messages to the a
 397:main.c        ****             {
 398:main.c        ****                 case 0: 
 399:main.c        ****                 
 400:main.c        ****                    Keys_Notes_1_Write(Keys_Notes_1_Read() | 0x01 << midiMsg[USB_EVENT_BYTE1]);
 401:main.c        ****                     break;
 402:main.c        ****                 
 403:main.c        ****                 case 1:
 404:main.c        ****                 
 405:main.c        ****                    Keys_Notes_2_Write(Keys_Notes_2_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-8)); 
 406:main.c        ****                     break;
 407:main.c        ****                 
 408:main.c        ****                 case 2:
 409:main.c        ****                 
 410:main.c        ****                    Keys_Notes_3_Write(Keys_Notes_3_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-16));
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 21


 411:main.c        ****                     break;
 412:main.c        ****                 
 413:main.c        ****                 case 3:
 414:main.c        ****                 
 415:main.c        ****                    Keys_Notes_4_Write(Keys_Notes_4_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-24));
 416:main.c        ****                     break;
 417:main.c        ****                 
 418:main.c        ****                 case 4:
 419:main.c        ****                 
 420:main.c        ****                    Keys_Notes_5_Write(Keys_Notes_5_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-32));
 421:main.c        ****                     break;
 422:main.c        ****                                 
 423:main.c        ****                 case 5:
 424:main.c        ****                 
 425:main.c        ****                    Keys_Notes_6_Write(Keys_Notes_6_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-40));
 426:main.c        ****                     break; 
 427:main.c        ****                 case 6:
 428:main.c        ****                 
 429:main.c        ****                    Chords_Notes_Write(Chords_Notes_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-48));
 430:main.c        ****                     break; 
 431:main.c        ****                 case 7:
 432:main.c        ****                 
 433:main.c        ****                    Chords_Bass_Notes_Write(Chords_Bass_Notes_Read() | 0x01 << (midiMsg[USB_EVENT_BY
 434:main.c        ****                     break;
 435:main.c        ****                 case 8:
 436:main.c        ****                 
 437:main.c        ****                    Bass_Notes_Write(Bass_Notes_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-64));
 438:main.c        ****                     break;                   
 439:main.c        ****             }
 440:main.c        **** 
 441:main.c        ****             LED_OutA_Write(1);
 442:main.c        ****         }
 443:main.c        ****         break;  
 731              		.loc 1 443 0
 732 023a 99E2     		b	.L30
 733              	.L34:
 396:main.c        ****             {
 734              		.loc 1 396 0
 735 023c 3B68     		ldr	r3, [r7]
 736 023e 0133     		adds	r3, r3, #1
 737 0240 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 738 0242 DB08     		lsrs	r3, r3, #3
 739 0244 DBB2     		uxtb	r3, r3
 740 0246 082B     		cmp	r3, #8
 741 0248 00F2CC80 		bhi	.L47
 742 024c 01A2     		adr	r2, .L49
 743 024e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 744 0252 00BF     		.p2align 2
 745              	.L49:
 746 0254 79020000 		.word	.L48+1
 747 0258 9D020000 		.word	.L50+1
 748 025c C5020000 		.word	.L51+1
 749 0260 F5020000 		.word	.L52+1
 750 0264 1D030000 		.word	.L53+1
 751 0268 45030000 		.word	.L54+1
 752 026c 6D030000 		.word	.L55+1
 753 0270 95030000 		.word	.L56+1
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 22


 754 0274 BD030000 		.word	.L57+1
 755              		.p2align 1
 756              	.L48:
 400:main.c        ****                     break;
 757              		.loc 1 400 0
 758 0278 FFF7FEFF 		bl	Keys_Notes_1_Read
 759 027c 0346     		mov	r3, r0
 760 027e DAB2     		uxtb	r2, r3
 761 0280 3B68     		ldr	r3, [r7]
 762 0282 0133     		adds	r3, r3, #1
 763 0284 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 764 0286 1946     		mov	r1, r3
 765 0288 0123     		movs	r3, #1
 766 028a 8B40     		lsls	r3, r3, r1
 767 028c DBB2     		uxtb	r3, r3
 768 028e 1343     		orrs	r3, r3, r2
 769 0290 DBB2     		uxtb	r3, r3
 770 0292 DBB2     		uxtb	r3, r3
 771 0294 1846     		mov	r0, r3
 772 0296 FFF7FEFF 		bl	Keys_Notes_1_Write
 401:main.c        ****                 
 773              		.loc 1 401 0
 774 029a A3E0     		b	.L47
 775              	.L50:
 405:main.c        ****                     break;
 776              		.loc 1 405 0
 777 029c FFF7FEFF 		bl	Keys_Notes_2_Read
 778 02a0 0346     		mov	r3, r0
 779 02a2 D9B2     		uxtb	r1, r3
 780 02a4 3B68     		ldr	r3, [r7]
 781 02a6 0133     		adds	r3, r3, #1
 782 02a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 783 02aa 083B     		subs	r3, r3, #8
 784 02ac 0122     		movs	r2, #1
 785 02ae 02FA03F3 		lsl	r3, r2, r3
 786 02b2 DBB2     		uxtb	r3, r3
 787 02b4 0A46     		mov	r2, r1
 788 02b6 1343     		orrs	r3, r3, r2
 789 02b8 DBB2     		uxtb	r3, r3
 790 02ba DBB2     		uxtb	r3, r3
 791 02bc 1846     		mov	r0, r3
 792 02be FFF7FEFF 		bl	Keys_Notes_2_Write
 406:main.c        ****                 
 793              		.loc 1 406 0
 794 02c2 8FE0     		b	.L47
 795              	.L51:
 410:main.c        ****                     break;
 796              		.loc 1 410 0
 797 02c4 FFF7FEFF 		bl	Keys_Notes_3_Read
 798 02c8 0346     		mov	r3, r0
 799 02ca D9B2     		uxtb	r1, r3
 800 02cc 3B68     		ldr	r3, [r7]
 801 02ce 0133     		adds	r3, r3, #1
 802 02d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 803 02d2 103B     		subs	r3, r3, #16
 804 02d4 0122     		movs	r2, #1
 805 02d6 02FA03F3 		lsl	r3, r2, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 23


 806 02da DBB2     		uxtb	r3, r3
 807 02dc 0A46     		mov	r2, r1
 808 02de 1343     		orrs	r3, r3, r2
 809 02e0 DBB2     		uxtb	r3, r3
 810 02e2 DBB2     		uxtb	r3, r3
 811 02e4 1846     		mov	r0, r3
 812 02e6 FFF7FEFF 		bl	Keys_Notes_3_Write
 411:main.c        ****                 
 813              		.loc 1 411 0
 814 02ea 7BE0     		b	.L47
 815              	.L89:
 816              		.align	2
 817              	.L88:
 818 02ec 00000000 		.word	USB_MIDI1_InqFlags
 819 02f0 00000000 		.word	inqFlagsOld
 820              	.L52:
 415:main.c        ****                     break;
 821              		.loc 1 415 0
 822 02f4 FFF7FEFF 		bl	Keys_Notes_4_Read
 823 02f8 0346     		mov	r3, r0
 824 02fa D9B2     		uxtb	r1, r3
 825 02fc 3B68     		ldr	r3, [r7]
 826 02fe 0133     		adds	r3, r3, #1
 827 0300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 828 0302 183B     		subs	r3, r3, #24
 829 0304 0122     		movs	r2, #1
 830 0306 02FA03F3 		lsl	r3, r2, r3
 831 030a DBB2     		uxtb	r3, r3
 832 030c 0A46     		mov	r2, r1
 833 030e 1343     		orrs	r3, r3, r2
 834 0310 DBB2     		uxtb	r3, r3
 835 0312 DBB2     		uxtb	r3, r3
 836 0314 1846     		mov	r0, r3
 837 0316 FFF7FEFF 		bl	Keys_Notes_4_Write
 416:main.c        ****                 
 838              		.loc 1 416 0
 839 031a 63E0     		b	.L47
 840              	.L53:
 420:main.c        ****                     break;
 841              		.loc 1 420 0
 842 031c FFF7FEFF 		bl	Keys_Notes_5_Read
 843 0320 0346     		mov	r3, r0
 844 0322 D9B2     		uxtb	r1, r3
 845 0324 3B68     		ldr	r3, [r7]
 846 0326 0133     		adds	r3, r3, #1
 847 0328 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 848 032a 203B     		subs	r3, r3, #32
 849 032c 0122     		movs	r2, #1
 850 032e 02FA03F3 		lsl	r3, r2, r3
 851 0332 DBB2     		uxtb	r3, r3
 852 0334 0A46     		mov	r2, r1
 853 0336 1343     		orrs	r3, r3, r2
 854 0338 DBB2     		uxtb	r3, r3
 855 033a DBB2     		uxtb	r3, r3
 856 033c 1846     		mov	r0, r3
 857 033e FFF7FEFF 		bl	Keys_Notes_5_Write
 421:main.c        ****                                 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 24


 858              		.loc 1 421 0
 859 0342 4FE0     		b	.L47
 860              	.L54:
 425:main.c        ****                     break; 
 861              		.loc 1 425 0
 862 0344 FFF7FEFF 		bl	Keys_Notes_6_Read
 863 0348 0346     		mov	r3, r0
 864 034a D9B2     		uxtb	r1, r3
 865 034c 3B68     		ldr	r3, [r7]
 866 034e 0133     		adds	r3, r3, #1
 867 0350 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 868 0352 283B     		subs	r3, r3, #40
 869 0354 0122     		movs	r2, #1
 870 0356 02FA03F3 		lsl	r3, r2, r3
 871 035a DBB2     		uxtb	r3, r3
 872 035c 0A46     		mov	r2, r1
 873 035e 1343     		orrs	r3, r3, r2
 874 0360 DBB2     		uxtb	r3, r3
 875 0362 DBB2     		uxtb	r3, r3
 876 0364 1846     		mov	r0, r3
 877 0366 FFF7FEFF 		bl	Keys_Notes_6_Write
 426:main.c        ****                 case 6:
 878              		.loc 1 426 0
 879 036a 3BE0     		b	.L47
 880              	.L55:
 429:main.c        ****                     break; 
 881              		.loc 1 429 0
 882 036c FFF7FEFF 		bl	Chords_Notes_Read
 883 0370 0346     		mov	r3, r0
 884 0372 D9B2     		uxtb	r1, r3
 885 0374 3B68     		ldr	r3, [r7]
 886 0376 0133     		adds	r3, r3, #1
 887 0378 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 888 037a 303B     		subs	r3, r3, #48
 889 037c 0122     		movs	r2, #1
 890 037e 02FA03F3 		lsl	r3, r2, r3
 891 0382 DBB2     		uxtb	r3, r3
 892 0384 0A46     		mov	r2, r1
 893 0386 1343     		orrs	r3, r3, r2
 894 0388 DBB2     		uxtb	r3, r3
 895 038a DBB2     		uxtb	r3, r3
 896 038c 1846     		mov	r0, r3
 897 038e FFF7FEFF 		bl	Chords_Notes_Write
 430:main.c        ****                 case 7:
 898              		.loc 1 430 0
 899 0392 27E0     		b	.L47
 900              	.L56:
 433:main.c        ****                     break;
 901              		.loc 1 433 0
 902 0394 FFF7FEFF 		bl	Chords_Bass_Notes_Read
 903 0398 0346     		mov	r3, r0
 904 039a D9B2     		uxtb	r1, r3
 905 039c 3B68     		ldr	r3, [r7]
 906 039e 0133     		adds	r3, r3, #1
 907 03a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 908 03a2 383B     		subs	r3, r3, #56
 909 03a4 0122     		movs	r2, #1
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 25


 910 03a6 02FA03F3 		lsl	r3, r2, r3
 911 03aa DBB2     		uxtb	r3, r3
 912 03ac 0A46     		mov	r2, r1
 913 03ae 1343     		orrs	r3, r3, r2
 914 03b0 DBB2     		uxtb	r3, r3
 915 03b2 DBB2     		uxtb	r3, r3
 916 03b4 1846     		mov	r0, r3
 917 03b6 FFF7FEFF 		bl	Chords_Bass_Notes_Write
 434:main.c        ****                 case 8:
 918              		.loc 1 434 0
 919 03ba 13E0     		b	.L47
 920              	.L57:
 437:main.c        ****                     break;                   
 921              		.loc 1 437 0
 922 03bc FFF7FEFF 		bl	Bass_Notes_Read
 923 03c0 0346     		mov	r3, r0
 924 03c2 D9B2     		uxtb	r1, r3
 925 03c4 3B68     		ldr	r3, [r7]
 926 03c6 0133     		adds	r3, r3, #1
 927 03c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 928 03ca 403B     		subs	r3, r3, #64
 929 03cc 0122     		movs	r2, #1
 930 03ce 02FA03F3 		lsl	r3, r2, r3
 931 03d2 DBB2     		uxtb	r3, r3
 932 03d4 0A46     		mov	r2, r1
 933 03d6 1343     		orrs	r3, r3, r2
 934 03d8 DBB2     		uxtb	r3, r3
 935 03da DBB2     		uxtb	r3, r3
 936 03dc 1846     		mov	r0, r3
 937 03de FFF7FEFF 		bl	Bass_Notes_Write
 438:main.c        ****             }
 938              		.loc 1 438 0
 939 03e2 00BF     		nop
 940              	.L47:
 441:main.c        ****         }
 941              		.loc 1 441 0
 942 03e4 0120     		movs	r0, #1
 943 03e6 FFF7FEFF 		bl	LED_OutA_Write
 944              		.loc 1 443 0
 945 03ea C1E1     		b	.L30
 946              	.L33:
 444:main.c        ****         
 445:main.c        ****     case USB_MIDI_NOTE_OFF:  // TAG: This #define assumes channel 1, should parse channel too, have
 446:main.c        ****         
 447:main.c        ****         switch ((midiMsg[USB_EVENT_BYTE1]/*-36*/)/8) //TAG: Parse the note on messages to the appro
 947              		.loc 1 447 0
 948 03ec 3B68     		ldr	r3, [r7]
 949 03ee 0133     		adds	r3, r3, #1
 950 03f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 951 03f2 DB08     		lsrs	r3, r3, #3
 952 03f4 DBB2     		uxtb	r3, r3
 953 03f6 082B     		cmp	r3, #8
 954 03f8 00F2DA80 		bhi	.L58
 955 03fc 01A2     		adr	r2, .L60
 956 03fe 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 957 0402 00BF     		.p2align 2
 958              	.L60:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 26


 959 0404 29040000 		.word	.L59+1
 960 0408 51040000 		.word	.L61+1
 961 040c 7D040000 		.word	.L62+1
 962 0410 A9040000 		.word	.L63+1
 963 0414 D5040000 		.word	.L64+1
 964 0418 01050000 		.word	.L65+1
 965 041c 2D050000 		.word	.L66+1
 966 0420 59050000 		.word	.L67+1
 967 0424 85050000 		.word	.L68+1
 968              		.p2align 1
 969              	.L59:
 448:main.c        ****             {
 449:main.c        ****                 case 0: 
 450:main.c        ****                 
 451:main.c        ****                    Keys_Notes_1_Write(Keys_Notes_1_Read() & ~(0x01 << midiMsg[USB_EVENT_BYTE1]));
 970              		.loc 1 451 0
 971 0428 FFF7FEFF 		bl	Keys_Notes_1_Read
 972 042c 0346     		mov	r3, r0
 973 042e DAB2     		uxtb	r2, r3
 974 0430 3B68     		ldr	r3, [r7]
 975 0432 0133     		adds	r3, r3, #1
 976 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 977 0436 1946     		mov	r1, r3
 978 0438 0123     		movs	r3, #1
 979 043a 8B40     		lsls	r3, r3, r1
 980 043c DBB2     		uxtb	r3, r3
 981 043e DB43     		mvns	r3, r3
 982 0440 DBB2     		uxtb	r3, r3
 983 0442 1340     		ands	r3, r3, r2
 984 0444 DBB2     		uxtb	r3, r3
 985 0446 DBB2     		uxtb	r3, r3
 986 0448 1846     		mov	r0, r3
 987 044a FFF7FEFF 		bl	Keys_Notes_1_Write
 452:main.c        ****                     break;
 988              		.loc 1 452 0
 989 044e AFE0     		b	.L58
 990              	.L61:
 453:main.c        ****                 
 454:main.c        ****                 case 1:
 455:main.c        ****                 
 456:main.c        ****                    Keys_Notes_2_Write(Keys_Notes_2_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-8))
 991              		.loc 1 456 0
 992 0450 FFF7FEFF 		bl	Keys_Notes_2_Read
 993 0454 0346     		mov	r3, r0
 994 0456 D9B2     		uxtb	r1, r3
 995 0458 3B68     		ldr	r3, [r7]
 996 045a 0133     		adds	r3, r3, #1
 997 045c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 998 045e 083B     		subs	r3, r3, #8
 999 0460 0122     		movs	r2, #1
 1000 0462 02FA03F3 		lsl	r3, r2, r3
 1001 0466 DBB2     		uxtb	r3, r3
 1002 0468 DB43     		mvns	r3, r3
 1003 046a DBB2     		uxtb	r3, r3
 1004 046c 0A46     		mov	r2, r1
 1005 046e 1340     		ands	r3, r3, r2
 1006 0470 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 27


 1007 0472 DBB2     		uxtb	r3, r3
 1008 0474 1846     		mov	r0, r3
 1009 0476 FFF7FEFF 		bl	Keys_Notes_2_Write
 457:main.c        ****                     break;
 1010              		.loc 1 457 0
 1011 047a 99E0     		b	.L58
 1012              	.L62:
 458:main.c        ****                 
 459:main.c        ****                 case 2:
 460:main.c        ****                 
 461:main.c        ****                    Keys_Notes_3_Write(Keys_Notes_3_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-16)
 1013              		.loc 1 461 0
 1014 047c FFF7FEFF 		bl	Keys_Notes_3_Read
 1015 0480 0346     		mov	r3, r0
 1016 0482 D9B2     		uxtb	r1, r3
 1017 0484 3B68     		ldr	r3, [r7]
 1018 0486 0133     		adds	r3, r3, #1
 1019 0488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1020 048a 103B     		subs	r3, r3, #16
 1021 048c 0122     		movs	r2, #1
 1022 048e 02FA03F3 		lsl	r3, r2, r3
 1023 0492 DBB2     		uxtb	r3, r3
 1024 0494 DB43     		mvns	r3, r3
 1025 0496 DBB2     		uxtb	r3, r3
 1026 0498 0A46     		mov	r2, r1
 1027 049a 1340     		ands	r3, r3, r2
 1028 049c DBB2     		uxtb	r3, r3
 1029 049e DBB2     		uxtb	r3, r3
 1030 04a0 1846     		mov	r0, r3
 1031 04a2 FFF7FEFF 		bl	Keys_Notes_3_Write
 462:main.c        ****                     break;
 1032              		.loc 1 462 0
 1033 04a6 83E0     		b	.L58
 1034              	.L63:
 463:main.c        ****                 
 464:main.c        ****                 case 3:
 465:main.c        ****                 
 466:main.c        ****                    Keys_Notes_4_Write(Keys_Notes_4_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-24)
 1035              		.loc 1 466 0
 1036 04a8 FFF7FEFF 		bl	Keys_Notes_4_Read
 1037 04ac 0346     		mov	r3, r0
 1038 04ae D9B2     		uxtb	r1, r3
 1039 04b0 3B68     		ldr	r3, [r7]
 1040 04b2 0133     		adds	r3, r3, #1
 1041 04b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1042 04b6 183B     		subs	r3, r3, #24
 1043 04b8 0122     		movs	r2, #1
 1044 04ba 02FA03F3 		lsl	r3, r2, r3
 1045 04be DBB2     		uxtb	r3, r3
 1046 04c0 DB43     		mvns	r3, r3
 1047 04c2 DBB2     		uxtb	r3, r3
 1048 04c4 0A46     		mov	r2, r1
 1049 04c6 1340     		ands	r3, r3, r2
 1050 04c8 DBB2     		uxtb	r3, r3
 1051 04ca DBB2     		uxtb	r3, r3
 1052 04cc 1846     		mov	r0, r3
 1053 04ce FFF7FEFF 		bl	Keys_Notes_4_Write
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 28


 467:main.c        ****                     break;
 1054              		.loc 1 467 0
 1055 04d2 6DE0     		b	.L58
 1056              	.L64:
 468:main.c        ****                 
 469:main.c        ****                 case 4:
 470:main.c        ****                 
 471:main.c        ****                    Keys_Notes_5_Write(Keys_Notes_5_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-32)
 1057              		.loc 1 471 0
 1058 04d4 FFF7FEFF 		bl	Keys_Notes_5_Read
 1059 04d8 0346     		mov	r3, r0
 1060 04da D9B2     		uxtb	r1, r3
 1061 04dc 3B68     		ldr	r3, [r7]
 1062 04de 0133     		adds	r3, r3, #1
 1063 04e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1064 04e2 203B     		subs	r3, r3, #32
 1065 04e4 0122     		movs	r2, #1
 1066 04e6 02FA03F3 		lsl	r3, r2, r3
 1067 04ea DBB2     		uxtb	r3, r3
 1068 04ec DB43     		mvns	r3, r3
 1069 04ee DBB2     		uxtb	r3, r3
 1070 04f0 0A46     		mov	r2, r1
 1071 04f2 1340     		ands	r3, r3, r2
 1072 04f4 DBB2     		uxtb	r3, r3
 1073 04f6 DBB2     		uxtb	r3, r3
 1074 04f8 1846     		mov	r0, r3
 1075 04fa FFF7FEFF 		bl	Keys_Notes_5_Write
 472:main.c        ****                     break;
 1076              		.loc 1 472 0
 1077 04fe 57E0     		b	.L58
 1078              	.L65:
 473:main.c        ****                                 
 474:main.c        ****                 case 5:
 475:main.c        ****                 
 476:main.c        ****                    Keys_Notes_6_Write(Keys_Notes_6_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-40)
 1079              		.loc 1 476 0
 1080 0500 FFF7FEFF 		bl	Keys_Notes_6_Read
 1081 0504 0346     		mov	r3, r0
 1082 0506 D9B2     		uxtb	r1, r3
 1083 0508 3B68     		ldr	r3, [r7]
 1084 050a 0133     		adds	r3, r3, #1
 1085 050c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1086 050e 283B     		subs	r3, r3, #40
 1087 0510 0122     		movs	r2, #1
 1088 0512 02FA03F3 		lsl	r3, r2, r3
 1089 0516 DBB2     		uxtb	r3, r3
 1090 0518 DB43     		mvns	r3, r3
 1091 051a DBB2     		uxtb	r3, r3
 1092 051c 0A46     		mov	r2, r1
 1093 051e 1340     		ands	r3, r3, r2
 1094 0520 DBB2     		uxtb	r3, r3
 1095 0522 DBB2     		uxtb	r3, r3
 1096 0524 1846     		mov	r0, r3
 1097 0526 FFF7FEFF 		bl	Keys_Notes_6_Write
 477:main.c        ****                     break;  
 1098              		.loc 1 477 0
 1099 052a 41E0     		b	.L58
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 29


 1100              	.L66:
 478:main.c        ****                 case 6:
 479:main.c        ****                 
 480:main.c        ****                    Chords_Notes_Write(Chords_Notes_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-48)
 1101              		.loc 1 480 0
 1102 052c FFF7FEFF 		bl	Chords_Notes_Read
 1103 0530 0346     		mov	r3, r0
 1104 0532 D9B2     		uxtb	r1, r3
 1105 0534 3B68     		ldr	r3, [r7]
 1106 0536 0133     		adds	r3, r3, #1
 1107 0538 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1108 053a 303B     		subs	r3, r3, #48
 1109 053c 0122     		movs	r2, #1
 1110 053e 02FA03F3 		lsl	r3, r2, r3
 1111 0542 DBB2     		uxtb	r3, r3
 1112 0544 DB43     		mvns	r3, r3
 1113 0546 DBB2     		uxtb	r3, r3
 1114 0548 0A46     		mov	r2, r1
 1115 054a 1340     		ands	r3, r3, r2
 1116 054c DBB2     		uxtb	r3, r3
 1117 054e DBB2     		uxtb	r3, r3
 1118 0550 1846     		mov	r0, r3
 1119 0552 FFF7FEFF 		bl	Chords_Notes_Write
 481:main.c        ****                    break;    
 1120              		.loc 1 481 0
 1121 0556 2BE0     		b	.L58
 1122              	.L67:
 482:main.c        ****                 case 7:
 483:main.c        ****                 
 484:main.c        ****                    Chords_Bass_Notes_Write(Chords_Bass_Notes_Read() & ~(0x01 << (midiMsg[USB_EVENT_
 1123              		.loc 1 484 0
 1124 0558 FFF7FEFF 		bl	Chords_Bass_Notes_Read
 1125 055c 0346     		mov	r3, r0
 1126 055e D9B2     		uxtb	r1, r3
 1127 0560 3B68     		ldr	r3, [r7]
 1128 0562 0133     		adds	r3, r3, #1
 1129 0564 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1130 0566 383B     		subs	r3, r3, #56
 1131 0568 0122     		movs	r2, #1
 1132 056a 02FA03F3 		lsl	r3, r2, r3
 1133 056e DBB2     		uxtb	r3, r3
 1134 0570 DB43     		mvns	r3, r3
 1135 0572 DBB2     		uxtb	r3, r3
 1136 0574 0A46     		mov	r2, r1
 1137 0576 1340     		ands	r3, r3, r2
 1138 0578 DBB2     		uxtb	r3, r3
 1139 057a DBB2     		uxtb	r3, r3
 1140 057c 1846     		mov	r0, r3
 1141 057e FFF7FEFF 		bl	Chords_Bass_Notes_Write
 485:main.c        ****                    break;    
 1142              		.loc 1 485 0
 1143 0582 15E0     		b	.L58
 1144              	.L68:
 486:main.c        ****                 case 8:
 487:main.c        ****                 
 488:main.c        ****                    Bass_Notes_Write(Bass_Notes_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-64)));
 1145              		.loc 1 488 0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 30


 1146 0584 FFF7FEFF 		bl	Bass_Notes_Read
 1147 0588 0346     		mov	r3, r0
 1148 058a D9B2     		uxtb	r1, r3
 1149 058c 3B68     		ldr	r3, [r7]
 1150 058e 0133     		adds	r3, r3, #1
 1151 0590 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 0592 403B     		subs	r3, r3, #64
 1153 0594 0122     		movs	r2, #1
 1154 0596 02FA03F3 		lsl	r3, r2, r3
 1155 059a DBB2     		uxtb	r3, r3
 1156 059c DB43     		mvns	r3, r3
 1157 059e DBB2     		uxtb	r3, r3
 1158 05a0 0A46     		mov	r2, r1
 1159 05a2 1340     		ands	r3, r3, r2
 1160 05a4 DBB2     		uxtb	r3, r3
 1161 05a6 DBB2     		uxtb	r3, r3
 1162 05a8 1846     		mov	r0, r3
 1163 05aa FFF7FEFF 		bl	Bass_Notes_Write
 489:main.c        ****                    break;                 
 1164              		.loc 1 489 0
 1165 05ae 00BF     		nop
 1166              	.L58:
 490:main.c        ****             }
 491:main.c        ****             LED_OutA_Write(0);
 1167              		.loc 1 491 0
 1168 05b0 0020     		movs	r0, #0
 1169 05b2 FFF7FEFF 		bl	LED_OutA_Write
 492:main.c        ****             break;
 1170              		.loc 1 492 0
 1171 05b6 DBE0     		b	.L30
 1172              	.L32:
 493:main.c        ****     case USB_MIDI_CONTROL_CHANGE: // TAG: This #define assumes channel 1, should parse channel too,
 494:main.c        ****             switch (midiMsg[USB_EVENT_BYTE1]/8)
 1173              		.loc 1 494 0
 1174 05b8 3B68     		ldr	r3, [r7]
 1175 05ba 0133     		adds	r3, r3, #1
 1176 05bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1177 05be DB08     		lsrs	r3, r3, #3
 1178 05c0 DBB2     		uxtb	r3, r3
 1179 05c2 042B     		cmp	r3, #4
 1180 05c4 00F2D380 		bhi	.L86
 1181 05c8 01A2     		adr	r2, .L71
 1182 05ca 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1183 05ce 00BF     		.p2align 2
 1184              	.L71:
 1185 05d0 E5050000 		.word	.L70+1
 1186 05d4 3B060000 		.word	.L72+1
 1187 05d8 99060000 		.word	.L73+1
 1188 05dc F7060000 		.word	.L74+1
 1189 05e0 55070000 		.word	.L75+1
 1190              		.p2align 1
 1191              	.L70:
 495:main.c        ****             {
 496:main.c        ****                 case 0: 
 497:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1192              		.loc 1 497 0
 1193 05e4 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 31


 1194 05e6 0233     		adds	r3, r3, #2
 1195 05e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1196 05ea 3E2B     		cmp	r3, #62
 1197 05ec 13D8     		bhi	.L76
 498:main.c        ****                     {
 499:main.c        ****                     Tabs_1_Write(Tabs_1_Read() & ~(0x01 << midiMsg[USB_EVENT_BYTE1]));
 1198              		.loc 1 499 0
 1199 05ee FFF7FEFF 		bl	Tabs_1_Read
 1200 05f2 0346     		mov	r3, r0
 1201 05f4 DAB2     		uxtb	r2, r3
 1202 05f6 3B68     		ldr	r3, [r7]
 1203 05f8 0133     		adds	r3, r3, #1
 1204 05fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1205 05fc 1946     		mov	r1, r3
 1206 05fe 0123     		movs	r3, #1
 1207 0600 8B40     		lsls	r3, r3, r1
 1208 0602 DBB2     		uxtb	r3, r3
 1209 0604 DB43     		mvns	r3, r3
 1210 0606 DBB2     		uxtb	r3, r3
 1211 0608 1340     		ands	r3, r3, r2
 1212 060a DBB2     		uxtb	r3, r3
 1213 060c DBB2     		uxtb	r3, r3
 1214 060e 1846     		mov	r0, r3
 1215 0610 FFF7FEFF 		bl	Tabs_1_Write
 500:main.c        ****                     }
 501:main.c        ****                     else
 502:main.c        ****                     {
 503:main.c        ****                     Tabs_1_Write(Tabs_1_Read() | (0x01 << midiMsg[USB_EVENT_BYTE1]));    
 504:main.c        ****                     }
 505:main.c        ****                     break;
 1216              		.loc 1 505 0
 1217 0614 ABE0     		b	.L69
 1218              	.L76:
 503:main.c        ****                     }
 1219              		.loc 1 503 0
 1220 0616 FFF7FEFF 		bl	Tabs_1_Read
 1221 061a 0346     		mov	r3, r0
 1222 061c DAB2     		uxtb	r2, r3
 1223 061e 3B68     		ldr	r3, [r7]
 1224 0620 0133     		adds	r3, r3, #1
 1225 0622 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1226 0624 1946     		mov	r1, r3
 1227 0626 0123     		movs	r3, #1
 1228 0628 8B40     		lsls	r3, r3, r1
 1229 062a DBB2     		uxtb	r3, r3
 1230 062c 1343     		orrs	r3, r3, r2
 1231 062e DBB2     		uxtb	r3, r3
 1232 0630 DBB2     		uxtb	r3, r3
 1233 0632 1846     		mov	r0, r3
 1234 0634 FFF7FEFF 		bl	Tabs_1_Write
 1235              		.loc 1 505 0
 1236 0638 99E0     		b	.L69
 1237              	.L72:
 506:main.c        ****                 
 507:main.c        ****                 case 1:
 508:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1238              		.loc 1 508 0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 32


 1239 063a 3B68     		ldr	r3, [r7]
 1240 063c 0233     		adds	r3, r3, #2
 1241 063e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1242 0640 3E2B     		cmp	r3, #62
 1243 0642 15D8     		bhi	.L78
 509:main.c        ****                     {
 510:main.c        ****                     Tabs_2_Write(Tabs_2_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-8)));
 1244              		.loc 1 510 0
 1245 0644 FFF7FEFF 		bl	Tabs_2_Read
 1246 0648 0346     		mov	r3, r0
 1247 064a D9B2     		uxtb	r1, r3
 1248 064c 3B68     		ldr	r3, [r7]
 1249 064e 0133     		adds	r3, r3, #1
 1250 0650 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1251 0652 083B     		subs	r3, r3, #8
 1252 0654 0122     		movs	r2, #1
 1253 0656 02FA03F3 		lsl	r3, r2, r3
 1254 065a DBB2     		uxtb	r3, r3
 1255 065c DB43     		mvns	r3, r3
 1256 065e DBB2     		uxtb	r3, r3
 1257 0660 0A46     		mov	r2, r1
 1258 0662 1340     		ands	r3, r3, r2
 1259 0664 DBB2     		uxtb	r3, r3
 1260 0666 DBB2     		uxtb	r3, r3
 1261 0668 1846     		mov	r0, r3
 1262 066a FFF7FEFF 		bl	Tabs_2_Write
 511:main.c        ****                     }
 512:main.c        ****                     else
 513:main.c        ****                     {
 514:main.c        ****                     Tabs_2_Write(Tabs_2_Read() | (0x01 << (midiMsg[USB_EVENT_BYTE1]-8)));    
 515:main.c        ****                     }
 516:main.c        ****                     break;
 1263              		.loc 1 516 0
 1264 066e 7EE0     		b	.L69
 1265              	.L78:
 514:main.c        ****                     }
 1266              		.loc 1 514 0
 1267 0670 FFF7FEFF 		bl	Tabs_2_Read
 1268 0674 0346     		mov	r3, r0
 1269 0676 D9B2     		uxtb	r1, r3
 1270 0678 3B68     		ldr	r3, [r7]
 1271 067a 0133     		adds	r3, r3, #1
 1272 067c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1273 067e 083B     		subs	r3, r3, #8
 1274 0680 0122     		movs	r2, #1
 1275 0682 02FA03F3 		lsl	r3, r2, r3
 1276 0686 DBB2     		uxtb	r3, r3
 1277 0688 0A46     		mov	r2, r1
 1278 068a 1343     		orrs	r3, r3, r2
 1279 068c DBB2     		uxtb	r3, r3
 1280 068e DBB2     		uxtb	r3, r3
 1281 0690 1846     		mov	r0, r3
 1282 0692 FFF7FEFF 		bl	Tabs_2_Write
 1283              		.loc 1 516 0
 1284 0696 6AE0     		b	.L69
 1285              	.L73:
 517:main.c        ****                 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 33


 518:main.c        ****                 case 2:
 519:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1286              		.loc 1 519 0
 1287 0698 3B68     		ldr	r3, [r7]
 1288 069a 0233     		adds	r3, r3, #2
 1289 069c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1290 069e 3E2B     		cmp	r3, #62
 1291 06a0 15D8     		bhi	.L80
 520:main.c        ****                     {
 521:main.c        ****                     Tabs_3_Write(Tabs_3_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-16)));
 1292              		.loc 1 521 0
 1293 06a2 FFF7FEFF 		bl	Tabs_3_Read
 1294 06a6 0346     		mov	r3, r0
 1295 06a8 D9B2     		uxtb	r1, r3
 1296 06aa 3B68     		ldr	r3, [r7]
 1297 06ac 0133     		adds	r3, r3, #1
 1298 06ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1299 06b0 103B     		subs	r3, r3, #16
 1300 06b2 0122     		movs	r2, #1
 1301 06b4 02FA03F3 		lsl	r3, r2, r3
 1302 06b8 DBB2     		uxtb	r3, r3
 1303 06ba DB43     		mvns	r3, r3
 1304 06bc DBB2     		uxtb	r3, r3
 1305 06be 0A46     		mov	r2, r1
 1306 06c0 1340     		ands	r3, r3, r2
 1307 06c2 DBB2     		uxtb	r3, r3
 1308 06c4 DBB2     		uxtb	r3, r3
 1309 06c6 1846     		mov	r0, r3
 1310 06c8 FFF7FEFF 		bl	Tabs_3_Write
 522:main.c        ****                     }
 523:main.c        ****                     else
 524:main.c        ****                     {
 525:main.c        ****                     Tabs_3_Write(Tabs_3_Read() | (0x01 << (midiMsg[USB_EVENT_BYTE1]-16)));    
 526:main.c        ****                     }
 527:main.c        ****                     break;
 1311              		.loc 1 527 0
 1312 06cc 4FE0     		b	.L69
 1313              	.L80:
 525:main.c        ****                     }
 1314              		.loc 1 525 0
 1315 06ce FFF7FEFF 		bl	Tabs_3_Read
 1316 06d2 0346     		mov	r3, r0
 1317 06d4 D9B2     		uxtb	r1, r3
 1318 06d6 3B68     		ldr	r3, [r7]
 1319 06d8 0133     		adds	r3, r3, #1
 1320 06da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1321 06dc 103B     		subs	r3, r3, #16
 1322 06de 0122     		movs	r2, #1
 1323 06e0 02FA03F3 		lsl	r3, r2, r3
 1324 06e4 DBB2     		uxtb	r3, r3
 1325 06e6 0A46     		mov	r2, r1
 1326 06e8 1343     		orrs	r3, r3, r2
 1327 06ea DBB2     		uxtb	r3, r3
 1328 06ec DBB2     		uxtb	r3, r3
 1329 06ee 1846     		mov	r0, r3
 1330 06f0 FFF7FEFF 		bl	Tabs_3_Write
 1331              		.loc 1 527 0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 34


 1332 06f4 3BE0     		b	.L69
 1333              	.L74:
 528:main.c        ****                 
 529:main.c        ****                 case 3:
 530:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1334              		.loc 1 530 0
 1335 06f6 3B68     		ldr	r3, [r7]
 1336 06f8 0233     		adds	r3, r3, #2
 1337 06fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1338 06fc 3E2B     		cmp	r3, #62
 1339 06fe 15D8     		bhi	.L82
 531:main.c        ****                     {
 532:main.c        ****                     Tabs_4_Write(Tabs_4_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-24)));
 1340              		.loc 1 532 0
 1341 0700 FFF7FEFF 		bl	Tabs_4_Read
 1342 0704 0346     		mov	r3, r0
 1343 0706 D9B2     		uxtb	r1, r3
 1344 0708 3B68     		ldr	r3, [r7]
 1345 070a 0133     		adds	r3, r3, #1
 1346 070c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1347 070e 183B     		subs	r3, r3, #24
 1348 0710 0122     		movs	r2, #1
 1349 0712 02FA03F3 		lsl	r3, r2, r3
 1350 0716 DBB2     		uxtb	r3, r3
 1351 0718 DB43     		mvns	r3, r3
 1352 071a DBB2     		uxtb	r3, r3
 1353 071c 0A46     		mov	r2, r1
 1354 071e 1340     		ands	r3, r3, r2
 1355 0720 DBB2     		uxtb	r3, r3
 1356 0722 DBB2     		uxtb	r3, r3
 1357 0724 1846     		mov	r0, r3
 1358 0726 FFF7FEFF 		bl	Tabs_4_Write
 533:main.c        ****                     }
 534:main.c        ****                     else
 535:main.c        ****                     {
 536:main.c        ****                     Tabs_4_Write(Tabs_4_Read() | (0x01 << (midiMsg[USB_EVENT_BYTE1]-24)));    
 537:main.c        ****                     }
 538:main.c        ****                     break;
 1359              		.loc 1 538 0
 1360 072a 20E0     		b	.L69
 1361              	.L82:
 536:main.c        ****                     }
 1362              		.loc 1 536 0
 1363 072c FFF7FEFF 		bl	Tabs_4_Read
 1364 0730 0346     		mov	r3, r0
 1365 0732 D9B2     		uxtb	r1, r3
 1366 0734 3B68     		ldr	r3, [r7]
 1367 0736 0133     		adds	r3, r3, #1
 1368 0738 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1369 073a 183B     		subs	r3, r3, #24
 1370 073c 0122     		movs	r2, #1
 1371 073e 02FA03F3 		lsl	r3, r2, r3
 1372 0742 DBB2     		uxtb	r3, r3
 1373 0744 0A46     		mov	r2, r1
 1374 0746 1343     		orrs	r3, r3, r2
 1375 0748 DBB2     		uxtb	r3, r3
 1376 074a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 35


 1377 074c 1846     		mov	r0, r3
 1378 074e FFF7FEFF 		bl	Tabs_4_Write
 1379              		.loc 1 538 0
 1380 0752 0CE0     		b	.L69
 1381              	.L75:
 539:main.c        ****    
 540:main.c        ****                 case 4:
 541:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1382              		.loc 1 541 0
 1383 0754 3B68     		ldr	r3, [r7]
 1384 0756 0233     		adds	r3, r3, #2
 1385 0758 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1386 075a 3E2B     		cmp	r3, #62
 1387 075c 03D8     		bhi	.L84
 542:main.c        ****                     {
 543:main.c        ****                     Chorus_Speed_Write(0x00);
 1388              		.loc 1 543 0
 1389 075e 0020     		movs	r0, #0
 1390 0760 FFF7FEFF 		bl	Chorus_Speed_Write
 544:main.c        ****                     }
 545:main.c        ****                     else
 546:main.c        ****                     {
 547:main.c        ****                     Chorus_Speed_Write(0xFF);   
 548:main.c        ****                     }
 549:main.c        ****                     break;             
 1391              		.loc 1 549 0
 1392 0764 02E0     		b	.L87
 1393              	.L84:
 547:main.c        ****                     }
 1394              		.loc 1 547 0
 1395 0766 FF20     		movs	r0, #255
 1396 0768 FFF7FEFF 		bl	Chorus_Speed_Write
 1397              	.L87:
 1398              		.loc 1 549 0
 1399 076c 00BF     		nop
 1400              	.L69:
 1401              	.L86:
 550:main.c        ****             }
 551:main.c        ****             break;        
 1402              		.loc 1 551 0
 1403 076e 00BF     		nop
 1404              	.L30:
 552:main.c        ****     }
 553:main.c        ****       /***************TAG: End of my code****************************************/ 
 554:main.c        ****     
 555:main.c        ****     inqFlagsOld = USB_MIDI1_InqFlags;
 1405              		.loc 1 555 0
 1406 0770 034B     		ldr	r3, .L90
 1407 0772 1B78     		ldrb	r3, [r3]
 1408 0774 DAB2     		uxtb	r2, r3
 1409 0776 034B     		ldr	r3, .L90+4
 1410 0778 1A70     		strb	r2, [r3]
 556:main.c        ****     cable = cable;
 557:main.c        **** }    
 1411              		.loc 1 557 0
 1412 077a 0837     		adds	r7, r7, #8
 1413              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 36


 1414 077c BD46     		mov	sp, r7
 1415              		.cfi_def_cfa_register 13
 1416              		@ sp needed
 1417 077e 80BD     		pop	{r7, pc}
 1418              	.L91:
 1419              		.align	2
 1420              	.L90:
 1421 0780 00000000 		.word	USB_MIDI1_InqFlags
 1422 0784 00000000 		.word	inqFlagsOld
 1423              		.cfi_endproc
 1424              	.LFE65:
 1425              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 1426              		.section	.text.USB_MIDI1_ProcessUsbOut_EntryCallback,"ax",%progbits
 1427              		.align	2
 1428              		.global	USB_MIDI1_ProcessUsbOut_EntryCallback
 1429              		.thumb
 1430              		.thumb_func
 1431              		.type	USB_MIDI1_ProcessUsbOut_EntryCallback, %function
 1432              	USB_MIDI1_ProcessUsbOut_EntryCallback:
 1433              	.LFB66:
 558:main.c        **** 
 559:main.c        **** 
 560:main.c        **** /*******************************************************************************
 561:main.c        **** * Function Name: USB_MIDI1_ProcessUsbOut_EntryCallback
 562:main.c        **** ********************************************************************************
 563:main.c        **** * Summary:  Turn the LED_OutA on at the beginning of the function
 564:main.c        **** * USB_MIDI1_ProcessUsbOut() when data comes to be put in the UART1 out
 565:main.c        **** * buffer.
 566:main.c        **** * 
 567:main.c        **** *******************************************************************************/
 568:main.c        **** void USB_MIDI1_ProcessUsbOut_EntryCallback(void)
 569:main.c        **** {
 1434              		.loc 1 569 0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 0
 1437              		@ frame_needed = 1, uses_anonymous_args = 0
 1438              		@ link register save eliminated.
 1439 0000 80B4     		push	{r7}
 1440              		.cfi_def_cfa_offset 4
 1441              		.cfi_offset 7, -4
 1442 0002 00AF     		add	r7, sp, #0
 1443              		.cfi_def_cfa_register 7
 570:main.c        ****   //  LED_OutA_Write(1);
 571:main.c        **** }
 1444              		.loc 1 571 0
 1445 0004 BD46     		mov	sp, r7
 1446              		.cfi_def_cfa_register 13
 1447              		@ sp needed
 1448 0006 5DF8047B 		ldr	r7, [sp], #4
 1449              		.cfi_restore 7
 1450              		.cfi_def_cfa_offset 0
 1451 000a 7047     		bx	lr
 1452              		.cfi_endproc
 1453              	.LFE66:
 1454              		.size	USB_MIDI1_ProcessUsbOut_EntryCallback, .-USB_MIDI1_ProcessUsbOut_EntryCallback
 1455              		.section	.text.USB_MIDI1_ProcessUsbOut_ExitCallback,"ax",%progbits
 1456              		.align	2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 37


 1457              		.global	USB_MIDI1_ProcessUsbOut_ExitCallback
 1458              		.thumb
 1459              		.thumb_func
 1460              		.type	USB_MIDI1_ProcessUsbOut_ExitCallback, %function
 1461              	USB_MIDI1_ProcessUsbOut_ExitCallback:
 1462              	.LFB67:
 572:main.c        **** 
 573:main.c        **** 
 574:main.c        **** /*******************************************************************************
 575:main.c        **** * Function Name: USB_MIDI1_ProcessUsbOut_ExitCallback
 576:main.c        **** ********************************************************************************
 577:main.c        **** * Summary:  Turn the LED_OutA off at the end of the function  
 578:main.c        **** * USB_MIDI1_ProcessUsbOut() when data is put in the UART1 out-buffer.
 579:main.c        **** * 
 580:main.c        **** *******************************************************************************/
 581:main.c        **** void USB_MIDI1_ProcessUsbOut_ExitCallback(void)
 582:main.c        **** {
 1463              		.loc 1 582 0
 1464              		.cfi_startproc
 1465              		@ args = 0, pretend = 0, frame = 0
 1466              		@ frame_needed = 1, uses_anonymous_args = 0
 1467              		@ link register save eliminated.
 1468 0000 80B4     		push	{r7}
 1469              		.cfi_def_cfa_offset 4
 1470              		.cfi_offset 7, -4
 1471 0002 00AF     		add	r7, sp, #0
 1472              		.cfi_def_cfa_register 7
 583:main.c        ****   //  LED_OutA_Write(0);
 584:main.c        **** }
 1473              		.loc 1 584 0
 1474 0004 BD46     		mov	sp, r7
 1475              		.cfi_def_cfa_register 13
 1476              		@ sp needed
 1477 0006 5DF8047B 		ldr	r7, [sp], #4
 1478              		.cfi_restore 7
 1479              		.cfi_def_cfa_offset 0
 1480 000a 7047     		bx	lr
 1481              		.cfi_endproc
 1482              	.LFE67:
 1483              		.size	USB_MIDI1_ProcessUsbOut_ExitCallback, .-USB_MIDI1_ProcessUsbOut_ExitCallback
 1484              		.section	.text.USB_MIDI2_ProcessUsbOut_EntryCallback,"ax",%progbits
 1485              		.align	2
 1486              		.global	USB_MIDI2_ProcessUsbOut_EntryCallback
 1487              		.thumb
 1488              		.thumb_func
 1489              		.type	USB_MIDI2_ProcessUsbOut_EntryCallback, %function
 1490              	USB_MIDI2_ProcessUsbOut_EntryCallback:
 1491              	.LFB68:
 585:main.c        **** 
 586:main.c        **** 
 587:main.c        **** /*******************************************************************************
 588:main.c        **** * Function Name: USB_MIDI2_ProcessUsbOut_EntryCallback
 589:main.c        **** ********************************************************************************
 590:main.c        **** * Summary:  Turn the LED_OutB on at the beginning of the function  
 591:main.c        **** * USB_MIDI2_ProcessUsbOut() when data comes to be put in the UART2 out- 
 592:main.c        **** * buffer  
 593:main.c        **** * 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 38


 594:main.c        **** *******************************************************************************/
 595:main.c        **** void USB_MIDI2_ProcessUsbOut_EntryCallback(void)
 596:main.c        **** {
 1492              		.loc 1 596 0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 0
 1495              		@ frame_needed = 1, uses_anonymous_args = 0
 1496 0000 80B5     		push	{r7, lr}
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 00AF     		add	r7, sp, #0
 1501              		.cfi_def_cfa_register 7
 597:main.c        ****     LED_OutB_Write(1);
 1502              		.loc 1 597 0
 1503 0004 0120     		movs	r0, #1
 1504 0006 FFF7FEFF 		bl	LED_OutB_Write
 598:main.c        **** }
 1505              		.loc 1 598 0
 1506 000a 80BD     		pop	{r7, pc}
 1507              		.cfi_endproc
 1508              	.LFE68:
 1509              		.size	USB_MIDI2_ProcessUsbOut_EntryCallback, .-USB_MIDI2_ProcessUsbOut_EntryCallback
 1510              		.section	.text.USB_MIDI2_ProcessUsbOut_ExitCallback,"ax",%progbits
 1511              		.align	2
 1512              		.global	USB_MIDI2_ProcessUsbOut_ExitCallback
 1513              		.thumb
 1514              		.thumb_func
 1515              		.type	USB_MIDI2_ProcessUsbOut_ExitCallback, %function
 1516              	USB_MIDI2_ProcessUsbOut_ExitCallback:
 1517              	.LFB69:
 599:main.c        **** 
 600:main.c        **** 
 601:main.c        **** /*******************************************************************************
 602:main.c        **** * Function Name: USB_MIDI2_ProcessUsbOut_ExitCallback
 603:main.c        **** ********************************************************************************
 604:main.c        **** * Summary:  Turn the LED_OutB off at the end of the function  
 605:main.c        **** * USB_MIDI2_ProcessUsbOut() when data is put in the UART2 out-buffer.
 606:main.c        **** * 
 607:main.c        **** *******************************************************************************/
 608:main.c        **** void USB_MIDI2_ProcessUsbOut_ExitCallback(void)
 609:main.c        **** {
 1518              		.loc 1 609 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 1, uses_anonymous_args = 0
 1522 0000 80B5     		push	{r7, lr}
 1523              		.cfi_def_cfa_offset 8
 1524              		.cfi_offset 7, -8
 1525              		.cfi_offset 14, -4
 1526 0002 00AF     		add	r7, sp, #0
 1527              		.cfi_def_cfa_register 7
 610:main.c        ****     LED_OutB_Write(0);
 1528              		.loc 1 610 0
 1529 0004 0020     		movs	r0, #0
 1530 0006 FFF7FEFF 		bl	LED_OutB_Write
 611:main.c        **** }
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 39


 1531              		.loc 1 611 0
 1532 000a 80BD     		pop	{r7, pc}
 1533              		.cfi_endproc
 1534              	.LFE69:
 1535              		.size	USB_MIDI2_ProcessUsbOut_ExitCallback, .-USB_MIDI2_ProcessUsbOut_ExitCallback
 1536              		.section	.text.MIDI1_UART_RXISR_EntryCallback,"ax",%progbits
 1537              		.align	2
 1538              		.global	MIDI1_UART_RXISR_EntryCallback
 1539              		.thumb
 1540              		.thumb_func
 1541              		.type	MIDI1_UART_RXISR_EntryCallback, %function
 1542              	MIDI1_UART_RXISR_EntryCallback:
 1543              	.LFB70:
 612:main.c        **** 
 613:main.c        **** 
 614:main.c        **** /*******************************************************************************
 615:main.c        **** * Function Name: MIDI1_UART_RXISR_EntryCallback
 616:main.c        **** ********************************************************************************
 617:main.c        **** * Summary:  Turn the LED_InA on at the beginning of the MIDI1_UART_RXISR ISR  
 618:main.c        **** * when data comes to UART1 to be put in the USBFS_MIDI IN endpoint
 619:main.c        **** * buffer.
 620:main.c        **** *
 621:main.c        **** *******************************************************************************/
 622:main.c        **** void MIDI1_UART_RXISR_EntryCallback(void)
 623:main.c        **** {
 1544              		.loc 1 623 0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 0
 1547              		@ frame_needed = 1, uses_anonymous_args = 0
 1548 0000 80B5     		push	{r7, lr}
 1549              		.cfi_def_cfa_offset 8
 1550              		.cfi_offset 7, -8
 1551              		.cfi_offset 14, -4
 1552 0002 00AF     		add	r7, sp, #0
 1553              		.cfi_def_cfa_register 7
 624:main.c        ****     /* These LEDs indicate MIDI input activity */
 625:main.c        ****     LED_InA_Write(1);
 1554              		.loc 1 625 0
 1555 0004 0120     		movs	r0, #1
 1556 0006 FFF7FEFF 		bl	LED_InA_Write
 626:main.c        **** }
 1557              		.loc 1 626 0
 1558 000a 80BD     		pop	{r7, pc}
 1559              		.cfi_endproc
 1560              	.LFE70:
 1561              		.size	MIDI1_UART_RXISR_EntryCallback, .-MIDI1_UART_RXISR_EntryCallback
 1562              		.section	.text.MIDI1_UART_RXISR_ExitCallback,"ax",%progbits
 1563              		.align	2
 1564              		.global	MIDI1_UART_RXISR_ExitCallback
 1565              		.thumb
 1566              		.thumb_func
 1567              		.type	MIDI1_UART_RXISR_ExitCallback, %function
 1568              	MIDI1_UART_RXISR_ExitCallback:
 1569              	.LFB71:
 627:main.c        **** 
 628:main.c        **** 
 629:main.c        **** /*******************************************************************************
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 40


 630:main.c        **** * Function Name: MIDI1_UART_RXISR_ExitCallback
 631:main.c        **** ********************************************************************************
 632:main.c        **** * Summary:  Turn the LED_InA off at the end of the MIDI1_UART_RXISR ISR  
 633:main.c        **** * when data is put in the USBFS_MIDI IN endpoint buffer.
 634:main.c        **** *
 635:main.c        **** *******************************************************************************/
 636:main.c        **** void MIDI1_UART_RXISR_ExitCallback(void)
 637:main.c        **** {
 1570              		.loc 1 637 0
 1571              		.cfi_startproc
 1572              		@ args = 0, pretend = 0, frame = 0
 1573              		@ frame_needed = 1, uses_anonymous_args = 0
 1574 0000 80B5     		push	{r7, lr}
 1575              		.cfi_def_cfa_offset 8
 1576              		.cfi_offset 7, -8
 1577              		.cfi_offset 14, -4
 1578 0002 00AF     		add	r7, sp, #0
 1579              		.cfi_def_cfa_register 7
 638:main.c        ****     #if (USB_EP_MANAGEMENT_DMA_AUTO) 
 639:main.c        ****         USB_MIDI_IN_Service();
 640:main.c        ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 641:main.c        ****     
 642:main.c        ****     LED_InA_Write(0);
 1580              		.loc 1 642 0
 1581 0004 0020     		movs	r0, #0
 1582 0006 FFF7FEFF 		bl	LED_InA_Write
 643:main.c        **** }
 1583              		.loc 1 643 0
 1584 000a 80BD     		pop	{r7, pc}
 1585              		.cfi_endproc
 1586              	.LFE71:
 1587              		.size	MIDI1_UART_RXISR_ExitCallback, .-MIDI1_UART_RXISR_ExitCallback
 1588              		.section	.text.MIDI2_UART_RXISR_EntryCallback,"ax",%progbits
 1589              		.align	2
 1590              		.global	MIDI2_UART_RXISR_EntryCallback
 1591              		.thumb
 1592              		.thumb_func
 1593              		.type	MIDI2_UART_RXISR_EntryCallback, %function
 1594              	MIDI2_UART_RXISR_EntryCallback:
 1595              	.LFB72:
 644:main.c        **** 
 645:main.c        **** 
 646:main.c        **** /*******************************************************************************
 647:main.c        **** * Function Name: MIDI2_UART_RXISR_EntryCallback
 648:main.c        **** ********************************************************************************
 649:main.c        **** * Summary:  Turn the LED_InB on at the beginning of the MIDI2_UART_RXISR ISR  
 650:main.c        **** * when data comes to UART2 to be put in the USBFS_MIDI IN endpoint  
 651:main.c        **** * buffer.
 652:main.c        **** *
 653:main.c        **** *******************************************************************************/
 654:main.c        **** void MIDI2_UART_RXISR_EntryCallback(void)
 655:main.c        **** {
 1596              		.loc 1 655 0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 0
 1599              		@ frame_needed = 1, uses_anonymous_args = 0
 1600 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 41


 1601              		.cfi_def_cfa_offset 8
 1602              		.cfi_offset 7, -8
 1603              		.cfi_offset 14, -4
 1604 0002 00AF     		add	r7, sp, #0
 1605              		.cfi_def_cfa_register 7
 656:main.c        ****     /* These LEDs indicate MIDI input activity */
 657:main.c        ****     LED_InB_Write(1);
 1606              		.loc 1 657 0
 1607 0004 0120     		movs	r0, #1
 1608 0006 FFF7FEFF 		bl	LED_InB_Write
 658:main.c        **** }
 1609              		.loc 1 658 0
 1610 000a 80BD     		pop	{r7, pc}
 1611              		.cfi_endproc
 1612              	.LFE72:
 1613              		.size	MIDI2_UART_RXISR_EntryCallback, .-MIDI2_UART_RXISR_EntryCallback
 1614              		.section	.text.MIDI2_UART_RXISR_ExitCallback,"ax",%progbits
 1615              		.align	2
 1616              		.global	MIDI2_UART_RXISR_ExitCallback
 1617              		.thumb
 1618              		.thumb_func
 1619              		.type	MIDI2_UART_RXISR_ExitCallback, %function
 1620              	MIDI2_UART_RXISR_ExitCallback:
 1621              	.LFB73:
 659:main.c        **** 
 660:main.c        **** 
 661:main.c        **** /*******************************************************************************
 662:main.c        **** * Function Name: MIDI2_UART_RXISR_ExitCallback
 663:main.c        **** ********************************************************************************
 664:main.c        **** * Summary:  Turn the LED_InB off at the end of the MIDI2_UART_RXISR ISR  
 665:main.c        **** * when data is put in the USBFS_MIDI IN endpoint buffer
 666:main.c        **** *
 667:main.c        **** *******************************************************************************/
 668:main.c        **** void MIDI2_UART_RXISR_ExitCallback(void)
 669:main.c        **** {
 1622              		.loc 1 669 0
 1623              		.cfi_startproc
 1624              		@ args = 0, pretend = 0, frame = 0
 1625              		@ frame_needed = 1, uses_anonymous_args = 0
 1626 0000 80B5     		push	{r7, lr}
 1627              		.cfi_def_cfa_offset 8
 1628              		.cfi_offset 7, -8
 1629              		.cfi_offset 14, -4
 1630 0002 00AF     		add	r7, sp, #0
 1631              		.cfi_def_cfa_register 7
 670:main.c        ****     #if (USB_EP_MANAGEMENT_DMA_AUTO) 
 671:main.c        ****         USB_MIDI_IN_Service();
 672:main.c        ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 673:main.c        ****     
 674:main.c        ****     LED_InB_Write(0);
 1632              		.loc 1 674 0
 1633 0004 0020     		movs	r0, #0
 1634 0006 FFF7FEFF 		bl	LED_InB_Write
 675:main.c        **** }
 1635              		.loc 1 675 0
 1636 000a 80BD     		pop	{r7, pc}
 1637              		.cfi_endproc
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 42


 1638              	.LFE73:
 1639              		.size	MIDI2_UART_RXISR_ExitCallback, .-MIDI2_UART_RXISR_ExitCallback
 1640              		.text
 1641              	.Letext0:
 1642              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1643              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1644              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1645              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1646              		.section	.debug_info,"",%progbits
 1647              	.Ldebug_info0:
 1648 0000 61020000 		.4byte	0x261
 1649 0004 0400     		.2byte	0x4
 1650 0006 00000000 		.4byte	.Ldebug_abbrev0
 1651 000a 04       		.byte	0x4
 1652 000b 01       		.uleb128 0x1
 1653 000c 53000000 		.4byte	.LASF38
 1654 0010 01       		.byte	0x1
 1655 0011 D2020000 		.4byte	.LASF39
 1656 0015 6C010000 		.4byte	.LASF40
 1657 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1658 001d 00000000 		.4byte	0
 1659 0021 00000000 		.4byte	.Ldebug_line0
 1660 0025 02       		.uleb128 0x2
 1661 0026 01       		.byte	0x1
 1662 0027 06       		.byte	0x6
 1663 0028 1A030000 		.4byte	.LASF0
 1664 002c 02       		.uleb128 0x2
 1665 002d 01       		.byte	0x1
 1666 002e 08       		.byte	0x8
 1667 002f 26010000 		.4byte	.LASF1
 1668 0033 02       		.uleb128 0x2
 1669 0034 02       		.byte	0x2
 1670 0035 05       		.byte	0x5
 1671 0036 01030000 		.4byte	.LASF2
 1672 003a 02       		.uleb128 0x2
 1673 003b 02       		.byte	0x2
 1674 003c 07       		.byte	0x7
 1675 003d 46010000 		.4byte	.LASF3
 1676 0041 03       		.uleb128 0x3
 1677 0042 2A000000 		.4byte	.LASF9
 1678 0046 02       		.byte	0x2
 1679 0047 3F       		.byte	0x3f
 1680 0048 4C000000 		.4byte	0x4c
 1681 004c 02       		.uleb128 0x2
 1682 004d 04       		.byte	0x4
 1683 004e 05       		.byte	0x5
 1684 004f 11030000 		.4byte	.LASF4
 1685 0053 02       		.uleb128 0x2
 1686 0054 04       		.byte	0x4
 1687 0055 07       		.byte	0x7
 1688 0056 34010000 		.4byte	.LASF5
 1689 005a 02       		.uleb128 0x2
 1690 005b 08       		.byte	0x8
 1691 005c 05       		.byte	0x5
 1692 005d 18010000 		.4byte	.LASF6
 1693 0061 02       		.uleb128 0x2
 1694 0062 08       		.byte	0x8
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 43


 1695 0063 07       		.byte	0x7
 1696 0064 32020000 		.4byte	.LASF7
 1697 0068 04       		.uleb128 0x4
 1698 0069 04       		.byte	0x4
 1699 006a 05       		.byte	0x5
 1700 006b 696E7400 		.ascii	"int\000"
 1701 006f 02       		.uleb128 0x2
 1702 0070 04       		.byte	0x4
 1703 0071 07       		.byte	0x7
 1704 0072 25020000 		.4byte	.LASF8
 1705 0076 03       		.uleb128 0x3
 1706 0077 9A020000 		.4byte	.LASF10
 1707 007b 03       		.byte	0x3
 1708 007c 2C       		.byte	0x2c
 1709 007d 41000000 		.4byte	0x41
 1710 0081 05       		.uleb128 0x5
 1711 0082 0B030000 		.4byte	.LASF11
 1712 0086 04       		.byte	0x4
 1713 0087 9201     		.2byte	0x192
 1714 0089 2C000000 		.4byte	0x2c
 1715 008d 02       		.uleb128 0x2
 1716 008e 04       		.byte	0x4
 1717 008f 04       		.byte	0x4
 1718 0090 12010000 		.4byte	.LASF12
 1719 0094 02       		.uleb128 0x2
 1720 0095 08       		.byte	0x8
 1721 0096 04       		.byte	0x4
 1722 0097 B7010000 		.4byte	.LASF13
 1723 009b 02       		.uleb128 0x2
 1724 009c 01       		.byte	0x1
 1725 009d 08       		.byte	0x8
 1726 009e D9020000 		.4byte	.LASF14
 1727 00a2 06       		.uleb128 0x6
 1728 00a3 81000000 		.4byte	0x81
 1729 00a7 02       		.uleb128 0x2
 1730 00a8 04       		.byte	0x4
 1731 00a9 07       		.byte	0x7
 1732 00aa A2020000 		.4byte	.LASF15
 1733 00ae 07       		.uleb128 0x7
 1734 00af 81000000 		.4byte	0x81
 1735 00b3 BE000000 		.4byte	0xbe
 1736 00b7 08       		.uleb128 0x8
 1737 00b8 A7000000 		.4byte	0xa7
 1738 00bc 03       		.byte	0x3
 1739 00bd 00       		.byte	0
 1740 00be 09       		.uleb128 0x9
 1741 00bf F6010000 		.4byte	.LASF20
 1742 00c3 01       		.byte	0x1
 1743 00c4 5B       		.byte	0x5b
 1744 00c5 00000000 		.4byte	.LFB63
 1745 00c9 30000000 		.4byte	.LFE63-.LFB63
 1746 00cd 01       		.uleb128 0x1
 1747 00ce 9C       		.byte	0x9c
 1748 00cf 0A       		.uleb128 0xa
 1749 00d0 BE010000 		.4byte	.LASF16
 1750 00d4 01       		.byte	0x1
 1751 00d5 72       		.byte	0x72
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 44


 1752 00d6 68000000 		.4byte	0x68
 1753 00da 00000000 		.4byte	.LFB64
 1754 00de 10020000 		.4byte	.LFE64-.LFB64
 1755 00e2 01       		.uleb128 0x1
 1756 00e3 9C       		.byte	0x9c
 1757 00e4 F7000000 		.4byte	0xf7
 1758 00e8 0B       		.uleb128 0xb
 1759 00e9 F9020000 		.4byte	.LASF19
 1760 00ed 01       		.byte	0x1
 1761 00ee 74       		.byte	0x74
 1762 00ef AE000000 		.4byte	0xae
 1763 00f3 02       		.uleb128 0x2
 1764 00f4 91       		.byte	0x91
 1765 00f5 74       		.sleb128 -12
 1766 00f6 00       		.byte	0
 1767 00f7 0C       		.uleb128 0xc
 1768 00f8 DE020000 		.4byte	.LASF17
 1769 00fc 01       		.byte	0x1
 1770 00fd 4301     		.2byte	0x143
 1771 00ff 00000000 		.4byte	.LFB65
 1772 0103 88070000 		.4byte	.LFE65-.LFB65
 1773 0107 01       		.uleb128 0x1
 1774 0108 9C       		.byte	0x9c
 1775 0109 2C010000 		.4byte	0x12c
 1776 010d 0D       		.uleb128 0xd
 1777 010e 59010000 		.4byte	.LASF18
 1778 0112 01       		.byte	0x1
 1779 0113 4301     		.2byte	0x143
 1780 0115 81000000 		.4byte	0x81
 1781 0119 02       		.uleb128 0x2
 1782 011a 91       		.byte	0x91
 1783 011b 77       		.sleb128 -9
 1784 011c 0D       		.uleb128 0xd
 1785 011d F9020000 		.4byte	.LASF19
 1786 0121 01       		.byte	0x1
 1787 0122 4301     		.2byte	0x143
 1788 0124 2C010000 		.4byte	0x12c
 1789 0128 02       		.uleb128 0x2
 1790 0129 91       		.byte	0x91
 1791 012a 70       		.sleb128 -16
 1792 012b 00       		.byte	0
 1793 012c 0E       		.uleb128 0xe
 1794 012d 04       		.byte	0x4
 1795 012e 81000000 		.4byte	0x81
 1796 0132 0F       		.uleb128 0xf
 1797 0133 FF010000 		.4byte	.LASF21
 1798 0137 01       		.byte	0x1
 1799 0138 3802     		.2byte	0x238
 1800 013a 00000000 		.4byte	.LFB66
 1801 013e 0C000000 		.4byte	.LFE66-.LFB66
 1802 0142 01       		.uleb128 0x1
 1803 0143 9C       		.byte	0x9c
 1804 0144 0F       		.uleb128 0xf
 1805 0145 26030000 		.4byte	.LASF22
 1806 0149 01       		.byte	0x1
 1807 014a 4502     		.2byte	0x245
 1808 014c 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 45


 1809 0150 0C000000 		.4byte	.LFE67-.LFB67
 1810 0154 01       		.uleb128 0x1
 1811 0155 9C       		.byte	0x9c
 1812 0156 10       		.uleb128 0x10
 1813 0157 C3010000 		.4byte	.LASF23
 1814 015b 01       		.byte	0x1
 1815 015c 5302     		.2byte	0x253
 1816 015e 00000000 		.4byte	.LFB68
 1817 0162 0C000000 		.4byte	.LFE68-.LFB68
 1818 0166 01       		.uleb128 0x1
 1819 0167 9C       		.byte	0x9c
 1820 0168 10       		.uleb128 0x10
 1821 0169 56020000 		.4byte	.LASF24
 1822 016d 01       		.byte	0x1
 1823 016e 6002     		.2byte	0x260
 1824 0170 00000000 		.4byte	.LFB69
 1825 0174 0C000000 		.4byte	.LFE69-.LFB69
 1826 0178 01       		.uleb128 0x1
 1827 0179 9C       		.byte	0x9c
 1828 017a 10       		.uleb128 0x10
 1829 017b 7B020000 		.4byte	.LASF25
 1830 017f 01       		.byte	0x1
 1831 0180 6E02     		.2byte	0x26e
 1832 0182 00000000 		.4byte	.LFB70
 1833 0186 0C000000 		.4byte	.LFE70-.LFB70
 1834 018a 01       		.uleb128 0x1
 1835 018b 9C       		.byte	0x9c
 1836 018c 10       		.uleb128 0x10
 1837 018d E1000000 		.4byte	.LASF26
 1838 0191 01       		.byte	0x1
 1839 0192 7C02     		.2byte	0x27c
 1840 0194 00000000 		.4byte	.LFB71
 1841 0198 0C000000 		.4byte	.LFE71-.LFB71
 1842 019c 01       		.uleb128 0x1
 1843 019d 9C       		.byte	0x9c
 1844 019e 10       		.uleb128 0x10
 1845 019f 34000000 		.4byte	.LASF27
 1846 01a3 01       		.byte	0x1
 1847 01a4 8E02     		.2byte	0x28e
 1848 01a6 00000000 		.4byte	.LFB72
 1849 01aa 0C000000 		.4byte	.LFE72-.LFB72
 1850 01ae 01       		.uleb128 0x1
 1851 01af 9C       		.byte	0x9c
 1852 01b0 10       		.uleb128 0x10
 1853 01b1 0C000000 		.4byte	.LASF28
 1854 01b5 01       		.byte	0x1
 1855 01b6 9C02     		.2byte	0x29c
 1856 01b8 00000000 		.4byte	.LFB73
 1857 01bc 0C000000 		.4byte	.LFE73-.LFB73
 1858 01c0 01       		.uleb128 0x1
 1859 01c1 9C       		.byte	0x9c
 1860 01c2 11       		.uleb128 0x11
 1861 01c3 BF020000 		.4byte	.LASF29
 1862 01c7 01       		.byte	0x1
 1863 01c8 43       		.byte	0x43
 1864 01c9 A2000000 		.4byte	0xa2
 1865 01cd 11       		.uleb128 0x11
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 46


 1866 01ce 4B030000 		.4byte	.LASF30
 1867 01d2 01       		.byte	0x1
 1868 01d3 44       		.byte	0x44
 1869 01d4 A2000000 		.4byte	0xa2
 1870 01d8 12       		.uleb128 0x12
 1871 01d9 5F010000 		.4byte	.LASF31
 1872 01dd 05       		.byte	0x5
 1873 01de 9606     		.2byte	0x696
 1874 01e0 E4010000 		.4byte	0x1e4
 1875 01e4 06       		.uleb128 0x6
 1876 01e5 76000000 		.4byte	0x76
 1877 01e9 07       		.uleb128 0x7
 1878 01ea 81000000 		.4byte	0x81
 1879 01ee F9010000 		.4byte	0x1f9
 1880 01f2 08       		.uleb128 0x8
 1881 01f3 A7000000 		.4byte	0xa7
 1882 01f7 0D       		.byte	0xd
 1883 01f8 00       		.byte	0
 1884 01f9 13       		.uleb128 0x13
 1885 01fa AB020000 		.4byte	.LASF32
 1886 01fe 01       		.byte	0x1
 1887 01ff 35       		.byte	0x35
 1888 0200 0A020000 		.4byte	0x20a
 1889 0204 05       		.uleb128 0x5
 1890 0205 03       		.byte	0x3
 1891 0206 00000000 		.4byte	MIDI_IDENTITY_REPLY
 1892 020a 14       		.uleb128 0x14
 1893 020b E9010000 		.4byte	0x1e9
 1894 020f 13       		.uleb128 0x13
 1895 0210 FF000000 		.4byte	.LASF33
 1896 0214 01       		.byte	0x1
 1897 0215 46       		.byte	0x46
 1898 0216 A2000000 		.4byte	0xa2
 1899 021a 05       		.uleb128 0x5
 1900 021b 03       		.byte	0x3
 1901 021c 00000000 		.4byte	usbActivityCounter
 1902 0220 13       		.uleb128 0x13
 1903 0221 49020000 		.4byte	.LASF34
 1904 0225 01       		.byte	0x1
 1905 0226 48       		.byte	0x48
 1906 0227 81000000 		.4byte	0x81
 1907 022b 05       		.uleb128 0x5
 1908 022c 03       		.byte	0x3
 1909 022d 00000000 		.4byte	csButtStates
 1910 0231 13       		.uleb128 0x13
 1911 0232 5E030000 		.4byte	.LASF35
 1912 0236 01       		.byte	0x1
 1913 0237 49       		.byte	0x49
 1914 0238 81000000 		.4byte	0x81
 1915 023c 05       		.uleb128 0x5
 1916 023d 03       		.byte	0x3
 1917 023e 00000000 		.4byte	csButtStatesOld
 1918 0242 13       		.uleb128 0x13
 1919 0243 E9010000 		.4byte	.LASF36
 1920 0247 01       		.byte	0x1
 1921 0248 4A       		.byte	0x4a
 1922 0249 81000000 		.4byte	0x81
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 47


 1923 024d 05       		.uleb128 0x5
 1924 024e 03       		.byte	0x3
 1925 024f 00000000 		.4byte	csButtChange
 1926 0253 13       		.uleb128 0x13
 1927 0254 00000000 		.4byte	.LASF37
 1928 0258 01       		.byte	0x1
 1929 0259 4B       		.byte	0x4b
 1930 025a 81000000 		.4byte	0x81
 1931 025e 05       		.uleb128 0x5
 1932 025f 03       		.byte	0x3
 1933 0260 00000000 		.4byte	inqFlagsOld
 1934 0264 00       		.byte	0
 1935              		.section	.debug_abbrev,"",%progbits
 1936              	.Ldebug_abbrev0:
 1937 0000 01       		.uleb128 0x1
 1938 0001 11       		.uleb128 0x11
 1939 0002 01       		.byte	0x1
 1940 0003 25       		.uleb128 0x25
 1941 0004 0E       		.uleb128 0xe
 1942 0005 13       		.uleb128 0x13
 1943 0006 0B       		.uleb128 0xb
 1944 0007 03       		.uleb128 0x3
 1945 0008 0E       		.uleb128 0xe
 1946 0009 1B       		.uleb128 0x1b
 1947 000a 0E       		.uleb128 0xe
 1948 000b 55       		.uleb128 0x55
 1949 000c 17       		.uleb128 0x17
 1950 000d 11       		.uleb128 0x11
 1951 000e 01       		.uleb128 0x1
 1952 000f 10       		.uleb128 0x10
 1953 0010 17       		.uleb128 0x17
 1954 0011 00       		.byte	0
 1955 0012 00       		.byte	0
 1956 0013 02       		.uleb128 0x2
 1957 0014 24       		.uleb128 0x24
 1958 0015 00       		.byte	0
 1959 0016 0B       		.uleb128 0xb
 1960 0017 0B       		.uleb128 0xb
 1961 0018 3E       		.uleb128 0x3e
 1962 0019 0B       		.uleb128 0xb
 1963 001a 03       		.uleb128 0x3
 1964 001b 0E       		.uleb128 0xe
 1965 001c 00       		.byte	0
 1966 001d 00       		.byte	0
 1967 001e 03       		.uleb128 0x3
 1968 001f 16       		.uleb128 0x16
 1969 0020 00       		.byte	0
 1970 0021 03       		.uleb128 0x3
 1971 0022 0E       		.uleb128 0xe
 1972 0023 3A       		.uleb128 0x3a
 1973 0024 0B       		.uleb128 0xb
 1974 0025 3B       		.uleb128 0x3b
 1975 0026 0B       		.uleb128 0xb
 1976 0027 49       		.uleb128 0x49
 1977 0028 13       		.uleb128 0x13
 1978 0029 00       		.byte	0
 1979 002a 00       		.byte	0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 48


 1980 002b 04       		.uleb128 0x4
 1981 002c 24       		.uleb128 0x24
 1982 002d 00       		.byte	0
 1983 002e 0B       		.uleb128 0xb
 1984 002f 0B       		.uleb128 0xb
 1985 0030 3E       		.uleb128 0x3e
 1986 0031 0B       		.uleb128 0xb
 1987 0032 03       		.uleb128 0x3
 1988 0033 08       		.uleb128 0x8
 1989 0034 00       		.byte	0
 1990 0035 00       		.byte	0
 1991 0036 05       		.uleb128 0x5
 1992 0037 16       		.uleb128 0x16
 1993 0038 00       		.byte	0
 1994 0039 03       		.uleb128 0x3
 1995 003a 0E       		.uleb128 0xe
 1996 003b 3A       		.uleb128 0x3a
 1997 003c 0B       		.uleb128 0xb
 1998 003d 3B       		.uleb128 0x3b
 1999 003e 05       		.uleb128 0x5
 2000 003f 49       		.uleb128 0x49
 2001 0040 13       		.uleb128 0x13
 2002 0041 00       		.byte	0
 2003 0042 00       		.byte	0
 2004 0043 06       		.uleb128 0x6
 2005 0044 35       		.uleb128 0x35
 2006 0045 00       		.byte	0
 2007 0046 49       		.uleb128 0x49
 2008 0047 13       		.uleb128 0x13
 2009 0048 00       		.byte	0
 2010 0049 00       		.byte	0
 2011 004a 07       		.uleb128 0x7
 2012 004b 01       		.uleb128 0x1
 2013 004c 01       		.byte	0x1
 2014 004d 49       		.uleb128 0x49
 2015 004e 13       		.uleb128 0x13
 2016 004f 01       		.uleb128 0x1
 2017 0050 13       		.uleb128 0x13
 2018 0051 00       		.byte	0
 2019 0052 00       		.byte	0
 2020 0053 08       		.uleb128 0x8
 2021 0054 21       		.uleb128 0x21
 2022 0055 00       		.byte	0
 2023 0056 49       		.uleb128 0x49
 2024 0057 13       		.uleb128 0x13
 2025 0058 2F       		.uleb128 0x2f
 2026 0059 0B       		.uleb128 0xb
 2027 005a 00       		.byte	0
 2028 005b 00       		.byte	0
 2029 005c 09       		.uleb128 0x9
 2030 005d 2E       		.uleb128 0x2e
 2031 005e 00       		.byte	0
 2032 005f 3F       		.uleb128 0x3f
 2033 0060 19       		.uleb128 0x19
 2034 0061 03       		.uleb128 0x3
 2035 0062 0E       		.uleb128 0xe
 2036 0063 3A       		.uleb128 0x3a
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 49


 2037 0064 0B       		.uleb128 0xb
 2038 0065 3B       		.uleb128 0x3b
 2039 0066 0B       		.uleb128 0xb
 2040 0067 27       		.uleb128 0x27
 2041 0068 19       		.uleb128 0x19
 2042 0069 11       		.uleb128 0x11
 2043 006a 01       		.uleb128 0x1
 2044 006b 12       		.uleb128 0x12
 2045 006c 06       		.uleb128 0x6
 2046 006d 40       		.uleb128 0x40
 2047 006e 18       		.uleb128 0x18
 2048 006f 9642     		.uleb128 0x2116
 2049 0071 19       		.uleb128 0x19
 2050 0072 00       		.byte	0
 2051 0073 00       		.byte	0
 2052 0074 0A       		.uleb128 0xa
 2053 0075 2E       		.uleb128 0x2e
 2054 0076 01       		.byte	0x1
 2055 0077 3F       		.uleb128 0x3f
 2056 0078 19       		.uleb128 0x19
 2057 0079 03       		.uleb128 0x3
 2058 007a 0E       		.uleb128 0xe
 2059 007b 3A       		.uleb128 0x3a
 2060 007c 0B       		.uleb128 0xb
 2061 007d 3B       		.uleb128 0x3b
 2062 007e 0B       		.uleb128 0xb
 2063 007f 49       		.uleb128 0x49
 2064 0080 13       		.uleb128 0x13
 2065 0081 11       		.uleb128 0x11
 2066 0082 01       		.uleb128 0x1
 2067 0083 12       		.uleb128 0x12
 2068 0084 06       		.uleb128 0x6
 2069 0085 40       		.uleb128 0x40
 2070 0086 18       		.uleb128 0x18
 2071 0087 9642     		.uleb128 0x2116
 2072 0089 19       		.uleb128 0x19
 2073 008a 01       		.uleb128 0x1
 2074 008b 13       		.uleb128 0x13
 2075 008c 00       		.byte	0
 2076 008d 00       		.byte	0
 2077 008e 0B       		.uleb128 0xb
 2078 008f 34       		.uleb128 0x34
 2079 0090 00       		.byte	0
 2080 0091 03       		.uleb128 0x3
 2081 0092 0E       		.uleb128 0xe
 2082 0093 3A       		.uleb128 0x3a
 2083 0094 0B       		.uleb128 0xb
 2084 0095 3B       		.uleb128 0x3b
 2085 0096 0B       		.uleb128 0xb
 2086 0097 49       		.uleb128 0x49
 2087 0098 13       		.uleb128 0x13
 2088 0099 02       		.uleb128 0x2
 2089 009a 18       		.uleb128 0x18
 2090 009b 00       		.byte	0
 2091 009c 00       		.byte	0
 2092 009d 0C       		.uleb128 0xc
 2093 009e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 50


 2094 009f 01       		.byte	0x1
 2095 00a0 3F       		.uleb128 0x3f
 2096 00a1 19       		.uleb128 0x19
 2097 00a2 03       		.uleb128 0x3
 2098 00a3 0E       		.uleb128 0xe
 2099 00a4 3A       		.uleb128 0x3a
 2100 00a5 0B       		.uleb128 0xb
 2101 00a6 3B       		.uleb128 0x3b
 2102 00a7 05       		.uleb128 0x5
 2103 00a8 27       		.uleb128 0x27
 2104 00a9 19       		.uleb128 0x19
 2105 00aa 11       		.uleb128 0x11
 2106 00ab 01       		.uleb128 0x1
 2107 00ac 12       		.uleb128 0x12
 2108 00ad 06       		.uleb128 0x6
 2109 00ae 40       		.uleb128 0x40
 2110 00af 18       		.uleb128 0x18
 2111 00b0 9642     		.uleb128 0x2116
 2112 00b2 19       		.uleb128 0x19
 2113 00b3 01       		.uleb128 0x1
 2114 00b4 13       		.uleb128 0x13
 2115 00b5 00       		.byte	0
 2116 00b6 00       		.byte	0
 2117 00b7 0D       		.uleb128 0xd
 2118 00b8 05       		.uleb128 0x5
 2119 00b9 00       		.byte	0
 2120 00ba 03       		.uleb128 0x3
 2121 00bb 0E       		.uleb128 0xe
 2122 00bc 3A       		.uleb128 0x3a
 2123 00bd 0B       		.uleb128 0xb
 2124 00be 3B       		.uleb128 0x3b
 2125 00bf 05       		.uleb128 0x5
 2126 00c0 49       		.uleb128 0x49
 2127 00c1 13       		.uleb128 0x13
 2128 00c2 02       		.uleb128 0x2
 2129 00c3 18       		.uleb128 0x18
 2130 00c4 00       		.byte	0
 2131 00c5 00       		.byte	0
 2132 00c6 0E       		.uleb128 0xe
 2133 00c7 0F       		.uleb128 0xf
 2134 00c8 00       		.byte	0
 2135 00c9 0B       		.uleb128 0xb
 2136 00ca 0B       		.uleb128 0xb
 2137 00cb 49       		.uleb128 0x49
 2138 00cc 13       		.uleb128 0x13
 2139 00cd 00       		.byte	0
 2140 00ce 00       		.byte	0
 2141 00cf 0F       		.uleb128 0xf
 2142 00d0 2E       		.uleb128 0x2e
 2143 00d1 00       		.byte	0
 2144 00d2 3F       		.uleb128 0x3f
 2145 00d3 19       		.uleb128 0x19
 2146 00d4 03       		.uleb128 0x3
 2147 00d5 0E       		.uleb128 0xe
 2148 00d6 3A       		.uleb128 0x3a
 2149 00d7 0B       		.uleb128 0xb
 2150 00d8 3B       		.uleb128 0x3b
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 51


 2151 00d9 05       		.uleb128 0x5
 2152 00da 27       		.uleb128 0x27
 2153 00db 19       		.uleb128 0x19
 2154 00dc 11       		.uleb128 0x11
 2155 00dd 01       		.uleb128 0x1
 2156 00de 12       		.uleb128 0x12
 2157 00df 06       		.uleb128 0x6
 2158 00e0 40       		.uleb128 0x40
 2159 00e1 18       		.uleb128 0x18
 2160 00e2 9742     		.uleb128 0x2117
 2161 00e4 19       		.uleb128 0x19
 2162 00e5 00       		.byte	0
 2163 00e6 00       		.byte	0
 2164 00e7 10       		.uleb128 0x10
 2165 00e8 2E       		.uleb128 0x2e
 2166 00e9 00       		.byte	0
 2167 00ea 3F       		.uleb128 0x3f
 2168 00eb 19       		.uleb128 0x19
 2169 00ec 03       		.uleb128 0x3
 2170 00ed 0E       		.uleb128 0xe
 2171 00ee 3A       		.uleb128 0x3a
 2172 00ef 0B       		.uleb128 0xb
 2173 00f0 3B       		.uleb128 0x3b
 2174 00f1 05       		.uleb128 0x5
 2175 00f2 27       		.uleb128 0x27
 2176 00f3 19       		.uleb128 0x19
 2177 00f4 11       		.uleb128 0x11
 2178 00f5 01       		.uleb128 0x1
 2179 00f6 12       		.uleb128 0x12
 2180 00f7 06       		.uleb128 0x6
 2181 00f8 40       		.uleb128 0x40
 2182 00f9 18       		.uleb128 0x18
 2183 00fa 9642     		.uleb128 0x2116
 2184 00fc 19       		.uleb128 0x19
 2185 00fd 00       		.byte	0
 2186 00fe 00       		.byte	0
 2187 00ff 11       		.uleb128 0x11
 2188 0100 34       		.uleb128 0x34
 2189 0101 00       		.byte	0
 2190 0102 03       		.uleb128 0x3
 2191 0103 0E       		.uleb128 0xe
 2192 0104 3A       		.uleb128 0x3a
 2193 0105 0B       		.uleb128 0xb
 2194 0106 3B       		.uleb128 0x3b
 2195 0107 0B       		.uleb128 0xb
 2196 0108 49       		.uleb128 0x49
 2197 0109 13       		.uleb128 0x13
 2198 010a 3F       		.uleb128 0x3f
 2199 010b 19       		.uleb128 0x19
 2200 010c 3C       		.uleb128 0x3c
 2201 010d 19       		.uleb128 0x19
 2202 010e 00       		.byte	0
 2203 010f 00       		.byte	0
 2204 0110 12       		.uleb128 0x12
 2205 0111 34       		.uleb128 0x34
 2206 0112 00       		.byte	0
 2207 0113 03       		.uleb128 0x3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 52


 2208 0114 0E       		.uleb128 0xe
 2209 0115 3A       		.uleb128 0x3a
 2210 0116 0B       		.uleb128 0xb
 2211 0117 3B       		.uleb128 0x3b
 2212 0118 05       		.uleb128 0x5
 2213 0119 49       		.uleb128 0x49
 2214 011a 13       		.uleb128 0x13
 2215 011b 3F       		.uleb128 0x3f
 2216 011c 19       		.uleb128 0x19
 2217 011d 3C       		.uleb128 0x3c
 2218 011e 19       		.uleb128 0x19
 2219 011f 00       		.byte	0
 2220 0120 00       		.byte	0
 2221 0121 13       		.uleb128 0x13
 2222 0122 34       		.uleb128 0x34
 2223 0123 00       		.byte	0
 2224 0124 03       		.uleb128 0x3
 2225 0125 0E       		.uleb128 0xe
 2226 0126 3A       		.uleb128 0x3a
 2227 0127 0B       		.uleb128 0xb
 2228 0128 3B       		.uleb128 0x3b
 2229 0129 0B       		.uleb128 0xb
 2230 012a 49       		.uleb128 0x49
 2231 012b 13       		.uleb128 0x13
 2232 012c 3F       		.uleb128 0x3f
 2233 012d 19       		.uleb128 0x19
 2234 012e 02       		.uleb128 0x2
 2235 012f 18       		.uleb128 0x18
 2236 0130 00       		.byte	0
 2237 0131 00       		.byte	0
 2238 0132 14       		.uleb128 0x14
 2239 0133 26       		.uleb128 0x26
 2240 0134 00       		.byte	0
 2241 0135 49       		.uleb128 0x49
 2242 0136 13       		.uleb128 0x13
 2243 0137 00       		.byte	0
 2244 0138 00       		.byte	0
 2245 0139 00       		.byte	0
 2246              		.section	.debug_aranges,"",%progbits
 2247 0000 6C000000 		.4byte	0x6c
 2248 0004 0200     		.2byte	0x2
 2249 0006 00000000 		.4byte	.Ldebug_info0
 2250 000a 04       		.byte	0x4
 2251 000b 00       		.byte	0
 2252 000c 0000     		.2byte	0
 2253 000e 0000     		.2byte	0
 2254 0010 00000000 		.4byte	.LFB63
 2255 0014 30000000 		.4byte	.LFE63-.LFB63
 2256 0018 00000000 		.4byte	.LFB64
 2257 001c 10020000 		.4byte	.LFE64-.LFB64
 2258 0020 00000000 		.4byte	.LFB65
 2259 0024 88070000 		.4byte	.LFE65-.LFB65
 2260 0028 00000000 		.4byte	.LFB66
 2261 002c 0C000000 		.4byte	.LFE66-.LFB66
 2262 0030 00000000 		.4byte	.LFB67
 2263 0034 0C000000 		.4byte	.LFE67-.LFB67
 2264 0038 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 53


 2265 003c 0C000000 		.4byte	.LFE68-.LFB68
 2266 0040 00000000 		.4byte	.LFB69
 2267 0044 0C000000 		.4byte	.LFE69-.LFB69
 2268 0048 00000000 		.4byte	.LFB70
 2269 004c 0C000000 		.4byte	.LFE70-.LFB70
 2270 0050 00000000 		.4byte	.LFB71
 2271 0054 0C000000 		.4byte	.LFE71-.LFB71
 2272 0058 00000000 		.4byte	.LFB72
 2273 005c 0C000000 		.4byte	.LFE72-.LFB72
 2274 0060 00000000 		.4byte	.LFB73
 2275 0064 0C000000 		.4byte	.LFE73-.LFB73
 2276 0068 00000000 		.4byte	0
 2277 006c 00000000 		.4byte	0
 2278              		.section	.debug_ranges,"",%progbits
 2279              	.Ldebug_ranges0:
 2280 0000 00000000 		.4byte	.LFB63
 2281 0004 30000000 		.4byte	.LFE63
 2282 0008 00000000 		.4byte	.LFB64
 2283 000c 10020000 		.4byte	.LFE64
 2284 0010 00000000 		.4byte	.LFB65
 2285 0014 88070000 		.4byte	.LFE65
 2286 0018 00000000 		.4byte	.LFB66
 2287 001c 0C000000 		.4byte	.LFE66
 2288 0020 00000000 		.4byte	.LFB67
 2289 0024 0C000000 		.4byte	.LFE67
 2290 0028 00000000 		.4byte	.LFB68
 2291 002c 0C000000 		.4byte	.LFE68
 2292 0030 00000000 		.4byte	.LFB69
 2293 0034 0C000000 		.4byte	.LFE69
 2294 0038 00000000 		.4byte	.LFB70
 2295 003c 0C000000 		.4byte	.LFE70
 2296 0040 00000000 		.4byte	.LFB71
 2297 0044 0C000000 		.4byte	.LFE71
 2298 0048 00000000 		.4byte	.LFB72
 2299 004c 0C000000 		.4byte	.LFE72
 2300 0050 00000000 		.4byte	.LFB73
 2301 0054 0C000000 		.4byte	.LFE73
 2302 0058 00000000 		.4byte	0
 2303 005c 00000000 		.4byte	0
 2304              		.section	.debug_line,"",%progbits
 2305              	.Ldebug_line0:
 2306 0000 DE020000 		.section	.debug_str,"MS",%progbits,1
 2306      02004701 
 2306      00000201 
 2306      FB0E0D00 
 2306      01010101 
 2307              	.LASF37:
 2308 0000 696E7146 		.ascii	"inqFlagsOld\000"
 2308      6C616773 
 2308      4F6C6400 
 2309              	.LASF28:
 2310 000c 4D494449 		.ascii	"MIDI2_UART_RXISR_ExitCallback\000"
 2310      325F5541 
 2310      52545F52 
 2310      58495352 
 2310      5F457869 
 2311              	.LASF9:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 54


 2312 002a 5F5F696E 		.ascii	"__int32_t\000"
 2312      7433325F 
 2312      7400
 2313              	.LASF27:
 2314 0034 4D494449 		.ascii	"MIDI2_UART_RXISR_EntryCallback\000"
 2314      325F5541 
 2314      52545F52 
 2314      58495352 
 2314      5F456E74 
 2315              	.LASF38:
 2316 0053 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2316      4320342E 
 2316      392E3320 
 2316      32303135 
 2316      30333033 
 2317 0086 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2317      20726576 
 2317      6973696F 
 2317      6E203232 
 2317      31323230 
 2318 00b9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2318      66756E63 
 2318      74696F6E 
 2318      2D736563 
 2318      74696F6E 
 2319              	.LASF26:
 2320 00e1 4D494449 		.ascii	"MIDI1_UART_RXISR_ExitCallback\000"
 2320      315F5541 
 2320      52545F52 
 2320      58495352 
 2320      5F457869 
 2321              	.LASF33:
 2322 00ff 75736241 		.ascii	"usbActivityCounter\000"
 2322      63746976 
 2322      69747943 
 2322      6F756E74 
 2322      657200
 2323              	.LASF12:
 2324 0112 666C6F61 		.ascii	"float\000"
 2324      7400
 2325              	.LASF6:
 2326 0118 6C6F6E67 		.ascii	"long long int\000"
 2326      206C6F6E 
 2326      6720696E 
 2326      7400
 2327              	.LASF1:
 2328 0126 756E7369 		.ascii	"unsigned char\000"
 2328      676E6564 
 2328      20636861 
 2328      7200
 2329              	.LASF5:
 2330 0134 6C6F6E67 		.ascii	"long unsigned int\000"
 2330      20756E73 
 2330      69676E65 
 2330      6420696E 
 2330      7400
 2331              	.LASF3:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 55


 2332 0146 73686F72 		.ascii	"short unsigned int\000"
 2332      7420756E 
 2332      7369676E 
 2332      65642069 
 2332      6E7400
 2333              	.LASF18:
 2334 0159 6361626C 		.ascii	"cable\000"
 2334      6500
 2335              	.LASF31:
 2336 015f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2336      52784275 
 2336      66666572 
 2336      00
 2337              	.LASF40:
 2338 016c 433A5C55 		.ascii	"C:\\Users\\214016586\\Documents\\GitHub\\Crumar-Acc"
 2338      73657273 
 2338      5C323134 
 2338      30313635 
 2338      38365C44 
 2339 019a 6F646572 		.ascii	"oder-Midi\\Accoder_MIDI.cydsn\000"
 2339      2D4D6964 
 2339      695C4163 
 2339      636F6465 
 2339      725F4D49 
 2340              	.LASF13:
 2341 01b7 646F7562 		.ascii	"double\000"
 2341      6C6500
 2342              	.LASF16:
 2343 01be 6D61696E 		.ascii	"main\000"
 2343      00
 2344              	.LASF23:
 2345 01c3 5553425F 		.ascii	"USB_MIDI2_ProcessUsbOut_EntryCallback\000"
 2345      4D494449 
 2345      325F5072 
 2345      6F636573 
 2345      73557362 
 2346              	.LASF36:
 2347 01e9 63734275 		.ascii	"csButtChange\000"
 2347      74744368 
 2347      616E6765 
 2347      00
 2348              	.LASF20:
 2349 01f6 536C6565 		.ascii	"SleepIsr\000"
 2349      70497372 
 2349      00
 2350              	.LASF21:
 2351 01ff 5553425F 		.ascii	"USB_MIDI1_ProcessUsbOut_EntryCallback\000"
 2351      4D494449 
 2351      315F5072 
 2351      6F636573 
 2351      73557362 
 2352              	.LASF8:
 2353 0225 756E7369 		.ascii	"unsigned int\000"
 2353      676E6564 
 2353      20696E74 
 2353      00
 2354              	.LASF7:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 56


 2355 0232 6C6F6E67 		.ascii	"long long unsigned int\000"
 2355      206C6F6E 
 2355      6720756E 
 2355      7369676E 
 2355      65642069 
 2356              	.LASF34:
 2357 0249 63734275 		.ascii	"csButtStates\000"
 2357      74745374 
 2357      61746573 
 2357      00
 2358              	.LASF24:
 2359 0256 5553425F 		.ascii	"USB_MIDI2_ProcessUsbOut_ExitCallback\000"
 2359      4D494449 
 2359      325F5072 
 2359      6F636573 
 2359      73557362 
 2360              	.LASF25:
 2361 027b 4D494449 		.ascii	"MIDI1_UART_RXISR_EntryCallback\000"
 2361      315F5541 
 2361      52545F52 
 2361      58495352 
 2361      5F456E74 
 2362              	.LASF10:
 2363 029a 696E7433 		.ascii	"int32_t\000"
 2363      325F7400 
 2364              	.LASF15:
 2365 02a2 73697A65 		.ascii	"sizetype\000"
 2365      74797065 
 2365      00
 2366              	.LASF32:
 2367 02ab 4D494449 		.ascii	"MIDI_IDENTITY_REPLY\000"
 2367      5F494445 
 2367      4E544954 
 2367      595F5245 
 2367      504C5900 
 2368              	.LASF29:
 2369 02bf 5553425F 		.ascii	"USB_MIDI1_InqFlags\000"
 2369      4D494449 
 2369      315F496E 
 2369      71466C61 
 2369      677300
 2370              	.LASF39:
 2371 02d2 6D61696E 		.ascii	"main.c\000"
 2371      2E6300
 2372              	.LASF14:
 2373 02d9 63686172 		.ascii	"char\000"
 2373      00
 2374              	.LASF17:
 2375 02de 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 2375      63616C6C 
 2375      6261636B 
 2375      4C6F6361 
 2375      6C4D6964 
 2376              	.LASF19:
 2377 02f9 6D696469 		.ascii	"midiMsg\000"
 2377      4D736700 
 2378              	.LASF2:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccBUJGUf.s 			page 57


 2379 0301 73686F72 		.ascii	"short int\000"
 2379      7420696E 
 2379      7400
 2380              	.LASF11:
 2381 030b 75696E74 		.ascii	"uint8\000"
 2381      3800
 2382              	.LASF4:
 2383 0311 6C6F6E67 		.ascii	"long int\000"
 2383      20696E74 
 2383      00
 2384              	.LASF0:
 2385 031a 7369676E 		.ascii	"signed char\000"
 2385      65642063 
 2385      68617200 
 2386              	.LASF22:
 2387 0326 5553425F 		.ascii	"USB_MIDI1_ProcessUsbOut_ExitCallback\000"
 2387      4D494449 
 2387      315F5072 
 2387      6F636573 
 2387      73557362 
 2388              	.LASF30:
 2389 034b 5553425F 		.ascii	"USB_MIDI2_InqFlags\000"
 2389      4D494449 
 2389      325F496E 
 2389      71466C61 
 2389      677300
 2390              	.LASF35:
 2391 035e 63734275 		.ascii	"csButtStatesOld\000"
 2391      74745374 
 2391      61746573 
 2391      4F6C6400 
 2392              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
