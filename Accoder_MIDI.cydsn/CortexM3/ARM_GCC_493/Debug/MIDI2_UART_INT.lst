ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"MIDI2_UART_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.MIDI2_UART_RXISR,"ax",%progbits
  19              		.align	2
  20              		.global	MIDI2_UART_RXISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	MIDI2_UART_RXISR, %function
  24              	MIDI2_UART_RXISR:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\MIDI2_UART_INT.c"
   1:Generated_Source\PSoC5/MIDI2_UART_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/MIDI2_UART_INT.c **** * File Name: MIDI2_UARTINT.c
   3:Generated_Source\PSoC5/MIDI2_UART_INT.c **** * Version 2.50
   4:Generated_Source\PSoC5/MIDI2_UART_INT.c **** *
   5:Generated_Source\PSoC5/MIDI2_UART_INT.c **** * Description:
   6:Generated_Source\PSoC5/MIDI2_UART_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:Generated_Source\PSoC5/MIDI2_UART_INT.c **** *
   8:Generated_Source\PSoC5/MIDI2_UART_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC5/MIDI2_UART_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC5/MIDI2_UART_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC5/MIDI2_UART_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC5/MIDI2_UART_INT.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC5/MIDI2_UART_INT.c **** *******************************************************************************/
  14:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
  15:Generated_Source\PSoC5/MIDI2_UART_INT.c **** #include "MIDI2_UART.h"
  16:Generated_Source\PSoC5/MIDI2_UART_INT.c **** #include "cyapicallbacks.h"
  17:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
  18:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
  19:Generated_Source\PSoC5/MIDI2_UART_INT.c **** /***************************************
  20:Generated_Source\PSoC5/MIDI2_UART_INT.c **** * Custom Declarations
  21:Generated_Source\PSoC5/MIDI2_UART_INT.c **** ***************************************/
  22:Generated_Source\PSoC5/MIDI2_UART_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  23:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
  24:Generated_Source\PSoC5/MIDI2_UART_INT.c **** /* `#END` */
  25:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
  26:Generated_Source\PSoC5/MIDI2_UART_INT.c **** #if (MIDI2_UART_RX_INTERRUPT_ENABLED && (MIDI2_UART_RX_ENABLED || MIDI2_UART_HD_ENABLED))
  27:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     /*******************************************************************************
  28:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     * Function Name: MIDI2_UART_RXISR
  29:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     ********************************************************************************
  30:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *
  31:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     * Summary:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 2


  32:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  33:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *
  34:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     * Parameters:
  35:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *  None.
  36:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *
  37:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     * Return:
  38:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *  None.
  39:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *
  40:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     * Global Variables:
  41:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *  MIDI2_UART_rxBuffer - RAM buffer pointer for save received data.
  42:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *  MIDI2_UART_rxBufferWrite - cyclic index for write to rxBuffer,
  43:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *     increments after each byte saved to buffer.
  44:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *  MIDI2_UART_rxBufferRead - cyclic index for read from rxBuffer,
  45:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *     checked to detect overflow condition.
  46:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *  MIDI2_UART_rxBufferOverflow - software overflow flag. Set to one
  47:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *     when MIDI2_UART_rxBufferWrite index overtakes
  48:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *     MIDI2_UART_rxBufferRead index.
  49:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *  MIDI2_UART_rxBufferLoopDetect - additional variable to detect overflow.
  50:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *     Set to one when MIDI2_UART_rxBufferWrite is equal to
  51:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *    MIDI2_UART_rxBufferRead
  52:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *  MIDI2_UART_rxAddressMode - this variable contains the Address mode,
  53:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  54:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *  MIDI2_UART_rxAddressDetected - set to 1 when correct address received,
  55:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  56:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  57:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *
  58:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *******************************************************************************/
  59:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     CY_ISR(MIDI2_UART_RXISR)
  60:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     {
  27              		.loc 1 60 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  61:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         uint8 readData;
  62:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         uint8 readStatus;
  63:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         uint8 increment_pointer = 0u;
  39              		.loc 1 63 0
  40 0006 0023     		movs	r3, #0
  41 0008 FB71     		strb	r3, [r7, #7]
  64:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
  65:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #if(CY_PSOC3)
  66:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         uint8 int_en;
  67:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #endif /* (CY_PSOC3) */
  68:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
  69:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #ifdef MIDI2_UART_RXISR_ENTRY_CALLBACK
  70:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         MIDI2_UART_RXISR_EntryCallback();
  42              		.loc 1 70 0
  43 000a FFF7FEFF 		bl	MIDI2_UART_RXISR_EntryCallback
  44              	.L6:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 3


  71:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #endif /* MIDI2_UART_RXISR_ENTRY_CALLBACK */
  72:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
  73:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         /* User code required at start of ISR */
  74:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         /* `#START MIDI2_UART_RXISR_START` */
  75:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
  76:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         /* `#END` */
  77:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
  78:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  79:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         int_en = EA;
  80:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         CyGlobalIntEnable;
  81:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #endif /* (CY_PSOC3) */
  82:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
  83:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         do
  84:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         {
  85:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             /* Read receiver status register */
  86:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             readStatus = MIDI2_UART_RXSTATUS_REG;
  45              		.loc 1 86 0
  46 000e 2B4B     		ldr	r3, .L7
  47 0010 1B78     		ldrb	r3, [r3]
  48 0012 BB71     		strb	r3, [r7, #6]
  87:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  88:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             *  of the user code in MIDI2_UART_RXISR_ERROR` section. 
  89:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             */
  90:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             readData = readStatus;
  49              		.loc 1 90 0
  50 0014 BB79     		ldrb	r3, [r7, #6]
  51 0016 7B71     		strb	r3, [r7, #5]
  91:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
  92:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             if((readStatus & (MIDI2_UART_RX_STS_BREAK | 
  93:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                             MIDI2_UART_RX_STS_PAR_ERROR |
  94:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                             MIDI2_UART_RX_STS_STOP_ERROR | 
  95:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                             MIDI2_UART_RX_STS_OVERRUN)) != 0u)
  52              		.loc 1 95 0
  53 0018 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  54 001a 03F01E03 		and	r3, r3, #30
  92:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                             MIDI2_UART_RX_STS_PAR_ERROR |
  55              		.loc 1 92 0
  56 001e 002B     		cmp	r3, #0
  57 0020 0BD0     		beq	.L2
  96:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             {
  97:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 /* ERROR handling. */
  98:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 MIDI2_UART_errorStatus |= readStatus & ( MIDI2_UART_RX_STS_BREAK | 
  58              		.loc 1 98 0
  59 0022 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  60 0024 03F01E03 		and	r3, r3, #30
  61 0028 DAB2     		uxtb	r2, r3
  62 002a 254B     		ldr	r3, .L7+4
  63 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  64 002e DBB2     		uxtb	r3, r3
  65 0030 1343     		orrs	r3, r3, r2
  66 0032 DBB2     		uxtb	r3, r3
  67 0034 DAB2     		uxtb	r2, r3
  68 0036 224B     		ldr	r3, .L7+4
  69 0038 1A70     		strb	r2, [r3]
  70              	.L2:
  99:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                                                             MIDI2_UART_RX_STS_PAR_ERROR | 
 100:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                                                             MIDI2_UART_RX_STS_STOP_ERROR | 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 4


 101:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                                                             MIDI2_UART_RX_STS_OVERRUN);
 102:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 /* `#START MIDI2_UART_RXISR_ERROR` */
 103:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 104:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 /* `#END` */
 105:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 
 106:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             #ifdef MIDI2_UART_RXISR_ERROR_CALLBACK
 107:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 MIDI2_UART_RXISR_ERROR_Callback();
 108:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             #endif /* MIDI2_UART_RXISR_ERROR_CALLBACK */
 109:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             }
 110:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             
 111:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             if((readStatus & MIDI2_UART_RX_STS_FIFO_NOTEMPTY) != 0u)
  71              		.loc 1 111 0
  72 003a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  73 003c 03F02003 		and	r3, r3, #32
  74 0040 002B     		cmp	r3, #0
  75 0042 30D0     		beq	.L3
 112:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             {
 113:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 /* Read data from the RX data register */
 114:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 readData = MIDI2_UART_RXDATA_REG;
  76              		.loc 1 114 0
  77 0044 1F4B     		ldr	r3, .L7+8
  78 0046 1B78     		ldrb	r3, [r3]
  79 0048 7B71     		strb	r3, [r7, #5]
 115:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             #if (MIDI2_UART_RXHW_ADDRESS_ENABLED)
 116:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 if(MIDI2_UART_rxAddressMode == (uint8)MIDI2_UART__B_UART__AM_SW_DETECT_TO_BUFFER)
 117:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 {
 118:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     if((readStatus & MIDI2_UART_RX_STS_MRKSPC) != 0u)
 119:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     {
 120:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                         if ((readStatus & MIDI2_UART_RX_STS_ADDR_MATCH) != 0u)
 121:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                         {
 122:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                             MIDI2_UART_rxAddressDetected = 1u;
 123:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                         }
 124:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                         else
 125:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                         {
 126:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                             MIDI2_UART_rxAddressDetected = 0u;
 127:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                         }
 128:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     }
 129:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     if(MIDI2_UART_rxAddressDetected != 0u)
 130:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     {   /* Store only addressed data */
 131:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                         MIDI2_UART_rxBuffer[MIDI2_UART_rxBufferWrite] = readData;
 132:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                         increment_pointer = 1u;
 133:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     }
 134:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 }
 135:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 else /* Without software addressing */
 136:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 {
 137:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     MIDI2_UART_rxBuffer[MIDI2_UART_rxBufferWrite] = readData;
 138:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     increment_pointer = 1u;
 139:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 }
 140:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             #else  /* Without addressing */
 141:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 MIDI2_UART_rxBuffer[MIDI2_UART_rxBufferWrite] = readData;
  80              		.loc 1 141 0
  81 004a 1F4B     		ldr	r3, .L7+12
  82 004c 1B78     		ldrb	r3, [r3]
  83 004e DBB2     		uxtb	r3, r3
  84 0050 1946     		mov	r1, r3
  85 0052 1E4A     		ldr	r2, .L7+16
  86 0054 7B79     		ldrb	r3, [r7, #5]
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 5


  87 0056 5354     		strb	r3, [r2, r1]
 142:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 increment_pointer = 1u;
  88              		.loc 1 142 0
  89 0058 0123     		movs	r3, #1
  90 005a FB71     		strb	r3, [r7, #7]
 143:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             #endif /* (MIDI2_UART_RXHW_ADDRESS_ENABLED) */
 144:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 145:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 146:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 if(increment_pointer != 0u)
  91              		.loc 1 146 0
  92 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  93 005e 002B     		cmp	r3, #0
  94 0060 21D0     		beq	.L3
 147:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 {
 148:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     if(MIDI2_UART_rxBufferLoopDetect != 0u)
  95              		.loc 1 148 0
  96 0062 1B4B     		ldr	r3, .L7+20
  97 0064 1B78     		ldrb	r3, [r3]
  98 0066 DBB2     		uxtb	r3, r3
  99 0068 002B     		cmp	r3, #0
 100 006a 02D0     		beq	.L4
 149:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     {   /* Set Software Buffer status Overflow */
 150:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                         MIDI2_UART_rxBufferOverflow = 1u;
 101              		.loc 1 150 0
 102 006c 194B     		ldr	r3, .L7+24
 103 006e 0122     		movs	r2, #1
 104 0070 1A70     		strb	r2, [r3]
 105              	.L4:
 151:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     }
 152:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     /* Set next pointer. */
 153:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     MIDI2_UART_rxBufferWrite++;
 106              		.loc 1 153 0
 107 0072 154B     		ldr	r3, .L7+12
 108 0074 1B78     		ldrb	r3, [r3]
 109 0076 DBB2     		uxtb	r3, r3
 110 0078 0133     		adds	r3, r3, #1
 111 007a DAB2     		uxtb	r2, r3
 112 007c 124B     		ldr	r3, .L7+12
 113 007e 1A70     		strb	r2, [r3]
 154:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 155:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     /* Check pointer for a loop condition */
 156:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     if(MIDI2_UART_rxBufferWrite >= MIDI2_UART_RX_BUFFER_SIZE)
 114              		.loc 1 156 0
 115 0080 114B     		ldr	r3, .L7+12
 116 0082 1B78     		ldrb	r3, [r3]
 117 0084 DBB2     		uxtb	r3, r3
 118 0086 FF2B     		cmp	r3, #255
 119 0088 02D1     		bne	.L5
 157:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     {
 158:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                         MIDI2_UART_rxBufferWrite = 0u;
 120              		.loc 1 158 0
 121 008a 0F4B     		ldr	r3, .L7+12
 122 008c 0022     		movs	r2, #0
 123 008e 1A70     		strb	r2, [r3]
 124              	.L5:
 159:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     }
 160:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 6


 161:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     /* Detect pre-overload condition and set flag */
 162:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     if(MIDI2_UART_rxBufferWrite == MIDI2_UART_rxBufferRead)
 125              		.loc 1 162 0
 126 0090 0D4B     		ldr	r3, .L7+12
 127 0092 1B78     		ldrb	r3, [r3]
 128 0094 DAB2     		uxtb	r2, r3
 129 0096 104B     		ldr	r3, .L7+28
 130 0098 1B78     		ldrb	r3, [r3]
 131 009a DBB2     		uxtb	r3, r3
 132 009c 9A42     		cmp	r2, r3
 133 009e 02D1     		bne	.L3
 163:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     {
 164:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                         MIDI2_UART_rxBufferLoopDetect = 1u;
 134              		.loc 1 164 0
 135 00a0 0B4B     		ldr	r3, .L7+20
 136 00a2 0122     		movs	r2, #1
 137 00a4 1A70     		strb	r2, [r3]
 138              	.L3:
 165:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                         /* When Hardware Flow Control selected */
 166:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                         #if (MIDI2_UART_FLOW_CONTROL != 0u)
 167:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 168:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                             MIDI2_UART_RXSTATUS_MASK_REG  &= (uint8)~MIDI2_UART_RX_STS_FIFO_NOTEMPT
 169:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                             CyIntClearPending(MIDI2_UART_RX_VECT_NUM);
 170:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 171:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                         #endif /* (MIDI2_UART_FLOW_CONTROL != 0u) */
 172:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                     }
 173:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 }
 174:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             }
 175:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         }while((readStatus & MIDI2_UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 139              		.loc 1 175 0
 140 00a6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 141 00a8 03F02003 		and	r3, r3, #32
 142 00ac 002B     		cmp	r3, #0
 143 00ae AED1     		bne	.L6
 176:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 177:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         /* User code required at end of ISR (Optional) */
 178:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         /* `#START MIDI2_UART_RXISR_END` */
 179:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 180:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         /* `#END` */
 181:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 182:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #ifdef MIDI2_UART_RXISR_EXIT_CALLBACK
 183:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         MIDI2_UART_RXISR_ExitCallback();
 144              		.loc 1 183 0
 145 00b0 FFF7FEFF 		bl	MIDI2_UART_RXISR_ExitCallback
 184:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #endif /* MIDI2_UART_RXISR_EXIT_CALLBACK */
 185:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 186:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #if(CY_PSOC3)
 187:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         EA = int_en;
 188:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #endif /* (CY_PSOC3) */
 189:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     }
 146              		.loc 1 189 0
 147 00b4 0837     		adds	r7, r7, #8
 148              		.cfi_def_cfa_offset 8
 149 00b6 BD46     		mov	sp, r7
 150              		.cfi_def_cfa_register 13
 151              		@ sp needed
 152 00b8 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 7


 153              	.L8:
 154 00ba 00BF     		.align	2
 155              	.L7:
 156 00bc 6C640040 		.word	1073767532
 157 00c0 00000000 		.word	MIDI2_UART_errorStatus
 158 00c4 4C640040 		.word	1073767500
 159 00c8 00000000 		.word	MIDI2_UART_rxBufferWrite
 160 00cc 00000000 		.word	MIDI2_UART_rxBuffer
 161 00d0 00000000 		.word	MIDI2_UART_rxBufferLoopDetect
 162 00d4 00000000 		.word	MIDI2_UART_rxBufferOverflow
 163 00d8 00000000 		.word	MIDI2_UART_rxBufferRead
 164              		.cfi_endproc
 165              	.LFE0:
 166              		.size	MIDI2_UART_RXISR, .-MIDI2_UART_RXISR
 167              		.section	.text.MIDI2_UART_TXISR,"ax",%progbits
 168              		.align	2
 169              		.global	MIDI2_UART_TXISR
 170              		.thumb
 171              		.thumb_func
 172              		.type	MIDI2_UART_TXISR, %function
 173              	MIDI2_UART_TXISR:
 174              	.LFB1:
 190:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     
 191:Generated_Source\PSoC5/MIDI2_UART_INT.c **** #endif /* (MIDI2_UART_RX_INTERRUPT_ENABLED && (MIDI2_UART_RX_ENABLED || MIDI2_UART_HD_ENABLED)) */
 192:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 193:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 194:Generated_Source\PSoC5/MIDI2_UART_INT.c **** #if (MIDI2_UART_TX_INTERRUPT_ENABLED && MIDI2_UART_TX_ENABLED)
 195:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     /*******************************************************************************
 196:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     * Function Name: MIDI2_UART_TXISR
 197:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     ********************************************************************************
 198:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *
 199:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     * Summary:
 200:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     * Interrupt Service Routine for the TX portion of the UART
 201:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *
 202:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     * Parameters:
 203:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *  None.
 204:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *
 205:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     * Return:
 206:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *  None.
 207:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *
 208:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     * Global Variables:
 209:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *  MIDI2_UART_txBuffer - RAM buffer pointer for transmit data from.
 210:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *  MIDI2_UART_txBufferRead - cyclic index for read and transmit data
 211:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *     from txBuffer, increments after each transmitted byte.
 212:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *  MIDI2_UART_rxBufferWrite - cyclic index for write to txBuffer,
 213:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *     checked to detect available for transmission bytes.
 214:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *
 215:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     *******************************************************************************/
 216:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     CY_ISR(MIDI2_UART_TXISR)
 217:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     {
 175              		.loc 1 217 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180 0000 80B4     		push	{r7}
 181              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 8


 182              		.cfi_offset 7, -4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #if(CY_PSOC3)
 219:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         uint8 int_en;
 220:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #endif /* (CY_PSOC3) */
 221:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 222:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #ifdef MIDI2_UART_TXISR_ENTRY_CALLBACK
 223:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         MIDI2_UART_TXISR_EntryCallback();
 224:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #endif /* MIDI2_UART_TXISR_ENTRY_CALLBACK */
 225:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 226:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         /* User code required at start of ISR */
 227:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         /* `#START MIDI2_UART_TXISR_START` */
 228:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 229:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         /* `#END` */
 230:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 231:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
 232:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         int_en = EA;
 233:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         CyGlobalIntEnable;
 234:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #endif /* (CY_PSOC3) */
 235:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 236:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         while((MIDI2_UART_txBufferRead != MIDI2_UART_txBufferWrite) &&
 185              		.loc 1 236 0
 186 0004 17E0     		b	.L10
 187              	.L13:
 237:Generated_Source\PSoC5/MIDI2_UART_INT.c ****              ((MIDI2_UART_TXSTATUS_REG & MIDI2_UART_TX_STS_FIFO_FULL) == 0u))
 238:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         {
 239:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             /* Check pointer wrap around */
 240:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             if(MIDI2_UART_txBufferRead >= MIDI2_UART_TX_BUFFER_SIZE)
 188              		.loc 1 240 0
 189 0006 154B     		ldr	r3, .L14
 190 0008 1B78     		ldrb	r3, [r3]
 191 000a DBB2     		uxtb	r3, r3
 192 000c FF2B     		cmp	r3, #255
 193 000e 02D1     		bne	.L11
 241:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             {
 242:Generated_Source\PSoC5/MIDI2_UART_INT.c ****                 MIDI2_UART_txBufferRead = 0u;
 194              		.loc 1 242 0
 195 0010 124B     		ldr	r3, .L14
 196 0012 0022     		movs	r2, #0
 197 0014 1A70     		strb	r2, [r3]
 198              	.L11:
 243:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             }
 244:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 245:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             MIDI2_UART_TXDATA_REG = MIDI2_UART_txBuffer[MIDI2_UART_txBufferRead];
 199              		.loc 1 245 0
 200 0016 124B     		ldr	r3, .L14+4
 201 0018 104A     		ldr	r2, .L14
 202 001a 1278     		ldrb	r2, [r2]
 203 001c D2B2     		uxtb	r2, r2
 204 001e 1146     		mov	r1, r2
 205 0020 104A     		ldr	r2, .L14+8
 206 0022 525C     		ldrb	r2, [r2, r1]
 207 0024 D2B2     		uxtb	r2, r2
 208 0026 1A70     		strb	r2, [r3]
 246:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 247:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             /* Set next pointer */
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 9


 248:Generated_Source\PSoC5/MIDI2_UART_INT.c ****             MIDI2_UART_txBufferRead++;
 209              		.loc 1 248 0
 210 0028 0C4B     		ldr	r3, .L14
 211 002a 1B78     		ldrb	r3, [r3]
 212 002c DBB2     		uxtb	r3, r3
 213 002e 0133     		adds	r3, r3, #1
 214 0030 DAB2     		uxtb	r2, r3
 215 0032 0A4B     		ldr	r3, .L14
 216 0034 1A70     		strb	r2, [r3]
 217              	.L10:
 236:Generated_Source\PSoC5/MIDI2_UART_INT.c ****              ((MIDI2_UART_TXSTATUS_REG & MIDI2_UART_TX_STS_FIFO_FULL) == 0u))
 218              		.loc 1 236 0
 219 0036 094B     		ldr	r3, .L14
 220 0038 1B78     		ldrb	r3, [r3]
 221 003a DAB2     		uxtb	r2, r3
 222 003c 0A4B     		ldr	r3, .L14+12
 223 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 224 0040 9A42     		cmp	r2, r3
 225 0042 06D0     		beq	.L9
 237:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         {
 226              		.loc 1 237 0 discriminator 1
 227 0044 094B     		ldr	r3, .L14+16
 228 0046 1B78     		ldrb	r3, [r3]
 229 0048 DBB2     		uxtb	r3, r3
 230 004a 03F00403 		and	r3, r3, #4
 236:Generated_Source\PSoC5/MIDI2_UART_INT.c ****              ((MIDI2_UART_TXSTATUS_REG & MIDI2_UART_TX_STS_FIFO_FULL) == 0u))
 231              		.loc 1 236 0 discriminator 1
 232 004e 002B     		cmp	r3, #0
 233 0050 D9D0     		beq	.L13
 234              	.L9:
 249:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         }
 250:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 251:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         /* User code required at end of ISR (Optional) */
 252:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         /* `#START MIDI2_UART_TXISR_END` */
 253:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 254:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         /* `#END` */
 255:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 256:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #ifdef MIDI2_UART_TXISR_EXIT_CALLBACK
 257:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         MIDI2_UART_TXISR_ExitCallback();
 258:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #endif /* MIDI2_UART_TXISR_EXIT_CALLBACK */
 259:Generated_Source\PSoC5/MIDI2_UART_INT.c **** 
 260:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #if(CY_PSOC3)
 261:Generated_Source\PSoC5/MIDI2_UART_INT.c ****         EA = int_en;
 262:Generated_Source\PSoC5/MIDI2_UART_INT.c ****     #endif /* (CY_PSOC3) */
 263:Generated_Source\PSoC5/MIDI2_UART_INT.c ****    }
 235              		.loc 1 263 0
 236 0052 BD46     		mov	sp, r7
 237              		.cfi_def_cfa_register 13
 238              		@ sp needed
 239 0054 5DF8047B 		ldr	r7, [sp], #4
 240              		.cfi_restore 7
 241              		.cfi_def_cfa_offset 0
 242 0058 7047     		bx	lr
 243              	.L15:
 244 005a 00BF     		.align	2
 245              	.L14:
 246 005c 00000000 		.word	MIDI2_UART_txBufferRead
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 10


 247 0060 43640040 		.word	1073767491
 248 0064 00000000 		.word	MIDI2_UART_txBuffer
 249 0068 00000000 		.word	MIDI2_UART_txBufferWrite
 250 006c 63640040 		.word	1073767523
 251              		.cfi_endproc
 252              	.LFE1:
 253              		.size	MIDI2_UART_TXISR, .-MIDI2_UART_TXISR
 254              		.text
 255              	.Letext0:
 256              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 257              		.file 3 "Generated_Source\\PSoC5\\MIDI2_UART.h"
 258              		.section	.debug_info,"",%progbits
 259              	.Ldebug_info0:
 260 0000 78010000 		.4byte	0x178
 261 0004 0400     		.2byte	0x4
 262 0006 00000000 		.4byte	.Ldebug_abbrev0
 263 000a 04       		.byte	0x4
 264 000b 01       		.uleb128 0x1
 265 000c 0B010000 		.4byte	.LASF27
 266 0010 01       		.byte	0x1
 267 0011 48020000 		.4byte	.LASF28
 268 0015 19000000 		.4byte	.LASF29
 269 0019 00000000 		.4byte	.Ldebug_ranges0+0
 270 001d 00000000 		.4byte	0
 271 0021 00000000 		.4byte	.Ldebug_line0
 272 0025 02       		.uleb128 0x2
 273 0026 01       		.byte	0x1
 274 0027 06       		.byte	0x6
 275 0028 88020000 		.4byte	.LASF0
 276 002c 02       		.uleb128 0x2
 277 002d 01       		.byte	0x1
 278 002e 08       		.byte	0x8
 279 002f 98000000 		.4byte	.LASF1
 280 0033 02       		.uleb128 0x2
 281 0034 02       		.byte	0x2
 282 0035 05       		.byte	0x5
 283 0036 70020000 		.4byte	.LASF2
 284 003a 02       		.uleb128 0x2
 285 003b 02       		.byte	0x2
 286 003c 07       		.byte	0x7
 287 003d 06000000 		.4byte	.LASF3
 288 0041 02       		.uleb128 0x2
 289 0042 04       		.byte	0x4
 290 0043 05       		.byte	0x5
 291 0044 7A020000 		.4byte	.LASF4
 292 0048 02       		.uleb128 0x2
 293 0049 04       		.byte	0x4
 294 004a 07       		.byte	0x7
 295 004b DB000000 		.4byte	.LASF5
 296 004f 02       		.uleb128 0x2
 297 0050 08       		.byte	0x8
 298 0051 05       		.byte	0x5
 299 0052 28020000 		.4byte	.LASF6
 300 0056 02       		.uleb128 0x2
 301 0057 08       		.byte	0x8
 302 0058 07       		.byte	0x7
 303 0059 EA010000 		.4byte	.LASF7
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 11


 304 005d 03       		.uleb128 0x3
 305 005e 04       		.byte	0x4
 306 005f 05       		.byte	0x5
 307 0060 696E7400 		.ascii	"int\000"
 308 0064 02       		.uleb128 0x2
 309 0065 04       		.byte	0x4
 310 0066 07       		.byte	0x7
 311 0067 DD010000 		.4byte	.LASF8
 312 006b 04       		.uleb128 0x4
 313 006c ED000000 		.4byte	.LASF12
 314 0070 02       		.byte	0x2
 315 0071 9201     		.2byte	0x192
 316 0073 2C000000 		.4byte	0x2c
 317 0077 02       		.uleb128 0x2
 318 0078 04       		.byte	0x4
 319 0079 04       		.byte	0x4
 320 007a 00000000 		.4byte	.LASF9
 321 007e 02       		.uleb128 0x2
 322 007f 08       		.byte	0x8
 323 0080 04       		.byte	0x4
 324 0081 99010000 		.4byte	.LASF10
 325 0085 02       		.uleb128 0x2
 326 0086 01       		.byte	0x1
 327 0087 08       		.byte	0x8
 328 0088 83020000 		.4byte	.LASF11
 329 008c 04       		.uleb128 0x4
 330 008d 1A020000 		.4byte	.LASF13
 331 0091 02       		.byte	0x2
 332 0092 3C02     		.2byte	0x23c
 333 0094 98000000 		.4byte	0x98
 334 0098 05       		.uleb128 0x5
 335 0099 6B000000 		.4byte	0x6b
 336 009d 02       		.uleb128 0x2
 337 009e 04       		.byte	0x4
 338 009f 07       		.byte	0x7
 339 00a0 1F020000 		.4byte	.LASF14
 340 00a4 06       		.uleb128 0x6
 341 00a5 B1020000 		.4byte	.LASF30
 342 00a9 01       		.byte	0x1
 343 00aa 3B       		.byte	0x3b
 344 00ab 00000000 		.4byte	.LFB0
 345 00af DC000000 		.4byte	.LFE0-.LFB0
 346 00b3 01       		.uleb128 0x1
 347 00b4 9C       		.byte	0x9c
 348 00b5 E4000000 		.4byte	0xe4
 349 00b9 07       		.uleb128 0x7
 350 00ba 94020000 		.4byte	.LASF15
 351 00be 01       		.byte	0x1
 352 00bf 3D       		.byte	0x3d
 353 00c0 6B000000 		.4byte	0x6b
 354 00c4 02       		.uleb128 0x2
 355 00c5 91       		.byte	0x91
 356 00c6 75       		.sleb128 -11
 357 00c7 07       		.uleb128 0x7
 358 00c8 8D000000 		.4byte	.LASF16
 359 00cc 01       		.byte	0x1
 360 00cd 3E       		.byte	0x3e
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 12


 361 00ce 6B000000 		.4byte	0x6b
 362 00d2 02       		.uleb128 0x2
 363 00d3 91       		.byte	0x91
 364 00d4 76       		.sleb128 -10
 365 00d5 07       		.uleb128 0x7
 366 00d6 36020000 		.4byte	.LASF17
 367 00da 01       		.byte	0x1
 368 00db 3F       		.byte	0x3f
 369 00dc 6B000000 		.4byte	0x6b
 370 00e0 02       		.uleb128 0x2
 371 00e1 91       		.byte	0x91
 372 00e2 77       		.sleb128 -9
 373 00e3 00       		.byte	0
 374 00e4 08       		.uleb128 0x8
 375 00e5 A0010000 		.4byte	.LASF31
 376 00e9 01       		.byte	0x1
 377 00ea D8       		.byte	0xd8
 378 00eb 00000000 		.4byte	.LFB1
 379 00ef 70000000 		.4byte	.LFE1-.LFB1
 380 00f3 01       		.uleb128 0x1
 381 00f4 9C       		.byte	0x9c
 382 00f5 09       		.uleb128 0x9
 383 00f6 6B000000 		.4byte	0x6b
 384 00fa 05010000 		.4byte	0x105
 385 00fe 0A       		.uleb128 0xa
 386 00ff 9D000000 		.4byte	0x9d
 387 0103 FE       		.byte	0xfe
 388 0104 00       		.byte	0
 389 0105 0B       		.uleb128 0xb
 390 0106 B1010000 		.4byte	.LASF18
 391 010a 03       		.byte	0x3
 392 010b 3801     		.2byte	0x138
 393 010d 11010000 		.4byte	0x111
 394 0111 05       		.uleb128 0x5
 395 0112 F5000000 		.4byte	0xf5
 396 0116 0B       		.uleb128 0xb
 397 0117 C5010000 		.4byte	.LASF19
 398 011b 03       		.byte	0x3
 399 011c 3901     		.2byte	0x139
 400 011e 98000000 		.4byte	0x98
 401 0122 0B       		.uleb128 0xb
 402 0123 01020000 		.4byte	.LASF20
 403 0127 03       		.byte	0x3
 404 0128 3A01     		.2byte	0x13a
 405 012a 6B000000 		.4byte	0x6b
 406 012e 0B       		.uleb128 0xb
 407 012f A6000000 		.4byte	.LASF21
 408 0133 03       		.byte	0x3
 409 0134 3D01     		.2byte	0x13d
 410 0136 6B000000 		.4byte	0x6b
 411 013a 0B       		.uleb128 0xb
 412 013b 9D020000 		.4byte	.LASF22
 413 013f 03       		.byte	0x3
 414 0140 3E01     		.2byte	0x13e
 415 0142 46010000 		.4byte	0x146
 416 0146 05       		.uleb128 0x5
 417 0147 F5000000 		.4byte	0xf5
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 13


 418 014b 0B       		.uleb128 0xb
 419 014c F3000000 		.4byte	.LASF23
 420 0150 03       		.byte	0x3
 421 0151 3F01     		.2byte	0x13f
 422 0153 98000000 		.4byte	0x98
 423 0157 0B       		.uleb128 0xb
 424 0158 74000000 		.4byte	.LASF24
 425 015c 03       		.byte	0x3
 426 015d 4001     		.2byte	0x140
 427 015f 98000000 		.4byte	0x98
 428 0163 0B       		.uleb128 0xb
 429 0164 BD000000 		.4byte	.LASF25
 430 0168 03       		.byte	0x3
 431 0169 4101     		.2byte	0x141
 432 016b 98000000 		.4byte	0x98
 433 016f 0B       		.uleb128 0xb
 434 0170 58000000 		.4byte	.LASF26
 435 0174 03       		.byte	0x3
 436 0175 4201     		.2byte	0x142
 437 0177 98000000 		.4byte	0x98
 438 017b 00       		.byte	0
 439              		.section	.debug_abbrev,"",%progbits
 440              	.Ldebug_abbrev0:
 441 0000 01       		.uleb128 0x1
 442 0001 11       		.uleb128 0x11
 443 0002 01       		.byte	0x1
 444 0003 25       		.uleb128 0x25
 445 0004 0E       		.uleb128 0xe
 446 0005 13       		.uleb128 0x13
 447 0006 0B       		.uleb128 0xb
 448 0007 03       		.uleb128 0x3
 449 0008 0E       		.uleb128 0xe
 450 0009 1B       		.uleb128 0x1b
 451 000a 0E       		.uleb128 0xe
 452 000b 55       		.uleb128 0x55
 453 000c 17       		.uleb128 0x17
 454 000d 11       		.uleb128 0x11
 455 000e 01       		.uleb128 0x1
 456 000f 10       		.uleb128 0x10
 457 0010 17       		.uleb128 0x17
 458 0011 00       		.byte	0
 459 0012 00       		.byte	0
 460 0013 02       		.uleb128 0x2
 461 0014 24       		.uleb128 0x24
 462 0015 00       		.byte	0
 463 0016 0B       		.uleb128 0xb
 464 0017 0B       		.uleb128 0xb
 465 0018 3E       		.uleb128 0x3e
 466 0019 0B       		.uleb128 0xb
 467 001a 03       		.uleb128 0x3
 468 001b 0E       		.uleb128 0xe
 469 001c 00       		.byte	0
 470 001d 00       		.byte	0
 471 001e 03       		.uleb128 0x3
 472 001f 24       		.uleb128 0x24
 473 0020 00       		.byte	0
 474 0021 0B       		.uleb128 0xb
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 14


 475 0022 0B       		.uleb128 0xb
 476 0023 3E       		.uleb128 0x3e
 477 0024 0B       		.uleb128 0xb
 478 0025 03       		.uleb128 0x3
 479 0026 08       		.uleb128 0x8
 480 0027 00       		.byte	0
 481 0028 00       		.byte	0
 482 0029 04       		.uleb128 0x4
 483 002a 16       		.uleb128 0x16
 484 002b 00       		.byte	0
 485 002c 03       		.uleb128 0x3
 486 002d 0E       		.uleb128 0xe
 487 002e 3A       		.uleb128 0x3a
 488 002f 0B       		.uleb128 0xb
 489 0030 3B       		.uleb128 0x3b
 490 0031 05       		.uleb128 0x5
 491 0032 49       		.uleb128 0x49
 492 0033 13       		.uleb128 0x13
 493 0034 00       		.byte	0
 494 0035 00       		.byte	0
 495 0036 05       		.uleb128 0x5
 496 0037 35       		.uleb128 0x35
 497 0038 00       		.byte	0
 498 0039 49       		.uleb128 0x49
 499 003a 13       		.uleb128 0x13
 500 003b 00       		.byte	0
 501 003c 00       		.byte	0
 502 003d 06       		.uleb128 0x6
 503 003e 2E       		.uleb128 0x2e
 504 003f 01       		.byte	0x1
 505 0040 3F       		.uleb128 0x3f
 506 0041 19       		.uleb128 0x19
 507 0042 03       		.uleb128 0x3
 508 0043 0E       		.uleb128 0xe
 509 0044 3A       		.uleb128 0x3a
 510 0045 0B       		.uleb128 0xb
 511 0046 3B       		.uleb128 0x3b
 512 0047 0B       		.uleb128 0xb
 513 0048 27       		.uleb128 0x27
 514 0049 19       		.uleb128 0x19
 515 004a 11       		.uleb128 0x11
 516 004b 01       		.uleb128 0x1
 517 004c 12       		.uleb128 0x12
 518 004d 06       		.uleb128 0x6
 519 004e 40       		.uleb128 0x40
 520 004f 18       		.uleb128 0x18
 521 0050 9642     		.uleb128 0x2116
 522 0052 19       		.uleb128 0x19
 523 0053 01       		.uleb128 0x1
 524 0054 13       		.uleb128 0x13
 525 0055 00       		.byte	0
 526 0056 00       		.byte	0
 527 0057 07       		.uleb128 0x7
 528 0058 34       		.uleb128 0x34
 529 0059 00       		.byte	0
 530 005a 03       		.uleb128 0x3
 531 005b 0E       		.uleb128 0xe
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 15


 532 005c 3A       		.uleb128 0x3a
 533 005d 0B       		.uleb128 0xb
 534 005e 3B       		.uleb128 0x3b
 535 005f 0B       		.uleb128 0xb
 536 0060 49       		.uleb128 0x49
 537 0061 13       		.uleb128 0x13
 538 0062 02       		.uleb128 0x2
 539 0063 18       		.uleb128 0x18
 540 0064 00       		.byte	0
 541 0065 00       		.byte	0
 542 0066 08       		.uleb128 0x8
 543 0067 2E       		.uleb128 0x2e
 544 0068 00       		.byte	0
 545 0069 3F       		.uleb128 0x3f
 546 006a 19       		.uleb128 0x19
 547 006b 03       		.uleb128 0x3
 548 006c 0E       		.uleb128 0xe
 549 006d 3A       		.uleb128 0x3a
 550 006e 0B       		.uleb128 0xb
 551 006f 3B       		.uleb128 0x3b
 552 0070 0B       		.uleb128 0xb
 553 0071 27       		.uleb128 0x27
 554 0072 19       		.uleb128 0x19
 555 0073 11       		.uleb128 0x11
 556 0074 01       		.uleb128 0x1
 557 0075 12       		.uleb128 0x12
 558 0076 06       		.uleb128 0x6
 559 0077 40       		.uleb128 0x40
 560 0078 18       		.uleb128 0x18
 561 0079 9742     		.uleb128 0x2117
 562 007b 19       		.uleb128 0x19
 563 007c 00       		.byte	0
 564 007d 00       		.byte	0
 565 007e 09       		.uleb128 0x9
 566 007f 01       		.uleb128 0x1
 567 0080 01       		.byte	0x1
 568 0081 49       		.uleb128 0x49
 569 0082 13       		.uleb128 0x13
 570 0083 01       		.uleb128 0x1
 571 0084 13       		.uleb128 0x13
 572 0085 00       		.byte	0
 573 0086 00       		.byte	0
 574 0087 0A       		.uleb128 0xa
 575 0088 21       		.uleb128 0x21
 576 0089 00       		.byte	0
 577 008a 49       		.uleb128 0x49
 578 008b 13       		.uleb128 0x13
 579 008c 2F       		.uleb128 0x2f
 580 008d 0B       		.uleb128 0xb
 581 008e 00       		.byte	0
 582 008f 00       		.byte	0
 583 0090 0B       		.uleb128 0xb
 584 0091 34       		.uleb128 0x34
 585 0092 00       		.byte	0
 586 0093 03       		.uleb128 0x3
 587 0094 0E       		.uleb128 0xe
 588 0095 3A       		.uleb128 0x3a
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 16


 589 0096 0B       		.uleb128 0xb
 590 0097 3B       		.uleb128 0x3b
 591 0098 05       		.uleb128 0x5
 592 0099 49       		.uleb128 0x49
 593 009a 13       		.uleb128 0x13
 594 009b 3F       		.uleb128 0x3f
 595 009c 19       		.uleb128 0x19
 596 009d 3C       		.uleb128 0x3c
 597 009e 19       		.uleb128 0x19
 598 009f 00       		.byte	0
 599 00a0 00       		.byte	0
 600 00a1 00       		.byte	0
 601              		.section	.debug_aranges,"",%progbits
 602 0000 24000000 		.4byte	0x24
 603 0004 0200     		.2byte	0x2
 604 0006 00000000 		.4byte	.Ldebug_info0
 605 000a 04       		.byte	0x4
 606 000b 00       		.byte	0
 607 000c 0000     		.2byte	0
 608 000e 0000     		.2byte	0
 609 0010 00000000 		.4byte	.LFB0
 610 0014 DC000000 		.4byte	.LFE0-.LFB0
 611 0018 00000000 		.4byte	.LFB1
 612 001c 70000000 		.4byte	.LFE1-.LFB1
 613 0020 00000000 		.4byte	0
 614 0024 00000000 		.4byte	0
 615              		.section	.debug_ranges,"",%progbits
 616              	.Ldebug_ranges0:
 617 0000 00000000 		.4byte	.LFB0
 618 0004 DC000000 		.4byte	.LFE0
 619 0008 00000000 		.4byte	.LFB1
 620 000c 70000000 		.4byte	.LFE1
 621 0010 00000000 		.4byte	0
 622 0014 00000000 		.4byte	0
 623              		.section	.debug_line,"",%progbits
 624              	.Ldebug_line0:
 625 0000 B5000000 		.section	.debug_str,"MS",%progbits,1
 625      02005B00 
 625      00000201 
 625      FB0E0D00 
 625      01010101 
 626              	.LASF9:
 627 0000 666C6F61 		.ascii	"float\000"
 627      7400
 628              	.LASF3:
 629 0006 73686F72 		.ascii	"short unsigned int\000"
 629      7420756E 
 629      7369676E 
 629      65642069 
 629      6E7400
 630              	.LASF29:
 631 0019 433A5C55 		.ascii	"C:\\Users\\214016586\\Documents\\GitHub\\Accoder\\A"
 631      73657273 
 631      5C323134 
 631      30313635 
 631      38365C44 
 632 0046 63636F64 		.ascii	"ccoder_MIDI.cydsn\000"
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 17


 632      65725F4D 
 632      4944492E 
 632      63796473 
 632      6E00
 633              	.LASF26:
 634 0058 4D494449 		.ascii	"MIDI2_UART_rxBufferOverflow\000"
 634      325F5541 
 634      52545F72 
 634      78427566 
 634      6665724F 
 635              	.LASF24:
 636 0074 4D494449 		.ascii	"MIDI2_UART_rxBufferWrite\000"
 636      325F5541 
 636      52545F72 
 636      78427566 
 636      66657257 
 637              	.LASF16:
 638 008d 72656164 		.ascii	"readStatus\000"
 638      53746174 
 638      757300
 639              	.LASF1:
 640 0098 756E7369 		.ascii	"unsigned char\000"
 640      676E6564 
 640      20636861 
 640      7200
 641              	.LASF21:
 642 00a6 4D494449 		.ascii	"MIDI2_UART_errorStatus\000"
 642      325F5541 
 642      52545F65 
 642      72726F72 
 642      53746174 
 643              	.LASF25:
 644 00bd 4D494449 		.ascii	"MIDI2_UART_rxBufferLoopDetect\000"
 644      325F5541 
 644      52545F72 
 644      78427566 
 644      6665724C 
 645              	.LASF5:
 646 00db 6C6F6E67 		.ascii	"long unsigned int\000"
 646      20756E73 
 646      69676E65 
 646      6420696E 
 646      7400
 647              	.LASF12:
 648 00ed 75696E74 		.ascii	"uint8\000"
 648      3800
 649              	.LASF23:
 650 00f3 4D494449 		.ascii	"MIDI2_UART_rxBufferRead\000"
 650      325F5541 
 650      52545F72 
 650      78427566 
 650      66657252 
 651              	.LASF27:
 652 010b 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 652      4320342E 
 652      392E3320 
 652      32303135 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 18


 652      30333033 
 653 013e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 653      20726576 
 653      6973696F 
 653      6E203232 
 653      31323230 
 654 0171 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 654      66756E63 
 654      74696F6E 
 654      2D736563 
 654      74696F6E 
 655              	.LASF10:
 656 0199 646F7562 		.ascii	"double\000"
 656      6C6500
 657              	.LASF31:
 658 01a0 4D494449 		.ascii	"MIDI2_UART_TXISR\000"
 658      325F5541 
 658      52545F54 
 658      58495352 
 658      00
 659              	.LASF18:
 660 01b1 4D494449 		.ascii	"MIDI2_UART_txBuffer\000"
 660      325F5541 
 660      52545F74 
 660      78427566 
 660      66657200 
 661              	.LASF19:
 662 01c5 4D494449 		.ascii	"MIDI2_UART_txBufferRead\000"
 662      325F5541 
 662      52545F74 
 662      78427566 
 662      66657252 
 663              	.LASF8:
 664 01dd 756E7369 		.ascii	"unsigned int\000"
 664      676E6564 
 664      20696E74 
 664      00
 665              	.LASF7:
 666 01ea 6C6F6E67 		.ascii	"long long unsigned int\000"
 666      206C6F6E 
 666      6720756E 
 666      7369676E 
 666      65642069 
 667              	.LASF20:
 668 0201 4D494449 		.ascii	"MIDI2_UART_txBufferWrite\000"
 668      325F5541 
 668      52545F74 
 668      78427566 
 668      66657257 
 669              	.LASF13:
 670 021a 72656738 		.ascii	"reg8\000"
 670      00
 671              	.LASF14:
 672 021f 73697A65 		.ascii	"sizetype\000"
 672      74797065 
 672      00
 673              	.LASF6:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccOfOfX9.s 			page 19


 674 0228 6C6F6E67 		.ascii	"long long int\000"
 674      206C6F6E 
 674      6720696E 
 674      7400
 675              	.LASF17:
 676 0236 696E6372 		.ascii	"increment_pointer\000"
 676      656D656E 
 676      745F706F 
 676      696E7465 
 676      7200
 677              	.LASF28:
 678 0248 47656E65 		.ascii	"Generated_Source\\PSoC5\\MIDI2_UART_INT.c\000"
 678      72617465 
 678      645F536F 
 678      75726365 
 678      5C50536F 
 679              	.LASF2:
 680 0270 73686F72 		.ascii	"short int\000"
 680      7420696E 
 680      7400
 681              	.LASF4:
 682 027a 6C6F6E67 		.ascii	"long int\000"
 682      20696E74 
 682      00
 683              	.LASF11:
 684 0283 63686172 		.ascii	"char\000"
 684      00
 685              	.LASF0:
 686 0288 7369676E 		.ascii	"signed char\000"
 686      65642063 
 686      68617200 
 687              	.LASF15:
 688 0294 72656164 		.ascii	"readData\000"
 688      44617461 
 688      00
 689              	.LASF22:
 690 029d 4D494449 		.ascii	"MIDI2_UART_rxBuffer\000"
 690      325F5541 
 690      52545F72 
 690      78427566 
 690      66657200 
 691              	.LASF30:
 692 02b1 4D494449 		.ascii	"MIDI2_UART_RXISR\000"
 692      325F5541 
 692      52545F52 
 692      58495352 
 692      00
 693              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
