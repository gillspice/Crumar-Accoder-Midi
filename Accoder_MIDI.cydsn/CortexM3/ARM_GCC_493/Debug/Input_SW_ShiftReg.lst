ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Input_SW_ShiftReg.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	Input_SW_ShiftReg_initVar
  19              		.bss
  20              		.type	Input_SW_ShiftReg_initVar, %object
  21              		.size	Input_SW_ShiftReg_initVar, 1
  22              	Input_SW_ShiftReg_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.Input_SW_ShiftReg_Start,"ax",%progbits
  25              		.align	2
  26              		.global	Input_SW_ShiftReg_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	Input_SW_ShiftReg_Start, %function
  30              	Input_SW_ShiftReg_Start:
  31              	.LFB0:
  32              		.file 1 "Generated_Source\\PSoC5\\Input_SW_ShiftReg.c"
   1:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * File Name: Input_SW_ShiftReg.c
   3:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Version 2.30
   4:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
   5:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Description:
   6:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  This file provides the API source code for the Shift Register component.
   7:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
   8:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Note: none
   9:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
  10:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** ********************************************************************************
  11:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** ********************************************************************************/
  16:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
  17:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** #include "Input_SW_ShiftReg.h"
  18:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
  19:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** uint8 Input_SW_ShiftReg_initVar = 0u;
  20:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
  21:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
  22:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** /*******************************************************************************
  23:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Function Name: Input_SW_ShiftReg_Start
  24:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** ********************************************************************************
  25:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 2


  26:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Summary:
  27:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  Starts the Shift Register.
  28:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
  29:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Parameters:
  30:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  None.
  31:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
  32:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Return:
  33:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  None.
  34:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
  35:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Global Variables:
  36:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  Input_SW_ShiftReg_initVar - used to check initial configuration, modified on
  37:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  first function call.
  38:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
  39:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Reentrant:
  40:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  No.
  41:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
  42:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** void Input_SW_ShiftReg_Start(void) 
  44:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** {
  33              		.loc 1 44 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  45:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     if(0u == Input_SW_ShiftReg_initVar)
  43              		.loc 1 45 0
  44 0004 054B     		ldr	r3, .L3
  45 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0008 002B     		cmp	r3, #0
  47 000a 04D1     		bne	.L2
  46:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     {
  47:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         Input_SW_ShiftReg_Init();
  48              		.loc 1 47 0
  49 000c FFF7FEFF 		bl	Input_SW_ShiftReg_Init
  48:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         Input_SW_ShiftReg_initVar = 1u; /* Component initialized */
  50              		.loc 1 48 0
  51 0010 024B     		ldr	r3, .L3
  52 0012 0122     		movs	r2, #1
  53 0014 1A70     		strb	r2, [r3]
  54              	.L2:
  49:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     }
  50:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
  51:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     Input_SW_ShiftReg_Enable();
  55              		.loc 1 51 0
  56 0016 FFF7FEFF 		bl	Input_SW_ShiftReg_Enable
  52:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** }
  57              		.loc 1 52 0
  58 001a 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 001c 00000000 		.word	Input_SW_ShiftReg_initVar
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 3


  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	Input_SW_ShiftReg_Start, .-Input_SW_ShiftReg_Start
  66              		.section	.text.Input_SW_ShiftReg_Enable,"ax",%progbits
  67              		.align	2
  68              		.global	Input_SW_ShiftReg_Enable
  69              		.thumb
  70              		.thumb_func
  71              		.type	Input_SW_ShiftReg_Enable, %function
  72              	Input_SW_ShiftReg_Enable:
  73              	.LFB1:
  53:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
  54:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
  55:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** /*******************************************************************************
  56:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Function Name: Input_SW_ShiftReg_Enable
  57:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** ********************************************************************************
  58:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
  59:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Summary:
  60:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  Enables the Shift Register.
  61:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
  62:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Parameters:
  63:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  void.
  64:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
  65:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Return:
  66:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  void.
  67:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
  68:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *******************************************************************************/
  69:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** void Input_SW_ShiftReg_Enable(void) 
  70:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** {
  74              		.loc 1 70 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  71:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     /* Changing address in Datapath Control Store
  72:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****        from NOP to component state machine commands space */
  73:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     Input_SW_ShiftReg_SR_CONTROL |= Input_SW_ShiftReg_CLK_EN;
  84              		.loc 1 73 0
  85 0004 054A     		ldr	r2, .L6
  86 0006 054B     		ldr	r3, .L6
  87 0008 1B78     		ldrb	r3, [r3]
  88 000a DBB2     		uxtb	r3, r3
  89 000c 43F00103 		orr	r3, r3, #1
  90 0010 DBB2     		uxtb	r3, r3
  91 0012 1370     		strb	r3, [r2]
  74:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
  75:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     Input_SW_ShiftReg_EnableInt();
  92              		.loc 1 75 0
  93 0014 FFF7FEFF 		bl	Input_SW_ShiftReg_EnableInt
  76:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** }
  94              		.loc 1 76 0
  95 0018 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 4


  96              	.L7:
  97 001a 00BF     		.align	2
  98              	.L6:
  99 001c 7E640040 		.word	1073767550
 100              		.cfi_endproc
 101              	.LFE1:
 102              		.size	Input_SW_ShiftReg_Enable, .-Input_SW_ShiftReg_Enable
 103              		.section	.text.Input_SW_ShiftReg_Init,"ax",%progbits
 104              		.align	2
 105              		.global	Input_SW_ShiftReg_Init
 106              		.thumb
 107              		.thumb_func
 108              		.type	Input_SW_ShiftReg_Init, %function
 109              	Input_SW_ShiftReg_Init:
 110              	.LFB2:
  77:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
  78:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
  79:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** /*******************************************************************************
  80:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Function Name: Input_SW_ShiftReg_Init
  81:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** ********************************************************************************
  82:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
  83:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Summary:
  84:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  Initializes Tx and/or Rx interrupt sources with initial values.
  85:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
  86:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Parameters:
  87:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  void.
  88:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
  89:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Return:
  90:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  void.
  91:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
  92:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *******************************************************************************/
  93:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** void Input_SW_ShiftReg_Init(void) 
  94:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** {
 111              		.loc 1 94 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 1, uses_anonymous_args = 0
 115 0000 80B5     		push	{r7, lr}
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 7, -8
 118              		.cfi_offset 14, -4
 119 0002 00AF     		add	r7, sp, #0
 120              		.cfi_def_cfa_register 7
  95:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     Input_SW_ShiftReg_SetIntMode(Input_SW_ShiftReg_INT_SRC);
 121              		.loc 1 95 0
 122 0004 0020     		movs	r0, #0
 123 0006 FFF7FEFF 		bl	Input_SW_ShiftReg_SetIntMode
  96:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** }
 124              		.loc 1 96 0
 125 000a 80BD     		pop	{r7, pc}
 126              		.cfi_endproc
 127              	.LFE2:
 128              		.size	Input_SW_ShiftReg_Init, .-Input_SW_ShiftReg_Init
 129              		.section	.text.Input_SW_ShiftReg_Stop,"ax",%progbits
 130              		.align	2
 131              		.global	Input_SW_ShiftReg_Stop
 132              		.thumb
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 5


 133              		.thumb_func
 134              		.type	Input_SW_ShiftReg_Stop, %function
 135              	Input_SW_ShiftReg_Stop:
 136              	.LFB3:
  97:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
  98:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
  99:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** /*******************************************************************************
 100:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Function Name: Input_SW_ShiftReg_Stop
 101:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** ********************************************************************************
 102:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 103:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Summary:
 104:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  Disables the Shift Register
 105:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 106:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Parameters:
 107:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  None.
 108:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 109:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Return:
 110:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  None.
 111:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 112:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *******************************************************************************/
 113:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** void Input_SW_ShiftReg_Stop(void) 
 114:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** {
 137              		.loc 1 114 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141 0000 80B5     		push	{r7, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145 0002 00AF     		add	r7, sp, #0
 146              		.cfi_def_cfa_register 7
 115:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     /*changing Datapath Control Store address to NOP space*/
 116:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     Input_SW_ShiftReg_SR_CONTROL &= ((uint8) ~Input_SW_ShiftReg_CLK_EN);
 147              		.loc 1 116 0
 148 0004 054A     		ldr	r2, .L10
 149 0006 054B     		ldr	r3, .L10
 150 0008 1B78     		ldrb	r3, [r3]
 151 000a DBB2     		uxtb	r3, r3
 152 000c 23F00103 		bic	r3, r3, #1
 153 0010 DBB2     		uxtb	r3, r3
 154 0012 1370     		strb	r3, [r2]
 117:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     Input_SW_ShiftReg_DisableInt();
 155              		.loc 1 117 0
 156 0014 FFF7FEFF 		bl	Input_SW_ShiftReg_DisableInt
 118:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** }
 157              		.loc 1 118 0
 158 0018 80BD     		pop	{r7, pc}
 159              	.L11:
 160 001a 00BF     		.align	2
 161              	.L10:
 162 001c 7E640040 		.word	1073767550
 163              		.cfi_endproc
 164              	.LFE3:
 165              		.size	Input_SW_ShiftReg_Stop, .-Input_SW_ShiftReg_Stop
 166              		.section	.text.Input_SW_ShiftReg_EnableInt,"ax",%progbits
 167              		.align	2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 6


 168              		.global	Input_SW_ShiftReg_EnableInt
 169              		.thumb
 170              		.thumb_func
 171              		.type	Input_SW_ShiftReg_EnableInt, %function
 172              	Input_SW_ShiftReg_EnableInt:
 173              	.LFB4:
 119:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 120:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 121:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** /*******************************************************************************
 122:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Function Name: Input_SW_ShiftReg_EnableInt
 123:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** ********************************************************************************
 124:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 125:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Summary:
 126:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  Enables the Shift Register interrupt.
 127:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 128:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Parameters:
 129:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  None.
 130:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 131:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Return:
 132:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  None.
 133:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 134:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *******************************************************************************/
 135:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** void Input_SW_ShiftReg_EnableInt(void) 
 136:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** {
 174              		.loc 1 136 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 8
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178 0000 80B5     		push	{r7, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 82B0     		sub	sp, sp, #8
 183              		.cfi_def_cfa_offset 16
 184 0004 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 137:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     uint8 interruptState;
 138:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 139:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     interruptState = CyEnterCriticalSection();
 186              		.loc 1 139 0
 187 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 188 000a 0346     		mov	r3, r0
 189 000c FB71     		strb	r3, [r7, #7]
 140:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     Input_SW_ShiftReg_SR_AUX_CONTROL |= Input_SW_ShiftReg_INTERRUPTS_ENABLE;
 190              		.loc 1 140 0
 191 000e 074A     		ldr	r2, .L13
 192 0010 064B     		ldr	r3, .L13
 193 0012 1B78     		ldrb	r3, [r3]
 194 0014 DBB2     		uxtb	r3, r3
 195 0016 43F01003 		orr	r3, r3, #16
 196 001a DBB2     		uxtb	r3, r3
 197 001c 1370     		strb	r3, [r2]
 141:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     CyExitCriticalSection(interruptState);
 198              		.loc 1 141 0
 199 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 200 0020 1846     		mov	r0, r3
 201 0022 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 7


 142:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** }
 202              		.loc 1 142 0
 203 0026 0837     		adds	r7, r7, #8
 204              		.cfi_def_cfa_offset 8
 205 0028 BD46     		mov	sp, r7
 206              		.cfi_def_cfa_register 13
 207              		@ sp needed
 208 002a 80BD     		pop	{r7, pc}
 209              	.L14:
 210              		.align	2
 211              	.L13:
 212 002c 9E640040 		.word	1073767582
 213              		.cfi_endproc
 214              	.LFE4:
 215              		.size	Input_SW_ShiftReg_EnableInt, .-Input_SW_ShiftReg_EnableInt
 216              		.section	.text.Input_SW_ShiftReg_DisableInt,"ax",%progbits
 217              		.align	2
 218              		.global	Input_SW_ShiftReg_DisableInt
 219              		.thumb
 220              		.thumb_func
 221              		.type	Input_SW_ShiftReg_DisableInt, %function
 222              	Input_SW_ShiftReg_DisableInt:
 223              	.LFB5:
 143:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 144:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 145:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** /*******************************************************************************
 146:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Function Name: Input_SW_ShiftReg_DisableInt
 147:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** ********************************************************************************
 148:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 149:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Summary:
 150:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  Disables the Shift Register interrupt.
 151:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 152:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Parameters:
 153:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  None.
 154:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 155:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Return:
 156:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  None.
 157:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 158:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *******************************************************************************/
 159:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** void Input_SW_ShiftReg_DisableInt(void) 
 160:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** {
 224              		.loc 1 160 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 8
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228 0000 80B5     		push	{r7, lr}
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 7, -8
 231              		.cfi_offset 14, -4
 232 0002 82B0     		sub	sp, sp, #8
 233              		.cfi_def_cfa_offset 16
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
 161:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     uint8 interruptState;
 162:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 163:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     interruptState = CyEnterCriticalSection();
 236              		.loc 1 163 0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 8


 237 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 238 000a 0346     		mov	r3, r0
 239 000c FB71     		strb	r3, [r7, #7]
 164:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     Input_SW_ShiftReg_SR_AUX_CONTROL &= ((uint8) ~Input_SW_ShiftReg_INTERRUPTS_ENABLE);
 240              		.loc 1 164 0
 241 000e 074A     		ldr	r2, .L16
 242 0010 064B     		ldr	r3, .L16
 243 0012 1B78     		ldrb	r3, [r3]
 244 0014 DBB2     		uxtb	r3, r3
 245 0016 23F01003 		bic	r3, r3, #16
 246 001a DBB2     		uxtb	r3, r3
 247 001c 1370     		strb	r3, [r2]
 165:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     CyExitCriticalSection(interruptState);
 248              		.loc 1 165 0
 249 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 250 0020 1846     		mov	r0, r3
 251 0022 FFF7FEFF 		bl	CyExitCriticalSection
 166:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** }
 252              		.loc 1 166 0
 253 0026 0837     		adds	r7, r7, #8
 254              		.cfi_def_cfa_offset 8
 255 0028 BD46     		mov	sp, r7
 256              		.cfi_def_cfa_register 13
 257              		@ sp needed
 258 002a 80BD     		pop	{r7, pc}
 259              	.L17:
 260              		.align	2
 261              	.L16:
 262 002c 9E640040 		.word	1073767582
 263              		.cfi_endproc
 264              	.LFE5:
 265              		.size	Input_SW_ShiftReg_DisableInt, .-Input_SW_ShiftReg_DisableInt
 266              		.section	.text.Input_SW_ShiftReg_GetFIFOStatus,"ax",%progbits
 267              		.align	2
 268              		.global	Input_SW_ShiftReg_GetFIFOStatus
 269              		.thumb
 270              		.thumb_func
 271              		.type	Input_SW_ShiftReg_GetFIFOStatus, %function
 272              	Input_SW_ShiftReg_GetFIFOStatus:
 273              	.LFB6:
 167:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 168:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 169:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** /*******************************************************************************
 170:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Function Name: Input_SW_ShiftReg_GetFIFOStatus
 171:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** ********************************************************************************
 172:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 173:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Summary:
 174:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  Returns current status of input or output FIFO.
 175:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 176:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Parameters:
 177:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  fifoId.
 178:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 179:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Return:
 180:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  FIFO status.
 181:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 182:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** uint8 Input_SW_ShiftReg_GetFIFOStatus(uint8 fifoId) 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 9


 184:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** {
 274              		.loc 1 184 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 16
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279 0000 80B4     		push	{r7}
 280              		.cfi_def_cfa_offset 4
 281              		.cfi_offset 7, -4
 282 0002 85B0     		sub	sp, sp, #20
 283              		.cfi_def_cfa_offset 24
 284 0004 00AF     		add	r7, sp, #0
 285              		.cfi_def_cfa_register 7
 286 0006 0346     		mov	r3, r0
 287 0008 FB71     		strb	r3, [r7, #7]
 185:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     uint8 result;
 186:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 187:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     result = Input_SW_ShiftReg_RET_FIFO_NOT_DEFINED;
 288              		.loc 1 187 0
 289 000a FE23     		movs	r3, #254
 290 000c FB73     		strb	r3, [r7, #15]
 188:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 189:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     #if(0u != Input_SW_ShiftReg_USE_INPUT_FIFO)
 190:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         if(Input_SW_ShiftReg_IN_FIFO == fifoId)
 191:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         {
 192:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****             switch(Input_SW_ShiftReg_GET_IN_FIFO_STS)
 193:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****             {
 194:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                 case Input_SW_ShiftReg_IN_FIFO_FULL :
 195:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                     result = Input_SW_ShiftReg_RET_FIFO_FULL;
 196:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                     break;
 197:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 198:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                 case Input_SW_ShiftReg_IN_FIFO_EMPTY :
 199:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                     result = Input_SW_ShiftReg_RET_FIFO_EMPTY;
 200:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                     break;
 201:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 202:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                 case Input_SW_ShiftReg_IN_FIFO_PARTIAL:
 203:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                     result = Input_SW_ShiftReg_RET_FIFO_PARTIAL;
 204:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                     break;
 205:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                     
 206:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                 default:
 207:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                     /* Initial result value, while 
 208:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                        IN_FIFO_EMPTY case is false 
 209:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                      */
 210:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                     result = Input_SW_ShiftReg_RET_FIFO_EMPTY;
 211:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                     break;
 212:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****             }   
 213:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         }
 214:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     #endif /* (0u != Input_SW_ShiftReg_USE_INPUT_FIFO) */
 215:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 216:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     if(Input_SW_ShiftReg_OUT_FIFO == fifoId)
 291              		.loc 1 216 0
 292 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 293 0010 022B     		cmp	r3, #2
 294 0012 18D1     		bne	.L19
 217:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     {
 218:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         switch(Input_SW_ShiftReg_GET_OUT_FIFO_STS)
 295              		.loc 1 218 0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 10


 296 0014 0F4B     		ldr	r3, .L26
 297 0016 1B78     		ldrb	r3, [r3]
 298 0018 DBB2     		uxtb	r3, r3
 299 001a 03F06003 		and	r3, r3, #96
 300 001e 5B09     		lsrs	r3, r3, #5
 301 0020 012B     		cmp	r3, #1
 302 0022 04D0     		beq	.L21
 303 0024 012B     		cmp	r3, #1
 304 0026 05D3     		bcc	.L22
 305 0028 022B     		cmp	r3, #2
 306 002a 06D0     		beq	.L23
 307 002c 08E0     		b	.L25
 308              	.L21:
 219:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         {
 220:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****             case Input_SW_ShiftReg_OUT_FIFO_FULL :
 221:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                 result = Input_SW_ShiftReg_RET_FIFO_FULL;
 309              		.loc 1 221 0
 310 002e 0023     		movs	r3, #0
 311 0030 FB73     		strb	r3, [r7, #15]
 222:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                 break;
 312              		.loc 1 222 0
 313 0032 08E0     		b	.L19
 314              	.L22:
 223:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 224:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****             case Input_SW_ShiftReg_OUT_FIFO_EMPTY :
 225:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                 result = Input_SW_ShiftReg_RET_FIFO_EMPTY;
 315              		.loc 1 225 0
 316 0034 0223     		movs	r3, #2
 317 0036 FB73     		strb	r3, [r7, #15]
 226:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                 break;
 318              		.loc 1 226 0
 319 0038 05E0     		b	.L19
 320              	.L23:
 227:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 228:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****             case Input_SW_ShiftReg_OUT_FIFO_PARTIAL :
 229:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                 result = Input_SW_ShiftReg_RET_FIFO_PARTIAL;
 321              		.loc 1 229 0
 322 003a 0123     		movs	r3, #1
 323 003c FB73     		strb	r3, [r7, #15]
 230:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                 break;
 324              		.loc 1 230 0
 325 003e 02E0     		b	.L19
 326              	.L25:
 231:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 232:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****             default:
 233:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                 /* Initial result value, while 
 234:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                    OUT_FIFO_FULL case is false 
 235:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                  */
 236:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                 result = Input_SW_ShiftReg_RET_FIFO_FULL;
 327              		.loc 1 236 0
 328 0040 0023     		movs	r3, #0
 329 0042 FB73     		strb	r3, [r7, #15]
 237:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                 break;
 330              		.loc 1 237 0
 331 0044 00BF     		nop
 332              	.L19:
 238:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         }
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 11


 239:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     }
 240:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 241:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     return(result);
 333              		.loc 1 241 0
 334 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 242:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** }
 335              		.loc 1 242 0
 336 0048 1846     		mov	r0, r3
 337 004a 1437     		adds	r7, r7, #20
 338              		.cfi_def_cfa_offset 4
 339 004c BD46     		mov	sp, r7
 340              		.cfi_def_cfa_register 13
 341              		@ sp needed
 342 004e 5DF8047B 		ldr	r7, [sp], #4
 343              		.cfi_restore 7
 344              		.cfi_def_cfa_offset 0
 345 0052 7047     		bx	lr
 346              	.L27:
 347              		.align	2
 348              	.L26:
 349 0054 6E640040 		.word	1073767534
 350              		.cfi_endproc
 351              	.LFE6:
 352              		.size	Input_SW_ShiftReg_GetFIFOStatus, .-Input_SW_ShiftReg_GetFIFOStatus
 353              		.section	.text.Input_SW_ShiftReg_SetIntMode,"ax",%progbits
 354              		.align	2
 355              		.global	Input_SW_ShiftReg_SetIntMode
 356              		.thumb
 357              		.thumb_func
 358              		.type	Input_SW_ShiftReg_SetIntMode, %function
 359              	Input_SW_ShiftReg_SetIntMode:
 360              	.LFB7:
 243:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 244:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 245:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** /*******************************************************************************
 246:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Function Name: Input_SW_ShiftReg_SetIntMode
 247:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** ********************************************************************************
 248:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 249:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Summary:
 250:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  Sets the Interrupt Source for the Shift Register interrupt. Multiple
 251:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  sources may be ORed together
 252:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 253:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Parameters:
 254:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  interruptSource: Byte containing the constant for the selected interrupt
 255:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  source/s.
 256:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 257:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Return:
 258:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  None.
 259:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 260:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *******************************************************************************/
 261:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** void Input_SW_ShiftReg_SetIntMode(uint8 interruptSource) 
 262:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** {
 361              		.loc 1 262 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 8
 364              		@ frame_needed = 1, uses_anonymous_args = 0
 365              		@ link register save eliminated.
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 12


 366 0000 80B4     		push	{r7}
 367              		.cfi_def_cfa_offset 4
 368              		.cfi_offset 7, -4
 369 0002 83B0     		sub	sp, sp, #12
 370              		.cfi_def_cfa_offset 16
 371 0004 00AF     		add	r7, sp, #0
 372              		.cfi_def_cfa_register 7
 373 0006 0346     		mov	r3, r0
 374 0008 FB71     		strb	r3, [r7, #7]
 263:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     Input_SW_ShiftReg_SR_STATUS_MASK &= ((uint8) ~Input_SW_ShiftReg_INTS_EN_MASK);          /* Clea
 375              		.loc 1 263 0
 376 000a 0C4A     		ldr	r2, .L29
 377 000c 0B4B     		ldr	r3, .L29
 378 000e 1B78     		ldrb	r3, [r3]
 379 0010 DBB2     		uxtb	r3, r3
 380 0012 23F00703 		bic	r3, r3, #7
 381 0016 DBB2     		uxtb	r3, r3
 382 0018 1370     		strb	r3, [r2]
 264:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     Input_SW_ShiftReg_SR_STATUS_MASK |= (interruptSource & Input_SW_ShiftReg_INTS_EN_MASK); /* Set 
 383              		.loc 1 264 0
 384 001a 0849     		ldr	r1, .L29
 385 001c 074B     		ldr	r3, .L29
 386 001e 1B78     		ldrb	r3, [r3]
 387 0020 DAB2     		uxtb	r2, r3
 388 0022 FB79     		ldrb	r3, [r7, #7]
 389 0024 03F00703 		and	r3, r3, #7
 390 0028 DBB2     		uxtb	r3, r3
 391 002a 1343     		orrs	r3, r3, r2
 392 002c DBB2     		uxtb	r3, r3
 393 002e 0B70     		strb	r3, [r1]
 265:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** }
 394              		.loc 1 265 0
 395 0030 0C37     		adds	r7, r7, #12
 396              		.cfi_def_cfa_offset 4
 397 0032 BD46     		mov	sp, r7
 398              		.cfi_def_cfa_register 13
 399              		@ sp needed
 400 0034 5DF8047B 		ldr	r7, [sp], #4
 401              		.cfi_restore 7
 402              		.cfi_def_cfa_offset 0
 403 0038 7047     		bx	lr
 404              	.L30:
 405 003a 00BF     		.align	2
 406              	.L29:
 407 003c 8E640040 		.word	1073767566
 408              		.cfi_endproc
 409              	.LFE7:
 410              		.size	Input_SW_ShiftReg_SetIntMode, .-Input_SW_ShiftReg_SetIntMode
 411              		.section	.text.Input_SW_ShiftReg_GetIntStatus,"ax",%progbits
 412              		.align	2
 413              		.global	Input_SW_ShiftReg_GetIntStatus
 414              		.thumb
 415              		.thumb_func
 416              		.type	Input_SW_ShiftReg_GetIntStatus, %function
 417              	Input_SW_ShiftReg_GetIntStatus:
 418              	.LFB8:
 266:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 13


 267:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 268:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** /*******************************************************************************
 269:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Function Name: Input_SW_ShiftReg_GetIntStatus
 270:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** ********************************************************************************
 271:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 272:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Summary:
 273:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  Gets the Shift Register Interrupt status.
 274:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 275:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Parameters:
 276:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  None.
 277:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 278:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Return:
 279:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  Byte containing the constant for the selected interrupt source/s.
 280:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 281:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *******************************************************************************/
 282:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** uint8 Input_SW_ShiftReg_GetIntStatus(void) 
 283:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** {
 419              		.loc 1 283 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424 0000 80B4     		push	{r7}
 425              		.cfi_def_cfa_offset 4
 426              		.cfi_offset 7, -4
 427 0002 00AF     		add	r7, sp, #0
 428              		.cfi_def_cfa_register 7
 284:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     return(Input_SW_ShiftReg_SR_STATUS & Input_SW_ShiftReg_INTS_EN_MASK);
 429              		.loc 1 284 0
 430 0004 054B     		ldr	r3, .L33
 431 0006 1B78     		ldrb	r3, [r3]
 432 0008 DBB2     		uxtb	r3, r3
 433 000a 03F00703 		and	r3, r3, #7
 434 000e DBB2     		uxtb	r3, r3
 285:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** }
 435              		.loc 1 285 0
 436 0010 1846     		mov	r0, r3
 437 0012 BD46     		mov	sp, r7
 438              		.cfi_def_cfa_register 13
 439              		@ sp needed
 440 0014 5DF8047B 		ldr	r7, [sp], #4
 441              		.cfi_restore 7
 442              		.cfi_def_cfa_offset 0
 443 0018 7047     		bx	lr
 444              	.L34:
 445 001a 00BF     		.align	2
 446              	.L33:
 447 001c 6E640040 		.word	1073767534
 448              		.cfi_endproc
 449              	.LFE8:
 450              		.size	Input_SW_ShiftReg_GetIntStatus, .-Input_SW_ShiftReg_GetIntStatus
 451              		.section	.text.Input_SW_ShiftReg_WriteRegValue,"ax",%progbits
 452              		.align	2
 453              		.global	Input_SW_ShiftReg_WriteRegValue
 454              		.thumb
 455              		.thumb_func
 456              		.type	Input_SW_ShiftReg_WriteRegValue, %function
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 14


 457              	Input_SW_ShiftReg_WriteRegValue:
 458              	.LFB9:
 286:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 287:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 288:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** /*******************************************************************************
 289:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Function Name: Input_SW_ShiftReg_WriteRegValue
 290:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** ********************************************************************************
 291:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 292:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Summary:
 293:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  Send state directly to shift register
 294:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 295:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Parameters:
 296:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  shiftData: containing shift register state.
 297:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 298:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Return:
 299:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  None.
 300:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 301:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** void Input_SW_ShiftReg_WriteRegValue(uint32 shiftData)
 303:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                                                                      
 304:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** {
 459              		.loc 1 304 0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 8
 462              		@ frame_needed = 1, uses_anonymous_args = 0
 463              		@ link register save eliminated.
 464 0000 80B4     		push	{r7}
 465              		.cfi_def_cfa_offset 4
 466              		.cfi_offset 7, -4
 467 0002 83B0     		sub	sp, sp, #12
 468              		.cfi_def_cfa_offset 16
 469 0004 00AF     		add	r7, sp, #0
 470              		.cfi_def_cfa_register 7
 471 0006 7860     		str	r0, [r7, #4]
 305:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     CY_SET_REG32(Input_SW_ShiftReg_SHIFT_REG_LSB_PTR, shiftData);
 472              		.loc 1 305 0
 473 0008 034A     		ldr	r2, .L36
 474 000a 7B68     		ldr	r3, [r7, #4]
 475 000c 1360     		str	r3, [r2]
 306:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** }
 476              		.loc 1 306 0
 477 000e 0C37     		adds	r7, r7, #12
 478              		.cfi_def_cfa_offset 4
 479 0010 BD46     		mov	sp, r7
 480              		.cfi_def_cfa_register 13
 481              		@ sp needed
 482 0012 5DF8047B 		ldr	r7, [sp], #4
 483              		.cfi_restore 7
 484              		.cfi_def_cfa_offset 0
 485 0016 7047     		bx	lr
 486              	.L37:
 487              		.align	2
 488              	.L36:
 489 0018 0A640040 		.word	1073767434
 490              		.cfi_endproc
 491              	.LFE9:
 492              		.size	Input_SW_ShiftReg_WriteRegValue, .-Input_SW_ShiftReg_WriteRegValue
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 15


 493              		.section	.text.Input_SW_ShiftReg_ReadData,"ax",%progbits
 494              		.align	2
 495              		.global	Input_SW_ShiftReg_ReadData
 496              		.thumb
 497              		.thumb_func
 498              		.type	Input_SW_ShiftReg_ReadData, %function
 499              	Input_SW_ShiftReg_ReadData:
 500              	.LFB10:
 307:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 308:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 309:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** #if(0u != Input_SW_ShiftReg_USE_INPUT_FIFO)
 310:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     /*******************************************************************************
 311:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     * Function Name: Input_SW_ShiftReg_WriteData
 312:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     ********************************************************************************
 313:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *
 314:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     * Summary:
 315:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *  Send state to FIFO for later transfer to shift register based on the Load
 316:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *  input
 317:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *
 318:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     * Parameters:
 319:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *  shiftData: containing shift register state.
 320:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *
 321:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     * Return:
 322:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *  Indicates: successful execution of function
 323:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *  when FIFO is empty; and error when FIFO is full.
 324:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *
 325:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     * Reentrant:
 326:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *  No.
 327:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *
 328:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *******************************************************************************/
 329:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     cystatus Input_SW_ShiftReg_WriteData(uint32 shiftData)
 330:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****                                                                          
 331:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     {
 332:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         cystatus result;
 333:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 334:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         result = CYRET_INVALID_STATE;
 335:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 336:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         /* Writes data into the input FIFO if it is not FULL */
 337:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         if(Input_SW_ShiftReg_RET_FIFO_FULL != (Input_SW_ShiftReg_GetFIFOStatus(Input_SW_ShiftReg_IN
 338:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         {
 339:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****             CY_SET_REG32(Input_SW_ShiftReg_IN_FIFO_VAL_LSB_PTR, shiftData);
 340:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****             result = CYRET_SUCCESS;
 341:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         }
 342:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 343:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         return(result);
 344:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     }
 345:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** #endif /* (0u != Input_SW_ShiftReg_USE_INPUT_FIFO) */
 346:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 347:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 348:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** #if(0u != Input_SW_ShiftReg_USE_OUTPUT_FIFO)
 349:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     /*******************************************************************************
 350:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     * Function Name: Input_SW_ShiftReg_ReadData
 351:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     ********************************************************************************
 352:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *
 353:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     * Summary:
 354:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *  Returns state in FIFO due to Store input.
 355:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 16


 356:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     * Parameters:
 357:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *  None.
 358:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *
 359:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     * Return:
 360:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *  Shift Register state
 361:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *
 362:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     * Reentrant:
 363:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *  No.
 364:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *
 365:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     *******************************************************************************/
 366:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     uint32 Input_SW_ShiftReg_ReadData(void) 
 367:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     {
 501              		.loc 1 367 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 506 0000 80B4     		push	{r7}
 507              		.cfi_def_cfa_offset 4
 508              		.cfi_offset 7, -4
 509 0002 00AF     		add	r7, sp, #0
 510              		.cfi_def_cfa_register 7
 368:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         return(CY_GET_REG32(Input_SW_ShiftReg_OUT_FIFO_VAL_LSB_PTR));
 511              		.loc 1 368 0
 512 0004 034B     		ldr	r3, .L40
 513 0006 1B68     		ldr	r3, [r3]
 369:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     }
 514              		.loc 1 369 0
 515 0008 1846     		mov	r0, r3
 516 000a BD46     		mov	sp, r7
 517              		.cfi_def_cfa_register 13
 518              		@ sp needed
 519 000c 5DF8047B 		ldr	r7, [sp], #4
 520              		.cfi_restore 7
 521              		.cfi_def_cfa_offset 0
 522 0010 7047     		bx	lr
 523              	.L41:
 524 0012 00BF     		.align	2
 525              	.L40:
 526 0014 5A640040 		.word	1073767514
 527              		.cfi_endproc
 528              	.LFE10:
 529              		.size	Input_SW_ShiftReg_ReadData, .-Input_SW_ShiftReg_ReadData
 530              		.section	.text.Input_SW_ShiftReg_ReadRegValue,"ax",%progbits
 531              		.align	2
 532              		.global	Input_SW_ShiftReg_ReadRegValue
 533              		.thumb
 534              		.thumb_func
 535              		.type	Input_SW_ShiftReg_ReadRegValue, %function
 536              	Input_SW_ShiftReg_ReadRegValue:
 537              	.LFB11:
 370:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** #endif /* (0u != Input_SW_ShiftReg_USE_OUTPUT_FIFO) */
 371:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 372:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 373:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** /*******************************************************************************
 374:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Function Name: Input_SW_ShiftReg_ReadRegValue
 375:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** ********************************************************************************
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 17


 376:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 377:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Summary:
 378:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  Directly returns current state in shift register, not data in FIFO due
 379:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  to Store input.
 380:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 381:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Parameters:
 382:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  None.
 383:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 384:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Return:
 385:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  Shift Register state. Clears output FIFO.
 386:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 387:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** * Reentrant:
 388:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *  No.
 389:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *
 390:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** *******************************************************************************/
 391:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** uint32 Input_SW_ShiftReg_ReadRegValue(void) 
 392:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** {
 538              		.loc 1 392 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 8
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542 0000 80B5     		push	{r7, lr}
 543              		.cfi_def_cfa_offset 8
 544              		.cfi_offset 7, -8
 545              		.cfi_offset 14, -4
 546 0002 82B0     		sub	sp, sp, #8
 547              		.cfi_def_cfa_offset 16
 548 0004 00AF     		add	r7, sp, #0
 549              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     uint32 result;
 394:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 395:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     /* Clear FIFO before software capture */
 396:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     while(Input_SW_ShiftReg_RET_FIFO_EMPTY != Input_SW_ShiftReg_GetFIFOStatus(Input_SW_ShiftReg_OUT
 550              		.loc 1 396 0
 551 0006 01E0     		b	.L43
 552              	.L44:
 397:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     {
 398:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         (void) CY_GET_REG32(Input_SW_ShiftReg_OUT_FIFO_VAL_LSB_PTR);
 553              		.loc 1 398 0
 554 0008 084B     		ldr	r3, .L46
 555 000a 1B68     		ldr	r3, [r3]
 556              	.L43:
 396:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     {
 557              		.loc 1 396 0
 558 000c 0220     		movs	r0, #2
 559 000e FFF7FEFF 		bl	Input_SW_ShiftReg_GetFIFOStatus
 560 0012 0346     		mov	r3, r0
 561 0014 022B     		cmp	r3, #2
 562 0016 F7D1     		bne	.L44
 399:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     }
 400:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
 401:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     /* Read of 8 bits from A1 causes capture to output FIFO */
 402:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     (void) CY_GET_REG8(Input_SW_ShiftReg_SHIFT_REG_CAPTURE_PTR);
 563              		.loc 1 402 0
 564 0018 054B     		ldr	r3, .L46+4
 565 001a 1B78     		ldrb	r3, [r3]
 403:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 18


 404:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     /* Read output FIFO */
 405:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     result  = CY_GET_REG32(Input_SW_ShiftReg_OUT_FIFO_VAL_LSB_PTR);
 566              		.loc 1 405 0
 567 001c 034B     		ldr	r3, .L46
 568 001e 1B68     		ldr	r3, [r3]
 569 0020 7B60     		str	r3, [r7, #4]
 406:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     
 407:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     #if(0u != (Input_SW_ShiftReg_SR_SIZE % 8u))
 408:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****         result &= ((uint32) Input_SW_ShiftReg_SR_MASK);
 409:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     #endif /* (0u != (Input_SW_ShiftReg_SR_SIZE % 8u)) */
 410:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     
 411:Generated_Source\PSoC5/Input_SW_ShiftReg.c ****     return(result);
 570              		.loc 1 411 0
 571 0022 7B68     		ldr	r3, [r7, #4]
 412:Generated_Source\PSoC5/Input_SW_ShiftReg.c **** }
 572              		.loc 1 412 0
 573 0024 1846     		mov	r0, r3
 574 0026 0837     		adds	r7, r7, #8
 575              		.cfi_def_cfa_offset 8
 576 0028 BD46     		mov	sp, r7
 577              		.cfi_def_cfa_register 13
 578              		@ sp needed
 579 002a 80BD     		pop	{r7, pc}
 580              	.L47:
 581              		.align	2
 582              	.L46:
 583 002c 5A640040 		.word	1073767514
 584 0030 1A640040 		.word	1073767450
 585              		.cfi_endproc
 586              	.LFE11:
 587              		.size	Input_SW_ShiftReg_ReadRegValue, .-Input_SW_ShiftReg_ReadRegValue
 588              		.text
 589              	.Letext0:
 590              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 591              		.section	.debug_info,"",%progbits
 592              	.Ldebug_info0:
 593 0000 33020000 		.4byte	0x233
 594 0004 0400     		.2byte	0x4
 595 0006 00000000 		.4byte	.Ldebug_abbrev0
 596 000a 04       		.byte	0x4
 597 000b 01       		.uleb128 0x1
 598 000c 72010000 		.4byte	.LASF34
 599 0010 01       		.byte	0x1
 600 0011 43000000 		.4byte	.LASF35
 601 0015 07020000 		.4byte	.LASF36
 602 0019 00000000 		.4byte	.Ldebug_ranges0+0
 603 001d 00000000 		.4byte	0
 604 0021 00000000 		.4byte	.Ldebug_line0
 605 0025 02       		.uleb128 0x2
 606 0026 01       		.byte	0x1
 607 0027 06       		.byte	0x6
 608 0028 20030000 		.4byte	.LASF0
 609 002c 02       		.uleb128 0x2
 610 002d 01       		.byte	0x1
 611 002e 08       		.byte	0x8
 612 002f 01010000 		.4byte	.LASF1
 613 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 19


 614 0034 02       		.byte	0x2
 615 0035 05       		.byte	0x5
 616 0036 D1020000 		.4byte	.LASF2
 617 003a 02       		.uleb128 0x2
 618 003b 02       		.byte	0x2
 619 003c 07       		.byte	0x7
 620 003d 2C030000 		.4byte	.LASF3
 621 0041 02       		.uleb128 0x2
 622 0042 04       		.byte	0x4
 623 0043 05       		.byte	0x5
 624 0044 17030000 		.4byte	.LASF4
 625 0048 02       		.uleb128 0x2
 626 0049 04       		.byte	0x4
 627 004a 07       		.byte	0x7
 628 004b 23010000 		.4byte	.LASF5
 629 004f 02       		.uleb128 0x2
 630 0050 08       		.byte	0x8
 631 0051 05       		.byte	0x5
 632 0052 A7020000 		.4byte	.LASF6
 633 0056 02       		.uleb128 0x2
 634 0057 08       		.byte	0x8
 635 0058 07       		.byte	0x7
 636 0059 80020000 		.4byte	.LASF7
 637 005d 03       		.uleb128 0x3
 638 005e 04       		.byte	0x4
 639 005f 05       		.byte	0x5
 640 0060 696E7400 		.ascii	"int\000"
 641 0064 02       		.uleb128 0x2
 642 0065 04       		.byte	0x4
 643 0066 07       		.byte	0x7
 644 0067 73020000 		.4byte	.LASF8
 645 006b 04       		.uleb128 0x4
 646 006c 4E010000 		.4byte	.LASF9
 647 0070 02       		.byte	0x2
 648 0071 9201     		.2byte	0x192
 649 0073 2C000000 		.4byte	0x2c
 650 0077 04       		.uleb128 0x4
 651 0078 6C020000 		.4byte	.LASF10
 652 007c 02       		.byte	0x2
 653 007d 9401     		.2byte	0x194
 654 007f 48000000 		.4byte	0x48
 655 0083 02       		.uleb128 0x2
 656 0084 04       		.byte	0x4
 657 0085 04       		.byte	0x4
 658 0086 E1000000 		.4byte	.LASF11
 659 008a 02       		.uleb128 0x2
 660 008b 08       		.byte	0x8
 661 008c 04       		.byte	0x4
 662 008d 00020000 		.4byte	.LASF12
 663 0091 02       		.uleb128 0x2
 664 0092 01       		.byte	0x1
 665 0093 08       		.byte	0x8
 666 0094 CC020000 		.4byte	.LASF13
 667 0098 04       		.uleb128 0x4
 668 0099 0F010000 		.4byte	.LASF14
 669 009d 02       		.byte	0x2
 670 009e 3C02     		.2byte	0x23c
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 20


 671 00a0 A4000000 		.4byte	0xa4
 672 00a4 05       		.uleb128 0x5
 673 00a5 6B000000 		.4byte	0x6b
 674 00a9 04       		.uleb128 0x4
 675 00aa 3D000000 		.4byte	.LASF15
 676 00ae 02       		.byte	0x2
 677 00af 3E02     		.2byte	0x23e
 678 00b1 B5000000 		.4byte	0xb5
 679 00b5 05       		.uleb128 0x5
 680 00b6 77000000 		.4byte	0x77
 681 00ba 02       		.uleb128 0x2
 682 00bb 04       		.byte	0x4
 683 00bc 07       		.byte	0x7
 684 00bd 9E020000 		.4byte	.LASF16
 685 00c1 06       		.uleb128 0x6
 686 00c2 AC000000 		.4byte	.LASF17
 687 00c6 01       		.byte	0x1
 688 00c7 2B       		.byte	0x2b
 689 00c8 00000000 		.4byte	.LFB0
 690 00cc 20000000 		.4byte	.LFE0-.LFB0
 691 00d0 01       		.uleb128 0x1
 692 00d1 9C       		.byte	0x9c
 693 00d2 06       		.uleb128 0x6
 694 00d3 35010000 		.4byte	.LASF18
 695 00d7 01       		.byte	0x1
 696 00d8 45       		.byte	0x45
 697 00d9 00000000 		.4byte	.LFB1
 698 00dd 20000000 		.4byte	.LFE1-.LFB1
 699 00e1 01       		.uleb128 0x1
 700 00e2 9C       		.byte	0x9c
 701 00e3 06       		.uleb128 0x6
 702 00e4 54010000 		.4byte	.LASF19
 703 00e8 01       		.byte	0x1
 704 00e9 5D       		.byte	0x5d
 705 00ea 00000000 		.4byte	.LFB2
 706 00ee 0C000000 		.4byte	.LFE2-.LFB2
 707 00f2 01       		.uleb128 0x1
 708 00f3 9C       		.byte	0x9c
 709 00f4 06       		.uleb128 0x6
 710 00f5 B5020000 		.4byte	.LASF20
 711 00f9 01       		.byte	0x1
 712 00fa 71       		.byte	0x71
 713 00fb 00000000 		.4byte	.LFB3
 714 00ff 20000000 		.4byte	.LFE3-.LFB3
 715 0103 01       		.uleb128 0x1
 716 0104 9C       		.byte	0x9c
 717 0105 07       		.uleb128 0x7
 718 0106 DB020000 		.4byte	.LASF21
 719 010a 01       		.byte	0x1
 720 010b 87       		.byte	0x87
 721 010c 00000000 		.4byte	.LFB4
 722 0110 30000000 		.4byte	.LFE4-.LFB4
 723 0114 01       		.uleb128 0x1
 724 0115 9C       		.byte	0x9c
 725 0116 29010000 		.4byte	0x129
 726 011a 08       		.uleb128 0x8
 727 011b 14010000 		.4byte	.LASF23
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 21


 728 011f 01       		.byte	0x1
 729 0120 89       		.byte	0x89
 730 0121 6B000000 		.4byte	0x6b
 731 0125 02       		.uleb128 0x2
 732 0126 91       		.byte	0x91
 733 0127 77       		.sleb128 -9
 734 0128 00       		.byte	0
 735 0129 07       		.uleb128 0x7
 736 012a 20000000 		.4byte	.LASF22
 737 012e 01       		.byte	0x1
 738 012f 9F       		.byte	0x9f
 739 0130 00000000 		.4byte	.LFB5
 740 0134 30000000 		.4byte	.LFE5-.LFB5
 741 0138 01       		.uleb128 0x1
 742 0139 9C       		.byte	0x9c
 743 013a 4D010000 		.4byte	0x14d
 744 013e 08       		.uleb128 0x8
 745 013f 14010000 		.4byte	.LASF23
 746 0143 01       		.byte	0x1
 747 0144 A1       		.byte	0xa1
 748 0145 6B000000 		.4byte	0x6b
 749 0149 02       		.uleb128 0x2
 750 014a 91       		.byte	0x91
 751 014b 77       		.sleb128 -9
 752 014c 00       		.byte	0
 753 014d 09       		.uleb128 0x9
 754 014e F7020000 		.4byte	.LASF32
 755 0152 01       		.byte	0x1
 756 0153 B7       		.byte	0xb7
 757 0154 6B000000 		.4byte	0x6b
 758 0158 00000000 		.4byte	.LFB6
 759 015c 58000000 		.4byte	.LFE6-.LFB6
 760 0160 01       		.uleb128 0x1
 761 0161 9C       		.byte	0x9c
 762 0162 83010000 		.4byte	0x183
 763 0166 0A       		.uleb128 0xa
 764 0167 6B010000 		.4byte	.LASF26
 765 016b 01       		.byte	0x1
 766 016c B7       		.byte	0xb7
 767 016d 6B000000 		.4byte	0x6b
 768 0171 02       		.uleb128 0x2
 769 0172 91       		.byte	0x91
 770 0173 6F       		.sleb128 -17
 771 0174 08       		.uleb128 0x8
 772 0175 97020000 		.4byte	.LASF24
 773 0179 01       		.byte	0x1
 774 017a B9       		.byte	0xb9
 775 017b 6B000000 		.4byte	0x6b
 776 017f 02       		.uleb128 0x2
 777 0180 91       		.byte	0x91
 778 0181 77       		.sleb128 -9
 779 0182 00       		.byte	0
 780 0183 0B       		.uleb128 0xb
 781 0184 C4000000 		.4byte	.LASF25
 782 0188 01       		.byte	0x1
 783 0189 0501     		.2byte	0x105
 784 018b 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 22


 785 018f 40000000 		.4byte	.LFE7-.LFB7
 786 0193 01       		.uleb128 0x1
 787 0194 9C       		.byte	0x9c
 788 0195 A9010000 		.4byte	0x1a9
 789 0199 0C       		.uleb128 0xc
 790 019a 52020000 		.4byte	.LASF27
 791 019e 01       		.byte	0x1
 792 019f 0501     		.2byte	0x105
 793 01a1 6B000000 		.4byte	0x6b
 794 01a5 02       		.uleb128 0x2
 795 01a6 91       		.byte	0x91
 796 01a7 77       		.sleb128 -9
 797 01a8 00       		.byte	0
 798 01a9 0D       		.uleb128 0xd
 799 01aa 6E000000 		.4byte	.LASF30
 800 01ae 01       		.byte	0x1
 801 01af 1A01     		.2byte	0x11a
 802 01b1 6B000000 		.4byte	0x6b
 803 01b5 00000000 		.4byte	.LFB8
 804 01b9 20000000 		.4byte	.LFE8-.LFB8
 805 01bd 01       		.uleb128 0x1
 806 01be 9C       		.byte	0x9c
 807 01bf 0B       		.uleb128 0xb
 808 01c0 00000000 		.4byte	.LASF28
 809 01c4 01       		.byte	0x1
 810 01c5 2E01     		.2byte	0x12e
 811 01c7 00000000 		.4byte	.LFB9
 812 01cb 1C000000 		.4byte	.LFE9-.LFB9
 813 01cf 01       		.uleb128 0x1
 814 01d0 9C       		.byte	0x9c
 815 01d1 E5010000 		.4byte	0x1e5
 816 01d5 0C       		.uleb128 0xc
 817 01d6 62020000 		.4byte	.LASF29
 818 01da 01       		.byte	0x1
 819 01db 2E01     		.2byte	0x12e
 820 01dd 77000000 		.4byte	0x77
 821 01e1 02       		.uleb128 0x2
 822 01e2 91       		.byte	0x91
 823 01e3 74       		.sleb128 -12
 824 01e4 00       		.byte	0
 825 01e5 0D       		.uleb128 0xd
 826 01e6 3F030000 		.4byte	.LASF31
 827 01ea 01       		.byte	0x1
 828 01eb 6E01     		.2byte	0x16e
 829 01ed 77000000 		.4byte	0x77
 830 01f1 00000000 		.4byte	.LFB10
 831 01f5 18000000 		.4byte	.LFE10-.LFB10
 832 01f9 01       		.uleb128 0x1
 833 01fa 9C       		.byte	0x9c
 834 01fb 0E       		.uleb128 0xe
 835 01fc 8D000000 		.4byte	.LASF33
 836 0200 01       		.byte	0x1
 837 0201 8701     		.2byte	0x187
 838 0203 77000000 		.4byte	0x77
 839 0207 00000000 		.4byte	.LFB11
 840 020b 34000000 		.4byte	.LFE11-.LFB11
 841 020f 01       		.uleb128 0x1
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 23


 842 0210 9C       		.byte	0x9c
 843 0211 25020000 		.4byte	0x225
 844 0215 0F       		.uleb128 0xf
 845 0216 97020000 		.4byte	.LASF24
 846 021a 01       		.byte	0x1
 847 021b 8901     		.2byte	0x189
 848 021d 77000000 		.4byte	0x77
 849 0221 02       		.uleb128 0x2
 850 0222 91       		.byte	0x91
 851 0223 74       		.sleb128 -12
 852 0224 00       		.byte	0
 853 0225 10       		.uleb128 0x10
 854 0226 E7000000 		.4byte	.LASF37
 855 022a 01       		.byte	0x1
 856 022b 13       		.byte	0x13
 857 022c 6B000000 		.4byte	0x6b
 858 0230 05       		.uleb128 0x5
 859 0231 03       		.byte	0x3
 860 0232 00000000 		.4byte	Input_SW_ShiftReg_initVar
 861 0236 00       		.byte	0
 862              		.section	.debug_abbrev,"",%progbits
 863              	.Ldebug_abbrev0:
 864 0000 01       		.uleb128 0x1
 865 0001 11       		.uleb128 0x11
 866 0002 01       		.byte	0x1
 867 0003 25       		.uleb128 0x25
 868 0004 0E       		.uleb128 0xe
 869 0005 13       		.uleb128 0x13
 870 0006 0B       		.uleb128 0xb
 871 0007 03       		.uleb128 0x3
 872 0008 0E       		.uleb128 0xe
 873 0009 1B       		.uleb128 0x1b
 874 000a 0E       		.uleb128 0xe
 875 000b 55       		.uleb128 0x55
 876 000c 17       		.uleb128 0x17
 877 000d 11       		.uleb128 0x11
 878 000e 01       		.uleb128 0x1
 879 000f 10       		.uleb128 0x10
 880 0010 17       		.uleb128 0x17
 881 0011 00       		.byte	0
 882 0012 00       		.byte	0
 883 0013 02       		.uleb128 0x2
 884 0014 24       		.uleb128 0x24
 885 0015 00       		.byte	0
 886 0016 0B       		.uleb128 0xb
 887 0017 0B       		.uleb128 0xb
 888 0018 3E       		.uleb128 0x3e
 889 0019 0B       		.uleb128 0xb
 890 001a 03       		.uleb128 0x3
 891 001b 0E       		.uleb128 0xe
 892 001c 00       		.byte	0
 893 001d 00       		.byte	0
 894 001e 03       		.uleb128 0x3
 895 001f 24       		.uleb128 0x24
 896 0020 00       		.byte	0
 897 0021 0B       		.uleb128 0xb
 898 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 24


 899 0023 3E       		.uleb128 0x3e
 900 0024 0B       		.uleb128 0xb
 901 0025 03       		.uleb128 0x3
 902 0026 08       		.uleb128 0x8
 903 0027 00       		.byte	0
 904 0028 00       		.byte	0
 905 0029 04       		.uleb128 0x4
 906 002a 16       		.uleb128 0x16
 907 002b 00       		.byte	0
 908 002c 03       		.uleb128 0x3
 909 002d 0E       		.uleb128 0xe
 910 002e 3A       		.uleb128 0x3a
 911 002f 0B       		.uleb128 0xb
 912 0030 3B       		.uleb128 0x3b
 913 0031 05       		.uleb128 0x5
 914 0032 49       		.uleb128 0x49
 915 0033 13       		.uleb128 0x13
 916 0034 00       		.byte	0
 917 0035 00       		.byte	0
 918 0036 05       		.uleb128 0x5
 919 0037 35       		.uleb128 0x35
 920 0038 00       		.byte	0
 921 0039 49       		.uleb128 0x49
 922 003a 13       		.uleb128 0x13
 923 003b 00       		.byte	0
 924 003c 00       		.byte	0
 925 003d 06       		.uleb128 0x6
 926 003e 2E       		.uleb128 0x2e
 927 003f 00       		.byte	0
 928 0040 3F       		.uleb128 0x3f
 929 0041 19       		.uleb128 0x19
 930 0042 03       		.uleb128 0x3
 931 0043 0E       		.uleb128 0xe
 932 0044 3A       		.uleb128 0x3a
 933 0045 0B       		.uleb128 0xb
 934 0046 3B       		.uleb128 0x3b
 935 0047 0B       		.uleb128 0xb
 936 0048 27       		.uleb128 0x27
 937 0049 19       		.uleb128 0x19
 938 004a 11       		.uleb128 0x11
 939 004b 01       		.uleb128 0x1
 940 004c 12       		.uleb128 0x12
 941 004d 06       		.uleb128 0x6
 942 004e 40       		.uleb128 0x40
 943 004f 18       		.uleb128 0x18
 944 0050 9642     		.uleb128 0x2116
 945 0052 19       		.uleb128 0x19
 946 0053 00       		.byte	0
 947 0054 00       		.byte	0
 948 0055 07       		.uleb128 0x7
 949 0056 2E       		.uleb128 0x2e
 950 0057 01       		.byte	0x1
 951 0058 3F       		.uleb128 0x3f
 952 0059 19       		.uleb128 0x19
 953 005a 03       		.uleb128 0x3
 954 005b 0E       		.uleb128 0xe
 955 005c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 25


 956 005d 0B       		.uleb128 0xb
 957 005e 3B       		.uleb128 0x3b
 958 005f 0B       		.uleb128 0xb
 959 0060 27       		.uleb128 0x27
 960 0061 19       		.uleb128 0x19
 961 0062 11       		.uleb128 0x11
 962 0063 01       		.uleb128 0x1
 963 0064 12       		.uleb128 0x12
 964 0065 06       		.uleb128 0x6
 965 0066 40       		.uleb128 0x40
 966 0067 18       		.uleb128 0x18
 967 0068 9642     		.uleb128 0x2116
 968 006a 19       		.uleb128 0x19
 969 006b 01       		.uleb128 0x1
 970 006c 13       		.uleb128 0x13
 971 006d 00       		.byte	0
 972 006e 00       		.byte	0
 973 006f 08       		.uleb128 0x8
 974 0070 34       		.uleb128 0x34
 975 0071 00       		.byte	0
 976 0072 03       		.uleb128 0x3
 977 0073 0E       		.uleb128 0xe
 978 0074 3A       		.uleb128 0x3a
 979 0075 0B       		.uleb128 0xb
 980 0076 3B       		.uleb128 0x3b
 981 0077 0B       		.uleb128 0xb
 982 0078 49       		.uleb128 0x49
 983 0079 13       		.uleb128 0x13
 984 007a 02       		.uleb128 0x2
 985 007b 18       		.uleb128 0x18
 986 007c 00       		.byte	0
 987 007d 00       		.byte	0
 988 007e 09       		.uleb128 0x9
 989 007f 2E       		.uleb128 0x2e
 990 0080 01       		.byte	0x1
 991 0081 3F       		.uleb128 0x3f
 992 0082 19       		.uleb128 0x19
 993 0083 03       		.uleb128 0x3
 994 0084 0E       		.uleb128 0xe
 995 0085 3A       		.uleb128 0x3a
 996 0086 0B       		.uleb128 0xb
 997 0087 3B       		.uleb128 0x3b
 998 0088 0B       		.uleb128 0xb
 999 0089 27       		.uleb128 0x27
 1000 008a 19       		.uleb128 0x19
 1001 008b 49       		.uleb128 0x49
 1002 008c 13       		.uleb128 0x13
 1003 008d 11       		.uleb128 0x11
 1004 008e 01       		.uleb128 0x1
 1005 008f 12       		.uleb128 0x12
 1006 0090 06       		.uleb128 0x6
 1007 0091 40       		.uleb128 0x40
 1008 0092 18       		.uleb128 0x18
 1009 0093 9742     		.uleb128 0x2117
 1010 0095 19       		.uleb128 0x19
 1011 0096 01       		.uleb128 0x1
 1012 0097 13       		.uleb128 0x13
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 26


 1013 0098 00       		.byte	0
 1014 0099 00       		.byte	0
 1015 009a 0A       		.uleb128 0xa
 1016 009b 05       		.uleb128 0x5
 1017 009c 00       		.byte	0
 1018 009d 03       		.uleb128 0x3
 1019 009e 0E       		.uleb128 0xe
 1020 009f 3A       		.uleb128 0x3a
 1021 00a0 0B       		.uleb128 0xb
 1022 00a1 3B       		.uleb128 0x3b
 1023 00a2 0B       		.uleb128 0xb
 1024 00a3 49       		.uleb128 0x49
 1025 00a4 13       		.uleb128 0x13
 1026 00a5 02       		.uleb128 0x2
 1027 00a6 18       		.uleb128 0x18
 1028 00a7 00       		.byte	0
 1029 00a8 00       		.byte	0
 1030 00a9 0B       		.uleb128 0xb
 1031 00aa 2E       		.uleb128 0x2e
 1032 00ab 01       		.byte	0x1
 1033 00ac 3F       		.uleb128 0x3f
 1034 00ad 19       		.uleb128 0x19
 1035 00ae 03       		.uleb128 0x3
 1036 00af 0E       		.uleb128 0xe
 1037 00b0 3A       		.uleb128 0x3a
 1038 00b1 0B       		.uleb128 0xb
 1039 00b2 3B       		.uleb128 0x3b
 1040 00b3 05       		.uleb128 0x5
 1041 00b4 27       		.uleb128 0x27
 1042 00b5 19       		.uleb128 0x19
 1043 00b6 11       		.uleb128 0x11
 1044 00b7 01       		.uleb128 0x1
 1045 00b8 12       		.uleb128 0x12
 1046 00b9 06       		.uleb128 0x6
 1047 00ba 40       		.uleb128 0x40
 1048 00bb 18       		.uleb128 0x18
 1049 00bc 9742     		.uleb128 0x2117
 1050 00be 19       		.uleb128 0x19
 1051 00bf 01       		.uleb128 0x1
 1052 00c0 13       		.uleb128 0x13
 1053 00c1 00       		.byte	0
 1054 00c2 00       		.byte	0
 1055 00c3 0C       		.uleb128 0xc
 1056 00c4 05       		.uleb128 0x5
 1057 00c5 00       		.byte	0
 1058 00c6 03       		.uleb128 0x3
 1059 00c7 0E       		.uleb128 0xe
 1060 00c8 3A       		.uleb128 0x3a
 1061 00c9 0B       		.uleb128 0xb
 1062 00ca 3B       		.uleb128 0x3b
 1063 00cb 05       		.uleb128 0x5
 1064 00cc 49       		.uleb128 0x49
 1065 00cd 13       		.uleb128 0x13
 1066 00ce 02       		.uleb128 0x2
 1067 00cf 18       		.uleb128 0x18
 1068 00d0 00       		.byte	0
 1069 00d1 00       		.byte	0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 27


 1070 00d2 0D       		.uleb128 0xd
 1071 00d3 2E       		.uleb128 0x2e
 1072 00d4 00       		.byte	0
 1073 00d5 3F       		.uleb128 0x3f
 1074 00d6 19       		.uleb128 0x19
 1075 00d7 03       		.uleb128 0x3
 1076 00d8 0E       		.uleb128 0xe
 1077 00d9 3A       		.uleb128 0x3a
 1078 00da 0B       		.uleb128 0xb
 1079 00db 3B       		.uleb128 0x3b
 1080 00dc 05       		.uleb128 0x5
 1081 00dd 27       		.uleb128 0x27
 1082 00de 19       		.uleb128 0x19
 1083 00df 49       		.uleb128 0x49
 1084 00e0 13       		.uleb128 0x13
 1085 00e1 11       		.uleb128 0x11
 1086 00e2 01       		.uleb128 0x1
 1087 00e3 12       		.uleb128 0x12
 1088 00e4 06       		.uleb128 0x6
 1089 00e5 40       		.uleb128 0x40
 1090 00e6 18       		.uleb128 0x18
 1091 00e7 9742     		.uleb128 0x2117
 1092 00e9 19       		.uleb128 0x19
 1093 00ea 00       		.byte	0
 1094 00eb 00       		.byte	0
 1095 00ec 0E       		.uleb128 0xe
 1096 00ed 2E       		.uleb128 0x2e
 1097 00ee 01       		.byte	0x1
 1098 00ef 3F       		.uleb128 0x3f
 1099 00f0 19       		.uleb128 0x19
 1100 00f1 03       		.uleb128 0x3
 1101 00f2 0E       		.uleb128 0xe
 1102 00f3 3A       		.uleb128 0x3a
 1103 00f4 0B       		.uleb128 0xb
 1104 00f5 3B       		.uleb128 0x3b
 1105 00f6 05       		.uleb128 0x5
 1106 00f7 27       		.uleb128 0x27
 1107 00f8 19       		.uleb128 0x19
 1108 00f9 49       		.uleb128 0x49
 1109 00fa 13       		.uleb128 0x13
 1110 00fb 11       		.uleb128 0x11
 1111 00fc 01       		.uleb128 0x1
 1112 00fd 12       		.uleb128 0x12
 1113 00fe 06       		.uleb128 0x6
 1114 00ff 40       		.uleb128 0x40
 1115 0100 18       		.uleb128 0x18
 1116 0101 9642     		.uleb128 0x2116
 1117 0103 19       		.uleb128 0x19
 1118 0104 01       		.uleb128 0x1
 1119 0105 13       		.uleb128 0x13
 1120 0106 00       		.byte	0
 1121 0107 00       		.byte	0
 1122 0108 0F       		.uleb128 0xf
 1123 0109 34       		.uleb128 0x34
 1124 010a 00       		.byte	0
 1125 010b 03       		.uleb128 0x3
 1126 010c 0E       		.uleb128 0xe
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 28


 1127 010d 3A       		.uleb128 0x3a
 1128 010e 0B       		.uleb128 0xb
 1129 010f 3B       		.uleb128 0x3b
 1130 0110 05       		.uleb128 0x5
 1131 0111 49       		.uleb128 0x49
 1132 0112 13       		.uleb128 0x13
 1133 0113 02       		.uleb128 0x2
 1134 0114 18       		.uleb128 0x18
 1135 0115 00       		.byte	0
 1136 0116 00       		.byte	0
 1137 0117 10       		.uleb128 0x10
 1138 0118 34       		.uleb128 0x34
 1139 0119 00       		.byte	0
 1140 011a 03       		.uleb128 0x3
 1141 011b 0E       		.uleb128 0xe
 1142 011c 3A       		.uleb128 0x3a
 1143 011d 0B       		.uleb128 0xb
 1144 011e 3B       		.uleb128 0x3b
 1145 011f 0B       		.uleb128 0xb
 1146 0120 49       		.uleb128 0x49
 1147 0121 13       		.uleb128 0x13
 1148 0122 3F       		.uleb128 0x3f
 1149 0123 19       		.uleb128 0x19
 1150 0124 02       		.uleb128 0x2
 1151 0125 18       		.uleb128 0x18
 1152 0126 00       		.byte	0
 1153 0127 00       		.byte	0
 1154 0128 00       		.byte	0
 1155              		.section	.debug_aranges,"",%progbits
 1156 0000 74000000 		.4byte	0x74
 1157 0004 0200     		.2byte	0x2
 1158 0006 00000000 		.4byte	.Ldebug_info0
 1159 000a 04       		.byte	0x4
 1160 000b 00       		.byte	0
 1161 000c 0000     		.2byte	0
 1162 000e 0000     		.2byte	0
 1163 0010 00000000 		.4byte	.LFB0
 1164 0014 20000000 		.4byte	.LFE0-.LFB0
 1165 0018 00000000 		.4byte	.LFB1
 1166 001c 20000000 		.4byte	.LFE1-.LFB1
 1167 0020 00000000 		.4byte	.LFB2
 1168 0024 0C000000 		.4byte	.LFE2-.LFB2
 1169 0028 00000000 		.4byte	.LFB3
 1170 002c 20000000 		.4byte	.LFE3-.LFB3
 1171 0030 00000000 		.4byte	.LFB4
 1172 0034 30000000 		.4byte	.LFE4-.LFB4
 1173 0038 00000000 		.4byte	.LFB5
 1174 003c 30000000 		.4byte	.LFE5-.LFB5
 1175 0040 00000000 		.4byte	.LFB6
 1176 0044 58000000 		.4byte	.LFE6-.LFB6
 1177 0048 00000000 		.4byte	.LFB7
 1178 004c 40000000 		.4byte	.LFE7-.LFB7
 1179 0050 00000000 		.4byte	.LFB8
 1180 0054 20000000 		.4byte	.LFE8-.LFB8
 1181 0058 00000000 		.4byte	.LFB9
 1182 005c 1C000000 		.4byte	.LFE9-.LFB9
 1183 0060 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 29


 1184 0064 18000000 		.4byte	.LFE10-.LFB10
 1185 0068 00000000 		.4byte	.LFB11
 1186 006c 34000000 		.4byte	.LFE11-.LFB11
 1187 0070 00000000 		.4byte	0
 1188 0074 00000000 		.4byte	0
 1189              		.section	.debug_ranges,"",%progbits
 1190              	.Ldebug_ranges0:
 1191 0000 00000000 		.4byte	.LFB0
 1192 0004 20000000 		.4byte	.LFE0
 1193 0008 00000000 		.4byte	.LFB1
 1194 000c 20000000 		.4byte	.LFE1
 1195 0010 00000000 		.4byte	.LFB2
 1196 0014 0C000000 		.4byte	.LFE2
 1197 0018 00000000 		.4byte	.LFB3
 1198 001c 20000000 		.4byte	.LFE3
 1199 0020 00000000 		.4byte	.LFB4
 1200 0024 30000000 		.4byte	.LFE4
 1201 0028 00000000 		.4byte	.LFB5
 1202 002c 30000000 		.4byte	.LFE5
 1203 0030 00000000 		.4byte	.LFB6
 1204 0034 58000000 		.4byte	.LFE6
 1205 0038 00000000 		.4byte	.LFB7
 1206 003c 40000000 		.4byte	.LFE7
 1207 0040 00000000 		.4byte	.LFB8
 1208 0044 20000000 		.4byte	.LFE8
 1209 0048 00000000 		.4byte	.LFB9
 1210 004c 1C000000 		.4byte	.LFE9
 1211 0050 00000000 		.4byte	.LFB10
 1212 0054 18000000 		.4byte	.LFE10
 1213 0058 00000000 		.4byte	.LFB11
 1214 005c 34000000 		.4byte	.LFE11
 1215 0060 00000000 		.4byte	0
 1216 0064 00000000 		.4byte	0
 1217              		.section	.debug_line,"",%progbits
 1218              	.Ldebug_line0:
 1219 0000 47010000 		.section	.debug_str,"MS",%progbits,1
 1219      02004E00 
 1219      00000201 
 1219      FB0E0D00 
 1219      01010101 
 1220              	.LASF28:
 1221 0000 496E7075 		.ascii	"Input_SW_ShiftReg_WriteRegValue\000"
 1221      745F5357 
 1221      5F536869 
 1221      66745265 
 1221      675F5772 
 1222              	.LASF22:
 1223 0020 496E7075 		.ascii	"Input_SW_ShiftReg_DisableInt\000"
 1223      745F5357 
 1223      5F536869 
 1223      66745265 
 1223      675F4469 
 1224              	.LASF15:
 1225 003d 72656733 		.ascii	"reg32\000"
 1225      3200
 1226              	.LASF35:
 1227 0043 47656E65 		.ascii	"Generated_Source\\PSoC5\\Input_SW_ShiftReg.c\000"
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 30


 1227      72617465 
 1227      645F536F 
 1227      75726365 
 1227      5C50536F 
 1228              	.LASF30:
 1229 006e 496E7075 		.ascii	"Input_SW_ShiftReg_GetIntStatus\000"
 1229      745F5357 
 1229      5F536869 
 1229      66745265 
 1229      675F4765 
 1230              	.LASF33:
 1231 008d 496E7075 		.ascii	"Input_SW_ShiftReg_ReadRegValue\000"
 1231      745F5357 
 1231      5F536869 
 1231      66745265 
 1231      675F5265 
 1232              	.LASF17:
 1233 00ac 496E7075 		.ascii	"Input_SW_ShiftReg_Start\000"
 1233      745F5357 
 1233      5F536869 
 1233      66745265 
 1233      675F5374 
 1234              	.LASF25:
 1235 00c4 496E7075 		.ascii	"Input_SW_ShiftReg_SetIntMode\000"
 1235      745F5357 
 1235      5F536869 
 1235      66745265 
 1235      675F5365 
 1236              	.LASF11:
 1237 00e1 666C6F61 		.ascii	"float\000"
 1237      7400
 1238              	.LASF37:
 1239 00e7 496E7075 		.ascii	"Input_SW_ShiftReg_initVar\000"
 1239      745F5357 
 1239      5F536869 
 1239      66745265 
 1239      675F696E 
 1240              	.LASF1:
 1241 0101 756E7369 		.ascii	"unsigned char\000"
 1241      676E6564 
 1241      20636861 
 1241      7200
 1242              	.LASF14:
 1243 010f 72656738 		.ascii	"reg8\000"
 1243      00
 1244              	.LASF23:
 1245 0114 696E7465 		.ascii	"interruptState\000"
 1245      72727570 
 1245      74537461 
 1245      746500
 1246              	.LASF5:
 1247 0123 6C6F6E67 		.ascii	"long unsigned int\000"
 1247      20756E73 
 1247      69676E65 
 1247      6420696E 
 1247      7400
 1248              	.LASF18:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 31


 1249 0135 496E7075 		.ascii	"Input_SW_ShiftReg_Enable\000"
 1249      745F5357 
 1249      5F536869 
 1249      66745265 
 1249      675F456E 
 1250              	.LASF9:
 1251 014e 75696E74 		.ascii	"uint8\000"
 1251      3800
 1252              	.LASF19:
 1253 0154 496E7075 		.ascii	"Input_SW_ShiftReg_Init\000"
 1253      745F5357 
 1253      5F536869 
 1253      66745265 
 1253      675F496E 
 1254              	.LASF26:
 1255 016b 6669666F 		.ascii	"fifoId\000"
 1255      496400
 1256              	.LASF34:
 1257 0172 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1257      4320342E 
 1257      392E3320 
 1257      32303135 
 1257      30333033 
 1258 01a5 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1258      20726576 
 1258      6973696F 
 1258      6E203232 
 1258      31323230 
 1259 01d8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1259      66756E63 
 1259      74696F6E 
 1259      2D736563 
 1259      74696F6E 
 1260              	.LASF12:
 1261 0200 646F7562 		.ascii	"double\000"
 1261      6C6500
 1262              	.LASF36:
 1263 0207 433A5C55 		.ascii	"C:\\Users\\214016586\\Documents\\GitHub\\Crumar-Acc"
 1263      73657273 
 1263      5C323134 
 1263      30313635 
 1263      38365C44 
 1264 0235 6F646572 		.ascii	"oder-Midi\\Accoder_MIDI.cydsn\000"
 1264      2D4D6964 
 1264      695C4163 
 1264      636F6465 
 1264      725F4D49 
 1265              	.LASF27:
 1266 0252 696E7465 		.ascii	"interruptSource\000"
 1266      72727570 
 1266      74536F75 
 1266      72636500 
 1267              	.LASF29:
 1268 0262 73686966 		.ascii	"shiftData\000"
 1268      74446174 
 1268      6100
 1269              	.LASF10:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 32


 1270 026c 75696E74 		.ascii	"uint32\000"
 1270      333200
 1271              	.LASF8:
 1272 0273 756E7369 		.ascii	"unsigned int\000"
 1272      676E6564 
 1272      20696E74 
 1272      00
 1273              	.LASF7:
 1274 0280 6C6F6E67 		.ascii	"long long unsigned int\000"
 1274      206C6F6E 
 1274      6720756E 
 1274      7369676E 
 1274      65642069 
 1275              	.LASF24:
 1276 0297 72657375 		.ascii	"result\000"
 1276      6C7400
 1277              	.LASF16:
 1278 029e 73697A65 		.ascii	"sizetype\000"
 1278      74797065 
 1278      00
 1279              	.LASF6:
 1280 02a7 6C6F6E67 		.ascii	"long long int\000"
 1280      206C6F6E 
 1280      6720696E 
 1280      7400
 1281              	.LASF20:
 1282 02b5 496E7075 		.ascii	"Input_SW_ShiftReg_Stop\000"
 1282      745F5357 
 1282      5F536869 
 1282      66745265 
 1282      675F5374 
 1283              	.LASF13:
 1284 02cc 63686172 		.ascii	"char\000"
 1284      00
 1285              	.LASF2:
 1286 02d1 73686F72 		.ascii	"short int\000"
 1286      7420696E 
 1286      7400
 1287              	.LASF21:
 1288 02db 496E7075 		.ascii	"Input_SW_ShiftReg_EnableInt\000"
 1288      745F5357 
 1288      5F536869 
 1288      66745265 
 1288      675F456E 
 1289              	.LASF32:
 1290 02f7 496E7075 		.ascii	"Input_SW_ShiftReg_GetFIFOStatus\000"
 1290      745F5357 
 1290      5F536869 
 1290      66745265 
 1290      675F4765 
 1291              	.LASF4:
 1292 0317 6C6F6E67 		.ascii	"long int\000"
 1292      20696E74 
 1292      00
 1293              	.LASF0:
 1294 0320 7369676E 		.ascii	"signed char\000"
 1294      65642063 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\ccguzNLp.s 			page 33


 1294      68617200 
 1295              	.LASF3:
 1296 032c 73686F72 		.ascii	"short unsigned int\000"
 1296      7420756E 
 1296      7369676E 
 1296      65642069 
 1296      6E7400
 1297              	.LASF31:
 1298 033f 496E7075 		.ascii	"Input_SW_ShiftReg_ReadData\000"
 1298      745F5357 
 1298      5F536869 
 1298      66745265 
 1298      675F5265 
 1299              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
