C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) 
                    -PR(.\DP8051\DP8051_Keil_951\Debug/cyfitter_cfg.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: cyfitter_cfg.c
   3          * 
   4          * PSoC Creator  4.0 Update 1
   5          *
   6          * Description:
   7          * This file contains device initialization code.
   8          * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
   9          * This file is automatically generated by PSoC Creator.
  10          *
  11          ********************************************************************************
  12          * Copyright (c) 2007-2016 Cypress Semiconductor.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions, 
  14          * disclaimers, and limitations in the end user license agreement accompanying 
  15          * the software package with which this file was provided.
  16          ********************************************************************************/
  17          
  18          #include <string.h>
  19          #include "cytypes.h"
  20          #include "cydevice_trm.h"
  21          #include "cyfitter.h"
  22          #include "CyLib.h"
  23          #include "cyfitter_cfg.h"
  24          #include "cyapicallbacks.h"
  25          
  26          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  27          
  28          
  29          #if defined(__C51__) || defined(__CX51__)
  30                  #define CYPACKED
  31                  #define CYPACKED_ATTR
  32                  #define CYALIGNED
  33                  
  34              #define CY_CFG_UNUSED
  35                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  36          
  37          
  38          
  39                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  40                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  41                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  42          #else
                      #error Unsupported toolchain
              #endif
  45          
  46          
  47          
  48          
  49          /* Clock startup error codes                                                   */
  50          #define CYCLOCKSTART_NO_ERROR    0u
  51          #define CYCLOCKSTART_XTAL_ERROR  1u
  52          #define CYCLOCKSTART_32KHZ_ERROR 2u
  53          #define CYCLOCKSTART_PLL_ERROR   3u
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 2   

  54          
  55          
  56          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  57          /*******************************************************************************
  58          * Function Name: CyClockStartupError
  59          ********************************************************************************
  60          * Summary:
  61          *  If an error is encountered during clock configuration (crystal startup error,
  62          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  63          *  the customer, this function will stop in an infinite loop.
  64          *
  65          * Parameters:
  66          *   void
  67          *
  68          * Return:
  69          *   void
  70          *
  71          *******************************************************************************/
  72          CY_CFG_UNUSED
  73          static void CyClockStartupError(uint8 errorCode);
  74          CY_CFG_UNUSED
  75          static void CyClockStartupError(uint8 errorCode)
  76          {
  77   1          /* To remove the compiler warning if errorCode not used.                */
  78   1          errorCode = errorCode;
  79   1      
  80   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  81   1          /* we will end up here to allow the customer to implement something to  */
  82   1          /* deal with the clock condition.                                       */
  83   1      
  84   1      #ifdef CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK
                      CY_CFG_Clock_Startup_ErrorCallback();
              #else
  87   1              /*  If not using CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK, place your clock startup code here. */
  88   1          /* `#START CyClockStartupError` */
  89   1      
  90   1      
  91   1      
  92   1          /* `#END` */
  93   1      
  94   1          /* If nothing else, stop here since the clocks have not started         */
  95   1          /* correctly.                                                           */
  96   1          while(1) {}
  97   1      #endif /* CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK */ 
  98   1      }
  99          #endif
 100          
 101          #define cfg_byte_table ((const void CYFAR *)0x080000u)
 102          /* UDB_0_0_1_CONFIG Address: CYDEV_UCFG_B1_P5_U1_BASE Size (bytes): 128 */
 103          #define BS_UDB_0_0_1_CONFIG_VAL ((const uint8 CYFAR *)0x00080564u)
 104          
 105          /* IOPINS0_0 Address: CYREG_PRT0_DR Size (bytes): 10 */
 106          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)0x000805E4u)
 107          
 108          /* IOPINS0_8 Address: CYREG_PRT15_DR Size (bytes): 10 */
 109          #define BS_IOPINS0_8_VAL ((const uint8 CYFAR *)0x000805F0u)
 110          
 111          /* IOPINS0_1 Address: CYREG_PRT1_DM0 Size (bytes): 8 */
 112          #define BS_IOPINS0_1_VAL ((const uint8 CYFAR *)0x000805FCu)
 113          
 114          /* IOPINS0_5 Address: CYREG_PRT5_DR Size (bytes): 10 */
 115          #define BS_IOPINS0_5_VAL ((const uint8 CYFAR *)0x00080604u)
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 3   

 116          
 117          
 118          /*******************************************************************************
 119          * Function Name: ClockSetup
 120          ********************************************************************************
 121          *
 122          * Summary:
 123          *  Performs the initialization of all of the clocks in the device based on the
 124          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 125          *  clocks and setting the necessary dividers to produce the desired frequency. 
 126          *
 127          * Parameters:
 128          *  void
 129          *
 130          * Return:
 131          *  void
 132          *
 133          *******************************************************************************/
 134          static void ClockSetup(void);
 135          static void ClockSetup(void)
 136          {
 137   1              uint32 timeout;
 138   1              uint8 pllLock;
 139   1      
 140   1      
 141   1              /* Configure Digital Clocks based on settings from Clock DWR */
 142   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x005Fu);
 143   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x19u);
 144   1      
 145   1              /* Configure ILO based on settings from Clock DWR */
 146   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x06u);
 147   1      
 148   1              /* Configure IMO based on settings from Clock DWR */
 149   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_USB)));
 150   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x52u);
 151   1      
 152   1              /* Configure PLL based on settings from Clock DWR */
 153   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0919u);
 154   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 155   1              /* Wait up to 250us for the PLL to lock */
 156   1              pllLock = 0u;
 157   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 158   1              { 
 159   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 160   2                      CyDelayCycles(10u * 12u); /* Delay 10us based on 12MHz clock */
 161   2              }
 162   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 163   1              if (timeout == 0u)
 164   1              {
 165   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 166   2              }
 167   1      
 168   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 169   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 170   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 171   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 172   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 173   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 174   1      
 175   1              /* Configure USB Clock based on settings from Clock DWR */
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 4   

 176   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_UCFG), 0x00u);
 177   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 178   1      
 179   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x01u
             -)));
 180   1      }
 181          
 182          
 183          /* Analog API Functions */
 184          
 185          
 186          /*******************************************************************************
 187          * Function Name: AnalogSetDefault
 188          ********************************************************************************
 189          *
 190          * Summary:
 191          *  Sets up the analog portions of the chip to default values based on chip
 192          *  configuration options from the project.
 193          *
 194          * Parameters:
 195          *  void
 196          *
 197          * Return:
 198          *  void
 199          *
 200          *******************************************************************************/
 201          static void AnalogSetDefault(void);
 202          static void AnalogSetDefault(void)
 203          {
 204   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 205   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 206   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 207   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 208   1      }
 209          
 210          
 211          /*******************************************************************************
 212          * Function Name: SetAnalogRoutingPumps
 213          ********************************************************************************
 214          *
 215          * Summary:
 216          * Enables or disables the analog pumps feeding analog routing switches.
 217          * Intended to be called at startup, based on the Vdda system configuration;
 218          * may be called during operation when the user informs us that the Vdda voltage
 219          * crossed the pump threshold.
 220          *
 221          * Parameters:
 222          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 223          *
 224          * Return:
 225          *  void
 226          *
 227          *******************************************************************************/
 228          void SetAnalogRoutingPumps(uint8 enabled)
 229          {
 230   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 231   1              if (enabled != 0u)
 232   1              {
 233   2                      regValue |= 0x00u;
 234   2              }
 235   1              else
 236   1              {
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 5   

 237   2                      regValue &= (uint8)~0x00u;
 238   2              }
 239   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 240   1      }
 241          
 242          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 243          
 244          
 245          /*******************************************************************************
 246          * Function Name: cyfitter_cfg
 247          ********************************************************************************
 248          * Summary:
 249          *  This function is called by the start-up code for the selected device. It
 250          *  performs all of the necessary device configuration based on the design
 251          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 252          *  as Clocks and Pins as well as any component configuration that is necessary.
 253          *
 254          * Parameters:  
 255          *   void
 256          *
 257          * Return:
 258          *   void
 259          *
 260          *******************************************************************************/
 261          
 262          void cyfitter_cfg(void)
 263          {
 264   1      
 265   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 266   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 267   1              /* Setup clocks based on selections from Clock DWR */
 268   1              ClockSetup();
 269   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 270   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 271   1      
 272   1              {
 273   2      
 274   2                      CYPACKED typedef struct {
 275   2                              void CYFAR *address;
 276   2                              uint16 size;
 277   2                      } CYPACKED_ATTR cfg_memset_t;
 278   2      
 279   2      
 280   2                      CYPACKED typedef struct {
 281   2                              void CYFAR *dest;
 282   2                              const void CYFAR *src;
 283   2                              uint16 size;
 284   2                      } CYPACKED_ATTR cfg_memcpy_t;
 285   2      
 286   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 287   2                              /* address, size */
 288   2                              {(void CYFAR *)(CYREG_PRT2_DR), 48u},
 289   2                              {(void CYFAR *)(CYREG_PRT6_DR), 16u},
 290   2                              {(void CYFAR *)(CYREG_PRT12_DR), 16u},
 291   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 292   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 1664u},
 293   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P5_ROUTE_BASE), 256u},
 294   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 295   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 296   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 297   2                      };
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 6   

 298   2      
 299   2                      static const cfg_memcpy_t CYCODE cfg_memcpy_list [] = {
 300   2                              /* dest, src, size */
 301   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P5_U1_BASE), BS_UDB_0_0_1_CONFIG_VAL, 128u},
 302   2                      };
 303   2      
 304   2                      uint8 CYDATA i;
 305   2      
 306   2                      /* Zero out critical memory blocks before beginning configuration */
 307   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 308   2                      {
 309   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 310   3                              CYMEMZERO(ms->address, ms->size);
 311   3                      }
 312   2      
 313   2                      /* Copy device configuration data into registers */
 314   2                      for (i = 0u; i < (sizeof(cfg_memcpy_list)/sizeof(cfg_memcpy_list[0])); i++)
 315   2                      {
 316   3                              const cfg_memcpy_t CYCODE * CYDATA mc = &cfg_memcpy_list[i];
 317   3                              void * CYDATA destPtr = mc->dest;
 318   3                              const void * CYDATA srcPtr = mc->src;
 319   3                              uint16 CYDATA numBytes = mc->size;
 320   3                              CYCONFIGCPY(destPtr, srcPtr, numBytes);
 321   3                      }
 322   2      
 323   2                      cfg_write_bytes(cfg_byte_table);
 324   2      
 325   2                      /* Enable digital routing */
 326   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 327   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 328   2      
 329   2                      /* Enable UDB array */
 330   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 331   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 332   2              }
 333   1      
 334   1      
 335   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 336   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DR), (const void CYFAR *)(BS_IOPINS0_0_VAL), 10u);
 337   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT15_DR), (const void CYFAR *)(BS_IOPINS0_8_VAL), 10u);
 338   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT1_DM0), (const void CYFAR *)(BS_IOPINS0_1_VAL), 8u);
 339   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT5_DR), (const void CYFAR *)(BS_IOPINS0_5_VAL), 10u);
 340   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 341   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 342   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 343   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 344   1              {
 345   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 346   2              }
 347   1      
 348   1              CY_SET_XTND_REG8((void CYFAR *)(CYREG_BCTL0_UDB_TEST_3), 0x40u);
 349   1              CY_SET_XTND_REG8((void CYFAR *)(CYREG_BCTL1_UDB_TEST_3), 0x40u);
 350   1      
 351   1              /* Perform basic analog initialization to defaults */
 352   1              AnalogSetDefault();
 353   1      
 354   1              /* Configure alternate active mode */
 355   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 7   

 356   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 357   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 75
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 78
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 96
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 142
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7D5F              MOV     R5,#05FH
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 143
000D 904082            MOV     DPTR,#04082H
0010 7419              MOV     A,#019H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 146
0013 904300            MOV     DPTR,#04300H
0016 7406              MOV     A,#06H
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 149
0019 7B0C              MOV     R3,#0CH
001B 7A01              MOV     R2,#01H
001D 790F              MOV     R1,#0FH
001F 120000      E     LCALL   _cyread8
0022 9046A1            MOV     DPTR,#046A1H
0025 EF                MOV     A,R7
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 150
0027 904200            MOV     DPTR,#04200H
002A 7452              MOV     A,#052H
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 153
002D 7B00              MOV     R3,#00H
002F 7A42              MOV     R2,#042H
0031 7922              MOV     R1,#022H
0033 7D19              MOV     R5,#019H
0035 7C09              MOV     R4,#09H
0037 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 154
003A 7B00              MOV     R3,#00H
003C 7A42              MOV     R2,#042H
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 9   

003E 7920              MOV     R1,#020H
0040 7D51              MOV     R5,#051H
0042 7C12              MOV     R4,#012H
0044 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 156
0047 900000      R     MOV     DPTR,#pllLock
004A E4                CLR     A
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 157
004C 7F19              MOV     R7,#019H
004E 7E00              MOV     R6,#00H
0050 7D00              MOV     R5,#00H
0052 7C00              MOV     R4,#00H
0054 900000      R     MOV     DPTR,#timeout
0057 120000      E     LCALL   ?C?LSTXDATA
005A         ?C0004:
005A 900000      R     MOV     DPTR,#timeout
005D 120000      E     LCALL   ?C?LLDXDATA
0060 D3                SETB    C
0061 EF                MOV     A,R7
0062 9400              SUBB    A,#00H
0064 EE                MOV     A,R6
0065 9400              SUBB    A,#00H
0067 404E              JC      ?C0005
0069 900000      R     MOV     DPTR,#pllLock
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E EF                MOV     A,R7
006F 6403              XRL     A,#03H
0071 6044              JZ      ?C0005
                                           ; SOURCE LINE # 158
                                           ; SOURCE LINE # 159
0073 904225            MOV     DPTR,#04225H
0076 E0                MOVX    A,@DPTR
0077 FF                MOV     R7,A
0078 EF                MOV     A,R7
0079 5401              ANL     A,#01H
007B FF                MOV     R7,A
007C 7E00              MOV     R6,#00H
007E 900000      R     MOV     DPTR,#pllLock
0081 E0                MOVX    A,@DPTR
0082 FE                MOV     R6,A
0083 EE                MOV     A,R6
0084 25E0              ADD     A,ACC
0086 FE                MOV     R6,A
0087 EE                MOV     A,R6
0088 4F                ORL     A,R7
0089 FF                MOV     R7,A
008A EF                MOV     A,R7
008B 5403              ANL     A,#03H
008D FF                MOV     R7,A
008E 900000      R     MOV     DPTR,#pllLock
0091 EF                MOV     A,R7
0092 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 160
0093 7F78              MOV     R7,#078H
0095 7E00              MOV     R6,#00H
0097 7D00              MOV     R5,#00H
0099 7C00              MOV     R4,#00H
009B 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 161
009E 900000      R     MOV     DPTR,#timeout
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 10  

00A1 120000      E     LCALL   ?C?LLDXDATA
00A4 7BFF              MOV     R3,#0FFH
00A6 7AFF              MOV     R2,#0FFH
00A8 79FF              MOV     R1,#0FFH
00AA 78FF              MOV     R0,#0FFH
00AC 120000      E     LCALL   ?C?LADD
00AF 900000      R     MOV     DPTR,#timeout
00B2 120000      E     LCALL   ?C?LSTXDATA
00B5 80A3              SJMP    ?C0004
00B7         ?C0005:
                                           ; SOURCE LINE # 163
00B7 900000      R     MOV     DPTR,#timeout
00BA 120000      E     LCALL   ?C?LLDXDATA
00BD EF                MOV     A,R7
00BE 4E                ORL     A,R6
00BF 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 164
                                           ; SOURCE LINE # 165
00C1 7F03              MOV     R7,#03H
00C3 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 166
00C6         ?C0007:
                                           ; SOURCE LINE # 169
00C6 7B00              MOV     R3,#00H
00C8 7A40              MOV     R2,#040H
00CA 7904              MOV     R1,#04H
00CC 7D00              MOV     R5,#00H
00CE 7C01              MOV     R4,#01H
00D0 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 170
00D3 904004            MOV     DPTR,#04004H
00D6 7407              MOV     A,#07H
00D8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 171
00D9 904006            MOV     DPTR,#04006H
00DC E4                CLR     A
00DD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 172
00DE 904008            MOV     DPTR,#04008H
00E1 7448              MOV     A,#048H
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 173
00E4 904004            MOV     DPTR,#04004H
00E7 E4                CLR     A
00E8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 176
00E9 904009            MOV     DPTR,#04009H
00EC E4                CLR     A
00ED F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 177
00EE 904001            MOV     DPTR,#04001H
00F1 7402              MOV     A,#02H
00F3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 179
00F4 9043A2            MOV     DPTR,#043A2H
00F7 E0                MOVX    A,@DPTR
00F8 FF                MOV     R7,A
00F9 EF                MOV     A,R7
00FA 4401              ORL     A,#01H
00FC FF                MOV     R7,A
00FD 9043A2            MOV     DPTR,#043A2H
0100 EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 11  

0101 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 180
0102 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 202
                                           ; SOURCE LINE # 203
                                           ; SOURCE LINE # 204
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 205
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 206
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 207
002F 905876            MOV     DPTR,#05876H
0032 7444              MOV     A,#044H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 208
0035 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 228
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 229
                                           ; SOURCE LINE # 230
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 231
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 12  

000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 233
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4400              ORL     A,#00H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 234
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 236
                                           ; SOURCE LINE # 237
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54FF              ANL     A,#0FFH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 238
0035         ?C0011:
                                           ; SOURCE LINE # 239
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 240
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 262
                                           ; SOURCE LINE # 263
                                           ; SOURCE LINE # 266
0000 904800            MOV     DPTR,#04800H
0003 74F1              MOV     A,#0F1H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 268
0006 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 270
0009 7B00              MOV     R3,#00H
000B 7A46              MOV     R2,#046H
000D 79E8              MOV     R1,#0E8H
000F 120000      E     LCALL   _cyread8
0012 EF                MOV     A,R7
0013 4405              ORL     A,#05H
0015 FD                MOV     R5,A
0016 7B00              MOV     R3,#00H
0018 7A46              MOV     R2,#046H
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 13  

001A 79E8              MOV     R1,#0E8H
001C 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 272
                                           ; SOURCE LINE # 307
001F 750000      R     MOV     i,#00H
0022         ?C0013:
0022 E500        R     MOV     A,i
0024 C3                CLR     C
0025 9409              SUBB    A,#09H
0027 503A              JNC     ?C0014
                                           ; SOURCE LINE # 308
                                           ; SOURCE LINE # 309
0029 AF00        R     MOV     R7,i
002B EF                MOV     A,R7
002C 75F005            MOV     B,#05H
002F A4                MUL     AB
0030 2400        R     ADD     A,#LOW cfg_memset_list
0032 F582              MOV     DPL,A
0034 E4                CLR     A
0035 3400        R     ADDC    A,#HIGH cfg_memset_list
0037 F583              MOV     DPH,A
0039 AF82              MOV     R7,DPL
003B AE83              MOV     R6,DPH
003D 8E00        R     MOV     ms,R6
003F 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 310
0041 AE00        R     MOV     R6,ms
0043 AF00        R     MOV     R7,ms+01H
0045 8F82              MOV     DPL,R7
0047 8E83              MOV     DPH,R6
0049 120000      E     LCALL   ?C?PLDCODE
004C AE00        R     MOV     R6,ms
004E AF00        R     MOV     R7,ms+01H
0050 8F82              MOV     DPL,R7
0052 8E83              MOV     DPH,R6
0054 7403              MOV     A,#03H
0056 93                MOVC    A,@A+DPTR
0057 FC                MOV     R4,A
0058 7404              MOV     A,#04H
005A 93                MOVC    A,@A+DPTR
005B FD                MOV     R5,A
005C 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 311
005F 0500        R     INC     i
0061 80BF              SJMP    ?C0013
0063         ?C0014:
                                           ; SOURCE LINE # 314
0063 750000      R     MOV     i,#00H
0066         ?C0016:
0066 E500        R     MOV     A,i
0068 C3                CLR     C
0069 9401              SUBB    A,#01H
006B 5078              JNC     ?C0017
                                           ; SOURCE LINE # 315
                                           ; SOURCE LINE # 316
006D AF00        R     MOV     R7,i
006F EF                MOV     A,R7
0070 75F008            MOV     B,#08H
0073 A4                MUL     AB
0074 2400        R     ADD     A,#LOW cfg_memcpy_list
0076 F582              MOV     DPL,A
0078 E4                CLR     A
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 14  

0079 3400        R     ADDC    A,#HIGH cfg_memcpy_list
007B F583              MOV     DPH,A
007D AF82              MOV     R7,DPL
007F AE83              MOV     R6,DPH
0081 8E00        R     MOV     mc,R6
0083 8F00        R     MOV     mc+01H,R7
                                           ; SOURCE LINE # 317
0085 AE00        R     MOV     R6,mc
0087 AF00        R     MOV     R7,mc+01H
0089 8F82              MOV     DPL,R7
008B 8E83              MOV     DPH,R6
008D 120000      E     LCALL   ?C?PLDCODE
0090 8B00        R     MOV     destPtr,R3
0092 8A00        R     MOV     destPtr+01H,R2
0094 8900        R     MOV     destPtr+02H,R1
                                           ; SOURCE LINE # 318
0096 AE00        R     MOV     R6,mc
0098 AF00        R     MOV     R7,mc+01H
009A 8F82              MOV     DPL,R7
009C 8E83              MOV     DPH,R6
009E A3                INC     DPTR
009F A3                INC     DPTR
00A0 A3                INC     DPTR
00A1 120000      E     LCALL   ?C?PLDCODE
00A4 8B00        R     MOV     srcPtr,R3
00A6 8A00        R     MOV     srcPtr+01H,R2
00A8 8900        R     MOV     srcPtr+02H,R1
                                           ; SOURCE LINE # 319
00AA AE00        R     MOV     R6,mc
00AC AF00        R     MOV     R7,mc+01H
00AE 8F82              MOV     DPL,R7
00B0 8E83              MOV     DPH,R6
00B2 7406              MOV     A,#06H
00B4 93                MOVC    A,@A+DPTR
00B5 F500        R     MOV     numBytes,A
00B7 7407              MOV     A,#07H
00B9 93                MOVC    A,@A+DPTR
00BA F500        R     MOV     numBytes+01H,A
                                           ; SOURCE LINE # 320
00BC AB00        R     MOV     R3,srcPtr
00BE AA00        R     MOV     R2,srcPtr+01H
00C0 A900        R     MOV     R1,srcPtr+02H
00C2 C003              PUSH    AR3
00C4 C002              PUSH    AR2
00C6 C001              PUSH    AR1
00C8 AB00        R     MOV     R3,destPtr
00CA AA00        R     MOV     R2,destPtr+01H
00CC A900        R     MOV     R1,destPtr+02H
00CE 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00D1 120000      E     LCALL   ?C?PSTXDATA
00D4 D001              POP     AR1
00D6 D002              POP     AR2
00D8 D003              POP     AR3
00DA AF00        R     MOV     R7,numBytes+01H
00DC AE00        R     MOV     R6,numBytes
00DE 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 321
00E1 0500        R     INC     i
00E3 8081              SJMP    ?C0016
00E5         ?C0017:
                                           ; SOURCE LINE # 323
00E5 7B08              MOV     R3,#08H
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 15  

00E7 7A00              MOV     R2,#00H
00E9 7900              MOV     R1,#00H
00EB 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 326
00EE 7B01              MOV     R3,#01H
00F0 7A50              MOV     R2,#050H
00F2 7903              MOV     R1,#03H
00F4 120000      E     LCALL   _cyread8
00F7 EF                MOV     A,R7
00F8 4402              ORL     A,#02H
00FA FD                MOV     R5,A
00FB 7B01              MOV     R3,#01H
00FD 7A50              MOV     R2,#050H
00FF 7903              MOV     R1,#03H
0101 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 327
0104 7B01              MOV     R3,#01H
0106 7A50              MOV     R2,#050H
0108 7913              MOV     R1,#013H
010A 120000      E     LCALL   _cyread8
010D EF                MOV     A,R7
010E 4402              ORL     A,#02H
0110 FD                MOV     R5,A
0111 7B01              MOV     R3,#01H
0113 7A50              MOV     R2,#050H
0115 7913              MOV     R1,#013H
0117 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 330
011A 9043A0            MOV     DPTR,#043A0H
011D E0                MOVX    A,@DPTR
011E FF                MOV     R7,A
011F EF                MOV     A,R7
0120 4440              ORL     A,#040H
0122 FF                MOV     R7,A
0123 9043A0            MOV     DPTR,#043A0H
0126 EF                MOV     A,R7
0127 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 331
0128 9043C2            MOV     DPTR,#043C2H
012B E0                MOVX    A,@DPTR
012C FF                MOV     R7,A
012D EF                MOV     A,R7
012E 4410              ORL     A,#010H
0130 FF                MOV     R7,A
0131 9043C2            MOV     DPTR,#043C2H
0134 EF                MOV     A,R7
0135 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 332
                                           ; SOURCE LINE # 336
0136 7B08              MOV     R3,#08H
0138 7A05              MOV     R2,#05H
013A 79E4              MOV     R1,#0E4H
013C C003              PUSH    AR3
013E C002              PUSH    AR2
0140 C001              PUSH    AR1
0142 7B00              MOV     R3,#00H
0144 7A51              MOV     R2,#051H
0146 7900              MOV     R1,#00H
0148 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
014B 120000      E     LCALL   ?C?PSTXDATA
014E D001              POP     AR1
0150 D002              POP     AR2
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 16  

0152 D003              POP     AR3
0154 7F0A              MOV     R7,#0AH
0156 7E00              MOV     R6,#00H
0158 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 337
015B 7B08              MOV     R3,#08H
015D 7A05              MOV     R2,#05H
015F 79F0              MOV     R1,#0F0H
0161 C003              PUSH    AR3
0163 C002              PUSH    AR2
0165 C001              PUSH    AR1
0167 7B00              MOV     R3,#00H
0169 7A51              MOV     R2,#051H
016B 79F0              MOV     R1,#0F0H
016D 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0170 120000      E     LCALL   ?C?PSTXDATA
0173 D001              POP     AR1
0175 D002              POP     AR2
0177 D003              POP     AR3
0179 7F0A              MOV     R7,#0AH
017B 7E00              MOV     R6,#00H
017D 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 338
0180 7B08              MOV     R3,#08H
0182 7A05              MOV     R2,#05H
0184 79FC              MOV     R1,#0FCH
0186 C003              PUSH    AR3
0188 C002              PUSH    AR2
018A C001              PUSH    AR1
018C 7B00              MOV     R3,#00H
018E 7A51              MOV     R2,#051H
0190 7912              MOV     R1,#012H
0192 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0195 120000      E     LCALL   ?C?PSTXDATA
0198 D001              POP     AR1
019A D002              POP     AR2
019C D003              POP     AR3
019E 7F08              MOV     R7,#08H
01A0 7E00              MOV     R6,#00H
01A2 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 339
01A5 7B08              MOV     R3,#08H
01A7 7A06              MOV     R2,#06H
01A9 7904              MOV     R1,#04H
01AB C003              PUSH    AR3
01AD C002              PUSH    AR2
01AF C001              PUSH    AR1
01B1 7B00              MOV     R3,#00H
01B3 7A51              MOV     R2,#051H
01B5 7950              MOV     R1,#050H
01B7 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01BA 120000      E     LCALL   ?C?PSTXDATA
01BD D001              POP     AR1
01BF D002              POP     AR2
01C1 D003              POP     AR3
01C3 7F0A              MOV     R7,#0AH
01C5 7E00              MOV     R6,#00H
01C7 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 340
01CA 9044F4            MOV     DPTR,#044F4H
01CD 7401              MOV     A,#01H
01CF F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 17  

                                           ; SOURCE LINE # 342
01D0 904322            MOV     DPTR,#04322H
01D3 E0                MOVX    A,@DPTR
01D4 FF                MOV     R7,A
01D5 EF                MOV     A,R7
01D6 4408              ORL     A,#08H
01D8 FF                MOV     R7,A
01D9 904322            MOV     DPTR,#04322H
01DC EF                MOV     A,R7
01DD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 343
01DE 9046EC            MOV     DPTR,#046ECH
01E1 E0                MOVX    A,@DPTR
01E2 FF                MOV     R7,A
01E3 EF                MOV     A,R7
01E4 C3                CLR     C
01E5 9405              SUBB    A,#05H
01E7 5006              JNC     ?C0019
                                           ; SOURCE LINE # 344
                                           ; SOURCE LINE # 345
01E9 904689            MOV     DPTR,#04689H
01EC 743A              MOV     A,#03AH
01EE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 346
01EF         ?C0019:
                                           ; SOURCE LINE # 348
01EF 7B01              MOV     R3,#01H
01F1 7A50              MOV     R2,#050H
01F3 7907              MOV     R1,#07H
01F5 7D40              MOV     R5,#040H
01F7 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 349
01FA 7B01              MOV     R3,#01H
01FC 7A50              MOV     R2,#050H
01FE 7917              MOV     R1,#017H
0200 7D40              MOV     R5,#040H
0202 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 352
0205 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 355
0208 7B00              MOV     R3,#00H
020A 7A43              MOV     R2,#043H
020C 79A0              MOV     R1,#0A0H
020E C003              PUSH    AR3
0210 C002              PUSH    AR2
0212 C001              PUSH    AR1
0214 7B00              MOV     R3,#00H
0216 7A43              MOV     R2,#043H
0218 79B0              MOV     R1,#0B0H
021A 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
021D 120000      E     LCALL   ?C?PSTXDATA
0220 D001              POP     AR1
0222 D002              POP     AR2
0224 D003              POP     AR3
0226 7F0E              MOV     R7,#0EH
0228 7E00              MOV     R6,#00H
022A 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 356
022D 9043B0            MOV     DPTR,#043B0H
0230 E0                MOVX    A,@DPTR
0231 FF                MOV     R7,A
0232 EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          07/22/2017 09:26:13 PAGE 18  

0233 54FD              ANL     A,#0FDH
0235 FF                MOV     R7,A
0236 EF                MOV     A,R7
0237 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 357
0238 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    964    ----
   CONSTANT SIZE    =     53    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
