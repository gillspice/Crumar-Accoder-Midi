C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USB_MIDI
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\USB_midi.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\USB_midi.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(.
                    -\DP8051\DP8051_Keil_951\Debug/USB_midi.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\USB_midi.obj)

line level    source

   1          /***************************************************************************//**
   2          * \file USB_midi.c
   3          * \version 3.10
   4          *
   5          * \brief
   6          *  MIDI Streaming request handler.
   7          *  This file contains routines for sending and receiving MIDI
   8          *  messages, and handles running status in both directions.
   9          *
  10          * Related Document:
  11          *  Universal Serial Bus Device Class Definition for MIDI Devices Release 1.0
  12          *  MIDI 1.0 Detailed Specification Document Version 4.2
  13          *
  14          ********************************************************************************
  15          * \copyright
  16          * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  17          * You may use this file only in accordance with the license, terms, conditions,
  18          * disclaimers, and limitations in the end user license agreement accompanying
  19          * the software package with which this file was provided.
  20          *******************************************************************************/
  21          
  22          #include "USB_midi.h"
  23          #include "USB_pvt.h"
  24          #include "cyapicallbacks.h"
  25          
  26          #if defined(USB_ENABLE_MIDI_STREAMING)
  27          
  28          /***************************************
  29          *    MIDI Constants
  30          ***************************************/
  31          
  32          #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
  33              /* The Size of the MIDI messages (MIDI Table 4-1) */
  34              static const uint8 CYCODE USB_MIDI_SIZE[] = {
  35              /*  Miscellaneous function codes(Reserved)  */ 0x03u,
  36              /*  Cable events (Reserved)                 */ 0x03u,
  37              /*  Two-byte System Common messages         */ 0x02u,
  38              /*  Three-byte System Common messages       */ 0x03u,
  39              /*  SysEx starts or continues               */ 0x03u,
  40              /*  Single-byte System Common Message or
  41                  SysEx ends with following single byte   */ 0x01u,
  42              /*  SysEx ends with following two bytes     */ 0x02u,
  43              /*  SysEx ends with following three bytes   */ 0x03u,
  44              /*  Note-off                                */ 0x03u,
  45              /*  Note-on                                 */ 0x03u,
  46              /*  Poly-KeyPress                           */ 0x03u,
  47              /*  Control Change                          */ 0x03u,
  48              /*  Program Change                          */ 0x02u,
  49              /*  Channel Pressure                        */ 0x02u,
  50              /*  PitchBend Change                        */ 0x03u,
  51              /*  Single Byte                             */ 0x01u
  52              };
  53          #endif  /* USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF */
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 2   

  54          
  55          
  56          
  57          /***************************************
  58          *  Global variables
  59          ***************************************/
  60          
  61          
  62          #if (USB_MIDI_IN_BUFF_SIZE > 0)
  63              #if (USB_MIDI_IN_BUFF_SIZE >= 256)
                      /** Input endpoint buffer pointer. This pointer is used as an index for the
                      * USBMIDI_midiInBuffer to write data. It is cleared to zero by the
                      * USBMIDI_MIDI_EP_Init() function.*/
                      volatile uint16 USB_midiInPointer;                            /* Input endpoint buffer pointer */
                  #else
  69                  volatile uint8 USB_midiInPointer;                             /* Input endpoint buffer pointer */
  70              #endif /* (USB_MIDI_IN_BUFF_SIZE >= 256) */
  71              /** Contains the midi IN endpoint number, It is initialized after a
  72               * SET_CONFIGURATION request based on a user descriptor. It is used in MIDI
  73               * APIs to send data to the host.*/
  74              volatile uint8 USB_midi_in_ep;
  75              /** Input endpoint buffer with a length equal to MIDI IN EP Max Packet Size.
  76               * This buffer is used to save and combine the data received from the UARTs,
  77               * generated internally by USBMIDI_PutUsbMidiIn() function messages, or both.
  78               * The USBMIDI_MIDI_IN_Service() function transfers the data from this buffer to the host.*/
  79              uint8 USB_midiInBuffer[USB_MIDI_IN_BUFF_SIZE];       /* Input endpoint buffer */
  80          #endif /* (USB_MIDI_IN_BUFF_SIZE > 0) */
  81          
  82          #if (USB_MIDI_OUT_BUFF_SIZE > 0)
  83              /** Contains the midi OUT endpoint number. It is initialized after a
  84               * SET_CONFIGURATION request based on a user descriptor. It is used in
  85               * MIDI APIs to receive data from the host.*/
  86              volatile uint8 USB_midi_out_ep;                                   /* Output endpoint number */
  87              /** Output endpoint buffer with a length equal to MIDI OUT EP Max Packet Size.
  88               * This buffer is used by the USBMIDI_MIDI_OUT_EP_Service() function to save
  89               * the data received from the host. The received data is then parsed. The
  90               * parsed data is transferred to the UARTs buffer and also used for internal
  91               * processing by the USBMIDI_callbackLocalMidiEvent() function.*/
  92              uint8 USB_midiOutBuffer[USB_MIDI_OUT_BUFF_SIZE];     /* Output endpoint buffer */
  93          #endif /* (USB_MIDI_OUT_BUFF_SIZE > 0) */
  94          
  95          #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
  96          
  97              static USB_MIDI_RX_STATUS USB_MIDI1_Event;            /* MIDI RX status structure */
  98              static volatile uint8 USB_MIDI1_TxRunStat;                         /* MIDI Output running status */
  99              /** The USBFS supports a maximum of two external Jacks. The two flag variables
 100               * are used to represent the status of two external Jacks. These optional variables
 101               * are allocated when External Mode is enabled. The following flags help to
 102               * detect and generate responses for SysEx messages. The USBMIDI_MIDI2_InqFlags
 103               * is optional and is not available when only one external Jack is configured.
 104               * Flag                          | Description
 105               * ------------------------------|---------------------------------------
 106               * USBMIDI_INQ_SYSEX_FLAG        | Non-real-time SysEx message received.
 107               * USBMIDI_INQ_IDENTITY_REQ_FLAG | Identity Request received. You should clear this bit when an Identi
             -ty Reply message is generated.
 108               * SysEX messages are intended for local device and shouldn't go out on the
 109               * external MIDI jack, this flag indicates when a MIDI SysEx OUT message is
 110               * in progress for the application */
 111              volatile uint8 USB_MIDI1_InqFlags;                                 /* Device inquiry flag */
 112          
 113              #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 114                  static USB_MIDI_RX_STATUS USB_MIDI2_Event;        /* MIDI RX status structure */
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 3   

 115                  static volatile uint8 USB_MIDI2_TxRunStat;                     /* MIDI Output running status */
 116                  /** See description of \ref USB_MIDI1_InqFlags*/
 117                  volatile uint8 USB_MIDI2_InqFlags;                             /* Device inquiry flag */
 118              #endif /* (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF) */
 119          #endif /* (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF) */
 120          
 121          
 122          /***************************************
 123          * Custom Declarations
 124          ***************************************/
 125          
 126          /* `#START MIDI_CUSTOM_DECLARATIONS` Place your declaration here */
 127          
 128          /* `#END` */
 129          
 130          
 131          #if (USB_ENABLE_MIDI_API != 0u)
 132          /*******************************************************************************
 133          * Function Name: USB_MIDI_Init
 134          ****************************************************************************//**
 135          *
 136          *  This function initializes the MIDI interface and UART(s) to be ready to
 137          *   receive data from the PC and MIDI ports.
 138          *
 139          * \globalvars
 140          *
 141          *  \ref USB_midiInBuffer: This buffer is used for saving and combining
 142          *    the received data from UART(s) and(or) generated internally by
 143          *    PutUsbMidiIn() function messages. USB_MIDI_IN_EP_Service()
 144          *    function transfers the data from this buffer to the PC.
 145          *
 146          *  \ref USB_midiOutBuffer: This buffer is used by the
 147          *    USB_MIDI_OUT_Service() function for saving the received
 148          *    from the PC data, then the data are parsed and transferred to UART(s)
 149          *    buffer and to the internal processing by the
 150          *
 151          *  \ref USB_callbackLocalMidiEvent function.
 152          *
 153          *  \ref USB_midi_out_ep: Used as an OUT endpoint number.
 154          *
 155          *  \ref USB_midi_in_ep: Used as an IN endpoint number.
 156          *
 157          *   \ref USB_midiInPointer: Initialized to zero.
 158          *
 159          * \sideeffect
 160          *   The priority of the UART RX ISR should be higher than UART TX ISR. To do
 161          *   that this function changes the priority of the UARTs TX and RX interrupts.
 162          *
 163          * \reentrant
 164          *  No
 165          *
 166          *******************************************************************************/
 167          void USB_MIDI_Init(void) 
 168          {
 169   1      #if (USB_MIDI_IN_BUFF_SIZE > 0)
 170   1         USB_midiInPointer = 0u;
 171   1      #endif /* (USB_MIDI_IN_BUFF_SIZE > 0) */
 172   1      
 173   1      #if (USB_EP_MANAGEMENT_DMA_AUTO)
                  #if (USB_MIDI_IN_BUFF_SIZE > 0)
                      /* Provide buffer for IN endpoint. */
                      USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 4   

                                                                             USB_MIDI_IN_BUFF_SIZE);
                  #endif  /* (USB_MIDI_IN_BUFF_SIZE > 0) */
              
                  #if (USB_MIDI_OUT_BUFF_SIZE > 0)
                      /* Provide buffer for OUT endpoint. */
                      (void)USB_ReadOutEP(USB_midi_out_ep, USB_midiOutBuffer,
                                                                                     USB_MIDI_OUT_BUFF_SIZE);
                  #endif /* (USB_MIDI_OUT_BUFF_SIZE > 0) */
              #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 186   1      
 187   1      #if (USB_MIDI_OUT_BUFF_SIZE > 0)
 188   1          USB_EnableOutEP(USB_midi_out_ep);
 189   1      #endif /* (USB_MIDI_OUT_BUFF_SIZE > 0) */
 190   1      
 191   1          /* Initialize the MIDI port(s) */
 192   1      #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 193   1          USB_MIDI_InitInterface();
 194   1      #endif /* (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF) */
 195   1      }
 196          
 197          
 198          #if (USB_MIDI_OUT_BUFF_SIZE > 0)
 199              /*******************************************************************************
 200              * Function Name: USB_MIDI_OUT_Service
 201              ****************************************************************************//**
 202              *
 203              *  This function services the traffic from the USBMIDI OUT endpoint and
 204              *  sends the data to the MIDI output ports (TX UARTs). It is blocked by the
 205              *  UART when not enough space is available in the UART TX buffer.
 206              *  This function is automatically called from OUT EP ISR in DMA with
 207              *  Automatic Memory Management mode. In Manual and DMA with Manual EP
 208              *  Management modes you must call it from the main foreground task.
 209              *
 210              * \globalvars
 211              *
 212              *  \ref USB_midiOutBuffer: Used as temporary buffer between USB
 213              *       internal memory and UART TX buffer.
 214              *
 215              *  \ref USB_midi_out_ep: Used as an OUT endpoint number.
 216              *
 217              * \reentrant
 218              *  No
 219              *
 220              *******************************************************************************/
 221              void USB_MIDI_OUT_Service(void) CYREENTRANT
 222              {
 223   1          #if (USB_MIDI_OUT_BUFF_SIZE >= 256)
                      uint16 outLength;
                      uint16 outPointer;
                  #else
 227   1              uint8 outLength;
 228   1              uint8 outPointer;
 229   1          #endif /* (USB_MIDI_OUT_BUFF_SIZE >= 256) */
 230   1      
 231   1              /* Service the USB MIDI output endpoint. */
 232   1              if (USB_OUT_BUFFER_FULL == USB_GetEPState(USB_midi_out_ep))
 233   1              {
 234   2              #if (USB_MIDI_OUT_BUFF_SIZE >= 256)
                          outLength = USB_GetEPCount(USB_midi_out_ep);
                      #else
 237   2                  outLength = (uint8)USB_GetEPCount(USB_midi_out_ep);
 238   2              #endif /* (USB_MIDI_OUT_BUFF_SIZE >= 256) */
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 5   

 239   2      
 240   2              #if (!USB_EP_MANAGEMENT_DMA_AUTO)
 241   2                  #if (USB_MIDI_OUT_BUFF_SIZE >= 256)
                              outLength = USB_ReadOutEP(USB_midi_out_ep,
                                                                     USB_midiOutBuffer, outLength);
                          #else
 245   2                      outLength = (uint8)USB_ReadOutEP(USB_midi_out_ep,
 246   2                                                                    USB_midiOutBuffer, (uint16) outLength);
 247   2                  #endif /* (USB_MIDI_OUT_BUFF_SIZE >= 256) */
 248   2      
 249   2                  #if (USB_EP_MANAGEMENT_DMA_MANUAL)
                              /* Wait until DMA complete transferring data from OUT endpoint buffer. */
                              while (USB_OUT_BUFFER_FULL == USB_GetEPState(USB_midi_out_ep))
                              {
                              }
              
                              /* Enable OUT endpoint for communication with host. */
                              USB_EnableOutEP(USB_midi_out_ep);
                          #endif /* (USB_EP_MANAGEMENT_DMA_MANUAL) */
 258   2              #endif /* (!USB_EP_MANAGEMENT_DMA_AUTO) */
 259   2      
 260   2                  if (outLength >= USB_EVENT_LENGTH)
 261   2                  {
 262   3                      outPointer = 0u;
 263   3                      while (outPointer < outLength)
 264   3                      {
 265   4                          /* In some OS OUT packet could be appended by nulls which could be skipped. */
 266   4                          if (USB_midiOutBuffer[outPointer] == 0u)
 267   4                          {
 268   5                              break;
 269   5                          }
 270   4      
 271   4                      /* Route USB MIDI to the External connection */
 272   4                      #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 273   4                          if ((USB_midiOutBuffer[outPointer] & USB_CABLE_MASK) ==
 274   4                               USB_MIDI_CABLE_00)
 275   4                          {
 276   5                              USB_MIDI1_ProcessUsbOut(&USB_midiOutBuffer[outPointer]);
 277   5                          }
 278   4                          else if ((USB_midiOutBuffer[outPointer] & USB_CABLE_MASK) ==
 279   4                                   USB_MIDI_CABLE_01)
 280   4                          {
 281   5                          #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 282   5                               USB_MIDI2_ProcessUsbOut(&USB_midiOutBuffer[outPointer]);
 283   5                          #endif /*  USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 284   5                          }
 285   4                          else
 286   4                          {
 287   5                              /* `#START CUSTOM_MIDI_OUT_EP_SERV` Place your code here */
 288   5      
 289   5                              /* `#END` */
 290   5      
 291   5                              #ifdef USB_MIDI_OUT_EP_SERVICE_CALLBACK
                                          USB_MIDI_OUT_EP_Service_Callback();
                                      #endif /* USB_MIDI_OUT_EP_SERVICE_CALLBACK */
 294   5                          }
 295   4                      #endif /* (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF) */
 296   4      
 297   4                          /* Process any local MIDI output functions */
 298   4                          USB_callbackLocalMidiEvent(USB_midiOutBuffer[outPointer] & USB_CABLE_MASK,
 299   4                                                                  &USB_midiOutBuffer[outPointer + USB_EVENT_BYTE
             -1]);
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 6   

 300   4                          outPointer += USB_EVENT_LENGTH;
 301   4                      }
 302   3                  }
 303   2      
 304   2              #if (USB_EP_MANAGEMENT_DMA_AUTO)
                          /* Enable OUT endpoint for communiation. */
                          USB_EnableOutEP(USB_midi_out_ep);
                      #endif  /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 308   2              }
 309   1          }
 310          #endif /* (USB_MIDI_OUT_BUFF_SIZE > 0) */
 311          
 312          
 313          #if (USB_MIDI_IN_BUFF_SIZE > 0)
 314              /*******************************************************************************
 315              * Function Name: USB_MIDI_IN_EP_Service
 316              ****************************************************************************//**
 317              *
 318              *  Services the USB MIDI IN endpoint. Non-blocking.
 319              *  Checks that previous packet was processed by HOST, otherwise service the
 320              *  input endpoint on the subsequent call. It is called from the
 321              *  USB_MIDI_IN_Service() and from the
 322              *  USB_PutUsbMidiIn() function.
 323              *
 324              * \globalvars
 325              *  USB_midi_in_ep: Used as an IN endpoint number.
 326              *  USB_midiInBuffer: Function loads the data from this buffer to
 327              *    the USB IN endpoint.
 328              *   USB_midiInPointer: Cleared to zero when data are sent.
 329              *
 330              * \reentrant
 331              *  No
 332              *
 333              *******************************************************************************/
 334              void USB_MIDI_IN_EP_Service(void) CYREENTRANT
 335              {
 336   1              /* Service the USB MIDI input endpoint */
 337   1              /* Check that previous packet was processed by HOST, otherwise service the USB later */
 338   1              if (USB_midiInPointer != 0u)
 339   1              {
 340   2                  if(USB_GetEPState(USB_midi_in_ep) == USB_EVENT_PENDING)
 341   2                  {
 342   3                  #if (USB_EP_MANAGEMENT_DMA_AUTO)
                              USB_LoadInEP(USB_midi_in_ep, NULL, (uint16)USB_midiInPointer);
                          #else
 345   3                      USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,
 346   3                                                                    (uint16) USB_midiInPointer);
 347   3                  #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 348   3      
 349   3                  /* Clear the midiInPointer. For DMA mode, clear this pointer in the ARB ISR when data are move
             -d by DMA */
 350   3                  #if (USB_EP_MANAGEMENT_MANUAL)
 351   3                      USB_midiInPointer = 0u;
 352   3                  #endif /* (USB_EP_MANAGEMENT_MANUAL) */
 353   3                  }
 354   2              }
 355   1          }
 356          
 357          
 358              /*******************************************************************************
 359              * Function Name: USB_MIDI_IN_Service
 360              ****************************************************************************//**
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 7   

 361              *
 362              *  This function services the traffic from the MIDI input ports (RX UART)
 363              *  and prepare data in USB MIDI IN endpoint buffer.
 364              *  Calls the USB_MIDI_IN_EP_Service() function to sent the
 365              *  data from buffer to PC. Non-blocking. Should be called from main foreground
 366              *  task.
 367              *  This function is not protected from the reentrant calls. When it is required
 368              *  to use this function in UART RX ISR to guaranty low latency, care should be
 369              *  taken to protect from reentrant calls.
 370              *  In PSoC 3, if this function is called from an ISR, you must declare this
 371              *  function as re-entrant so that different variable storage space is
 372              *  created by the compiler. This is automatically taken care for PSoC 4 and
 373              *  PSoC 5LP devices by the compiler.
 374              *
 375              * \globalvars
 376              *
 377              *   USB_midiInPointer: Cleared to zero when data are sent.
 378              *
 379              * \reentrant
 380              *  No
 381              *
 382              *******************************************************************************/
 383              void USB_MIDI_IN_Service(void) CYREENTRANT
 384              {
 385   1              /* Service the MIDI UART inputs until either both receivers have no more
 386   1              *  events or until the input endpoint buffer fills up.
 387   1              */
 388   1          #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 389   1                  uint8 m1 = 0u;
 390   1                  uint8 m2 = 0u;
 391   1      
 392   1              if (0u == USB_midiInPointer)
 393   1              {
 394   2                  do
 395   2                  {
 396   3                      if (USB_midiInPointer <= (USB_MIDI_IN_BUFF_SIZE - USB_EVENT_LENGTH))
 397   3                      {
 398   4                          /* Check MIDI1 input port for a complete event */
 399   4                          m1 = USB_MIDI1_GetEvent();
 400   4                          if (m1 != 0u)
 401   4                          {
 402   5                              USB_PrepareInBuffer(m1, (uint8 *)&USB_MIDI1_Event.msgBuff[0],
 403   5                                                                             USB_MIDI1_Event.size, USB_MIDI_CABL
             -E_00);
 404   5                          }
 405   4                      }
 406   3      
 407   3                  #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 408   3                      if (USB_midiInPointer <= (USB_MIDI_IN_BUFF_SIZE - USB_EVENT_LENGTH))
 409   3                      {
 410   4                          /* Check MIDI2 input port for a complete event */
 411   4                          m2 = USB_MIDI2_GetEvent();
 412   4                          if (m2 != 0u)
 413   4                          {
 414   5                              USB_PrepareInBuffer(m2, (uint8 *)&USB_MIDI2_Event.msgBuff[0],
 415   5                                                                             USB_MIDI2_Event.size, USB_MIDI_CABL
             -E_01);
 416   5                          }
 417   4                      }
 418   3                  #endif /*  USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 419   3                  }
 420   2                  while((USB_midiInPointer <= (USB_MIDI_IN_BUFF_SIZE - USB_EVENT_LENGTH)) &&
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 8   

 421   2                        ((m1 != 0u) || (m2 != 0u)));
 422   2              }
 423   1          #endif /* (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF) */
 424   1      
 425   1              /* Service the USB MIDI input endpoint */
 426   1              USB_MIDI_IN_EP_Service();
 427   1          }
 428          
 429          
 430              /***************************************************************************
 431              * Function Name: USB_PutUsbMidiIn
 432              ************************************************************************//**
 433              *
 434              *  This function puts one MIDI message into the USB MIDI In endpoint buffer.
 435              *  This is a MIDI input message to the host. This function is used only if
 436              *  the device has internal MIDI input functionality.
 437              *  The USB_MIDI_IN_Service() function should also be called to
 438              *  send the message from local buffer to the IN endpoint.
 439              *
 440              *  \param ic: The length of the MIDI message or command is described on the
 441              *  following table.
 442              *  Value          | Description
 443              *  ---------------|---------------------------------------------------------
 444              *  0              | No message (should never happen)
 445              *  1 - 3          | Complete MIDI message in midiMsg
 446              *  3 IN EP LENGTH | Complete SySEx message(without EOSEX byte) in midiMsg. The length is limited by th
             -e max BULK EP size(64)
 447              *  MIDI_SYSEX     | Start or continuation of SysEx message (put event bytes in midiMsg buffer)
 448              *  MIDI_EOSEX     | End of SysEx message (put event bytes in midiMsg buffer)
 449              *  MIDI_TUNEREQ   | Tune Request message (single byte system common msg)
 450              *  0xF8 - 0xFF    | Single byte real-time message
 451              *
 452              *  \param midiMsg: pointer to MIDI message.
 453              *  \param cable:   cable number.
 454              *
 455              * \return
 456              *   Return Value          | Description
 457              *   ----------------------|-----------------------------------------
 458              *  USB_TRUE  | Host is not ready to receive this message
 459              *  USB_FALSE | Success transfer
 460              *
 461              * \globalvars
 462              *
 463              *  \ref USB_midi_in_ep: MIDI IN endpoint number used for
 464              *        sending data.
 465              *
 466              *  \ref USB_midiInPointer: Checked this variable to see if
 467              *        there is enough free space in the IN endpoint buffer. If buffer is
 468              *        full, initiate sending to PC.
 469              *
 470              * \reentrant
 471              *  No
 472              *
 473              ***************************************************************************/
 474              uint8 USB_PutUsbMidiIn(uint8 ic, const uint8 midiMsg[], uint8 cable)
 475                                                                          
 476              {
 477   1              uint8 retError = USB_FALSE;
 478   1              uint8 msgIndex;
 479   1      
 480   1              /* Protect PrepareInBuffer() function from concurrent calls */
 481   1          #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 9   

 482   1              MIDI1_UART_DisableRxInt();
 483   1              #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 484   1                  MIDI2_UART_DisableRxInt();
 485   1              #endif /* (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF) */
 486   1          #endif /* (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF) */
 487   1      
 488   1              if (USB_midiInPointer >
 489   1                          (USB_EP[USB_midi_in_ep].bufferSize - USB_EVENT_LENGTH))
 490   1              {
 491   2                  USB_MIDI_IN_EP_Service();
 492   2              }
 493   1      
 494   1              if (USB_midiInPointer <=
 495   1                          (USB_EP[USB_midi_in_ep].bufferSize - USB_EVENT_LENGTH))
 496   1              {
 497   2                  if((ic < USB_EVENT_LENGTH) || (ic >= USB_MIDI_STATUS_MASK))
 498   2                  {
 499   3                      USB_PrepareInBuffer(ic, midiMsg, ic, cable);
 500   3                  }
 501   2                  else
 502   2                  {
 503   3                      /* Only SysEx message is greater than 4 bytes */
 504   3                      msgIndex = 0u;
 505   3      
 506   3                      do
 507   3                      {
 508   4                          USB_PrepareInBuffer(USB_MIDI_SYSEX, &midiMsg[msgIndex],
 509   4                                                           USB_EVENT_BYTE3, cable);
 510   4      
 511   4                          ic -= USB_EVENT_BYTE3;
 512   4                          msgIndex += USB_EVENT_BYTE3;
 513   4      
 514   4                          if (USB_midiInPointer >
 515   4                              (USB_EP[USB_midi_in_ep].bufferSize - USB_EVENT_LENGTH))
 516   4                          {
 517   5                              USB_MIDI_IN_EP_Service();
 518   5      
 519   5                              if (USB_midiInPointer >
 520   5                                 (USB_EP[USB_midi_in_ep].bufferSize - USB_EVENT_LENGTH))
 521   5                              {
 522   6                                  /* Error condition. HOST is not ready to receive this packet. */
 523   6                                  retError = USB_TRUE;
 524   6                                  break;
 525   6                              }
 526   5                          }
 527   4                      }
 528   3                      while (ic > USB_EVENT_BYTE3);
 529   3      
 530   3                      if (retError == USB_FALSE)
 531   3                      {
 532   4                          USB_PrepareInBuffer(USB_MIDI_EOSEX, midiMsg, ic, cable);
 533   4                      }
 534   3                  }
 535   2              }
 536   1              else
 537   1              {
 538   2                  /* Error condition. HOST is not ready to receive this packet. */
 539   2                  retError = USB_TRUE;
 540   2              }
 541   1      
 542   1          #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 543   1              MIDI1_UART_EnableRxInt();
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 10  

 544   1              #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 545   1                  MIDI2_UART_EnableRxInt();
 546   1              #endif /* (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF) */
 547   1          #endif /* (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF) */
 548   1      
 549   1              return (retError);
 550   1          }
 551          
 552          
 553              /*******************************************************************************
 554              * Function Name: USB_PrepareInBuffer
 555              ****************************************************************************//**
 556              *
 557              *  Builds a USB MIDI event in the input endpoint buffer at the current pointer.
 558              *  Puts one MIDI message into the USB MIDI In endpoint buffer.
 559              *
 560              *  \param ic:   0 = No message (should never happen)
 561              *        1 - 3 = Complete MIDI message at pMdat[0]
 562              *        MIDI_SYSEX = Start or continuation of SysEx message
 563              *                     (put eventLen bytes in buffer)
 564              *        MIDI_EOSEX = End of SysEx message
 565              *                     (put eventLen bytes in buffer,
 566              *                      and append MIDI_EOSEX)
 567              *        MIDI_TUNEREQ = Tune Request message (single byte system common msg)
 568              *        0xf8 - 0xff = Single byte real-time message
 569              *
 570              *  \param srcBuff: pointer to MIDI data
 571              *  \param eventLen: number of bytes in MIDI event
 572              *  \param cable: MIDI source port number
 573              *
 574              * \globalvars
 575              *  USB_midiInBuffer: This buffer is used for saving and combine the
 576              *    received from UART(s) and(or) generated internally by
 577              *    USB_PutUsbMidiIn() function messages.
 578              *  USB_midiInPointer: Used as an index for midiInBuffer to
 579              *     write data.
 580              *
 581              * \reentrant
 582              *  No
 583              *
 584              *******************************************************************************/
 585              void USB_PrepareInBuffer(uint8 ic, const uint8 srcBuff[], uint8 eventLen, uint8 cable)
 586                                                                           CYREENTRANT
 587              {
 588   1              uint8 srcBuffZero;
 589   1              uint8 srcBuffOne;
 590   1      
 591   1              srcBuffZero = srcBuff[0u];
 592   1              srcBuffOne  = srcBuff[1u];
 593   1      
 594   1              if (ic >= (USB_MIDI_STATUS_MASK | USB_MIDI_SINGLE_BYTE_MASK))
 595   1              {
 596   2                  USB_midiInBuffer[USB_midiInPointer] = USB_SINGLE_BYTE | cable;
 597   2                  USB_midiInPointer++;
 598   2                  USB_midiInBuffer[USB_midiInPointer] = ic;
 599   2                  USB_midiInPointer++;
 600   2                  USB_midiInBuffer[USB_midiInPointer] = 0u;
 601   2                  USB_midiInPointer++;
 602   2                  USB_midiInBuffer[USB_midiInPointer] = 0u;
 603   2                  USB_midiInPointer++;
 604   2              }
 605   1              else if((ic < USB_EVENT_LENGTH) || (ic == USB_MIDI_SYSEX))
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 11  

 606   1              {
 607   2                  if(ic == USB_MIDI_SYSEX)
 608   2                  {
 609   3                      USB_midiInBuffer[USB_midiInPointer] = USB_SYSEX | cable;
 610   3                      USB_midiInPointer++;
 611   3                  }
 612   2                  else if (srcBuffZero < USB_MIDI_SYSEX)
 613   2                  {
 614   3                      USB_midiInBuffer[USB_midiInPointer] = (srcBuffZero >> 4u) | cable;
 615   3                      USB_midiInPointer++;
 616   3                  }
 617   2                  else if (srcBuffZero == USB_MIDI_TUNEREQ)
 618   2                  {
 619   3                      USB_midiInBuffer[USB_midiInPointer] = USB_1BYTE_COMMON | cable;
 620   3                      USB_midiInPointer++;
 621   3                  }
 622   2                  else if ((srcBuffZero == USB_MIDI_QFM) || (srcBuffZero == USB_MIDI_SONGSEL))
 623   2                  {
 624   3                      USB_midiInBuffer[USB_midiInPointer] = USB_2BYTE_COMMON | cable;
 625   3                      USB_midiInPointer++;
 626   3                  }
 627   2                  else if (srcBuffZero == USB_MIDI_SPP)
 628   2                  {
 629   3                      USB_midiInBuffer[USB_midiInPointer] = USB_3BYTE_COMMON | cable;
 630   3                      USB_midiInPointer++;
 631   3                  }
 632   2                  else
 633   2                  {
 634   3                  }
 635   2      
 636   2                  USB_midiInBuffer[USB_midiInPointer] = srcBuffZero;
 637   2                  USB_midiInPointer++;
 638   2                  USB_midiInBuffer[USB_midiInPointer] = srcBuffOne;
 639   2                  USB_midiInPointer++;
 640   2                  USB_midiInBuffer[USB_midiInPointer] = srcBuff[2u];
 641   2                  USB_midiInPointer++;
 642   2              }
 643   1              else if (ic == USB_MIDI_EOSEX)
 644   1              {
 645   2                  switch (eventLen)
 646   2                  {
 647   3                      case 0u:
 648   3                          USB_midiInBuffer[USB_midiInPointer] =
 649   3                                                                              USB_SYSEX_ENDS_WITH1 | cable;
 650   3                          USB_midiInPointer++;
 651   3                          USB_midiInBuffer[USB_midiInPointer] = USB_MIDI_EOSEX;
 652   3                          USB_midiInPointer++;
 653   3                          USB_midiInBuffer[USB_midiInPointer] = 0u;
 654   3                          USB_midiInPointer++;
 655   3                          USB_midiInBuffer[USB_midiInPointer] = 0u;
 656   3                          USB_midiInPointer++;
 657   3                          break;
 658   3                      case 1u:
 659   3                          USB_midiInBuffer[USB_midiInPointer] =
 660   3                                                                              USB_SYSEX_ENDS_WITH2 | cable;
 661   3                          USB_midiInPointer++;
 662   3                          USB_midiInBuffer[USB_midiInPointer] = srcBuffZero;
 663   3                          USB_midiInPointer++;
 664   3                          USB_midiInBuffer[USB_midiInPointer] = USB_MIDI_EOSEX;
 665   3                          USB_midiInPointer++;
 666   3                          USB_midiInBuffer[USB_midiInPointer] = 0u;
 667   3                          USB_midiInPointer++;
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 12  

 668   3                          break;
 669   3                      case 2u:
 670   3                          USB_midiInBuffer[USB_midiInPointer] =
 671   3                                                                              USB_SYSEX_ENDS_WITH3 | cable;
 672   3                          USB_midiInPointer++;
 673   3                          USB_midiInBuffer[USB_midiInPointer] = srcBuffZero;
 674   3                          USB_midiInPointer++;
 675   3                          USB_midiInBuffer[USB_midiInPointer] = srcBuffOne;
 676   3                          USB_midiInPointer++;
 677   3                          USB_midiInBuffer[USB_midiInPointer] = USB_MIDI_EOSEX;
 678   3                          USB_midiInPointer++;
 679   3                          break;
 680   3                      default:
 681   3                          break;
 682   3                  }
 683   2              }
 684   1              else
 685   1              {
 686   2              }
 687   1          }
 688          
 689          #endif /* (USB_MIDI_IN_BUFF_SIZE > 0) */
 690          
 691          
 692          /* The implementation for external serial input and output connections
 693          *  to route USB MIDI data to and from those connections.
 694          */
 695          #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 696              /*******************************************************************************
 697              * Function Name: USB_MIDI_InitInterface
 698              ****************************************************************************//**
 699              *
 700              *  Initializes MIDI variables and starts the UART(s) hardware block(s).
 701              *
 702              * \sideeffect
 703              *  Change the priority of the UART(s) TX interrupts to be higher than the
 704              *  default EP ISR priority.
 705              *
 706              * \globalvars
 707              *   USB_MIDI_Event: initialized to zero.
 708              *   USB_MIDI_TxRunStat: initialized to zero.
 709              *
 710              *******************************************************************************/
 711              void USB_MIDI_InitInterface(void) 
 712              {
 713   1              USB_MIDI1_Event.length  = 0u;
 714   1              USB_MIDI1_Event.count   = 0u;
 715   1              USB_MIDI1_Event.size    = 0u;
 716   1              USB_MIDI1_Event.runstat = 0u;
 717   1              USB_MIDI1_TxRunStat     = 0u;
 718   1              USB_MIDI1_InqFlags      = 0u;
 719   1      
 720   1              /* Start UART block */
 721   1              MIDI1_UART_Start();
 722   1      
 723   1              /* Change the priority of the UART TX and RX interrupt */
 724   1              CyIntSetPriority(MIDI1_UART_TX_VECT_NUM, USB_CUSTOM_UART_TX_PRIOR_NUM);
 725   1              CyIntSetPriority(MIDI1_UART_RX_VECT_NUM, USB_CUSTOM_UART_RX_PRIOR_NUM);
 726   1      
 727   1          #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 728   1              USB_MIDI2_Event.length  = 0u;
 729   1              USB_MIDI2_Event.count   = 0u;
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 13  

 730   1              USB_MIDI2_Event.size    = 0u;
 731   1              USB_MIDI2_Event.runstat = 0u;
 732   1              USB_MIDI2_TxRunStat     = 0u;
 733   1              USB_MIDI2_InqFlags      = 0u;
 734   1      
 735   1              /* Start second UART block */
 736   1              MIDI2_UART_Start();
 737   1      
 738   1              /* Change the priority of the UART TX interrupt */
 739   1              CyIntSetPriority(MIDI2_UART_TX_VECT_NUM, USB_CUSTOM_UART_TX_PRIOR_NUM);
 740   1              CyIntSetPriority(MIDI2_UART_RX_VECT_NUM, USB_CUSTOM_UART_RX_PRIOR_NUM);
 741   1          #endif /* (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF) */
 742   1      
 743   1              /* `#START MIDI_INIT_CUSTOM` Init other extended UARTs here */
 744   1      
 745   1              /* `#END` */
 746   1      
 747   1          #ifdef USB_MIDI_INIT_CALLBACK
                      USB_MIDI_Init_Callback();
                  #endif /* (USB_MIDI_INIT_CALLBACK) */
 750   1          }
 751          
 752          
 753              /*******************************************************************************
 754              * Function Name: USB_ProcessMidiIn
 755              ****************************************************************************//**
 756              *
 757              *  Processes one byte of incoming MIDI data.
 758              *
 759              *   mData = current MIDI input data byte
 760              *   *rxStat = pointer to a MIDI_RX_STATUS structure
 761              *
 762              * \return
 763              *   0, if no complete message
 764              *   1 - 4, if message complete
 765              *   MIDI_SYSEX, if start or continuation of system exclusive
 766              *   MIDI_EOSEX, if end of system exclusive
 767              *   0xf8 - 0xff, if single byte real time message
 768              *
 769              *******************************************************************************/
 770              uint8 USB_ProcessMidiIn(uint8 mData, USB_MIDI_RX_STATUS *rxStat)
 771                                                                          CYREENTRANT
 772              {
 773   1              uint8 midiReturn = 0u;
 774   1      
 775   1              /* Check for a MIDI status byte.  All status bytes, except real time messages,
 776   1              *  which are a single byte, force the start of a new buffer cycle.
 777   1              */
 778   1              if ((mData & USB_MIDI_STATUS_BYTE_MASK) != 0u)
 779   1              {
 780   2                  if ((mData & USB_MIDI_STATUS_MASK) == USB_MIDI_STATUS_MASK)
 781   2                  {
 782   3                      if ((mData & USB_MIDI_SINGLE_BYTE_MASK) != 0u) /* System Real-Time Messages(single byte) *
             -/
 783   3                      {
 784   4                          midiReturn = mData;
 785   4                      }
 786   3                      else                              /* System Common Messages */
 787   3                      {
 788   4                          switch (mData)
 789   4                          {
 790   5                              case USB_MIDI_SYSEX:
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 14  

 791   5                                  rxStat->msgBuff[0u] = USB_MIDI_SYSEX;
 792   5                                  rxStat->runstat = USB_MIDI_SYSEX;
 793   5                                  rxStat->count = 1u;
 794   5                                  rxStat->length = 3u;
 795   5                                  break;
 796   5                              case USB_MIDI_EOSEX:
 797   5                                  rxStat->runstat = 0u;
 798   5                                  rxStat->size = rxStat->count;
 799   5                                  rxStat->count = 0u;
 800   5                                  midiReturn = USB_MIDI_EOSEX;
 801   5                                  break;
 802   5                              case USB_MIDI_SPP:
 803   5                                  rxStat->msgBuff[0u] = USB_MIDI_SPP;
 804   5                                  rxStat->runstat = 0u;
 805   5                                  rxStat->count = 1u;
 806   5                                  rxStat->length = 3u;
 807   5                                  break;
 808   5                              case USB_MIDI_SONGSEL:
 809   5                                  rxStat->msgBuff[0u] = USB_MIDI_SONGSEL;
 810   5                                  rxStat->runstat = 0u;
 811   5                                  rxStat->count = 1u;
 812   5                                  rxStat->length = 2u;
 813   5                                  break;
 814   5                              case USB_MIDI_QFM:
 815   5                                  rxStat->msgBuff[0u] = USB_MIDI_QFM;
 816   5                                  rxStat->runstat = 0u;
 817   5                                  rxStat->count = 1u;
 818   5                                  rxStat->length = 2u;
 819   5                                  break;
 820   5                              case USB_MIDI_TUNEREQ:
 821   5                                  rxStat->msgBuff[0u] = USB_MIDI_TUNEREQ;
 822   5                                  rxStat->runstat = 0u;
 823   5                                  rxStat->size = 1u;
 824   5                                  rxStat->count = 0u;
 825   5                                  midiReturn = rxStat->size;
 826   5                                  break;
 827   5                              default:
 828   5                                  break;
 829   5                          }
 830   4                      }
 831   3                  }
 832   2                  else /* Channel Messages */
 833   2                  {
 834   3                      rxStat->msgBuff[0u] = mData;
 835   3                      rxStat->runstat = mData;
 836   3                      rxStat->count = 1u;
 837   3                      switch (mData & USB_MIDI_STATUS_MASK)
 838   3                      {
 839   4                          case USB_MIDI_NOTE_OFF:
 840   4                          case USB_MIDI_NOTE_ON:
 841   4                          case USB_MIDI_POLY_KEY_PRESSURE:
 842   4                          case USB_MIDI_CONTROL_CHANGE:
 843   4                          case USB_MIDI_PITCH_BEND_CHANGE:
 844   4                              rxStat->length = 3u;
 845   4                              break;
 846   4                          case USB_MIDI_PROGRAM_CHANGE:
 847   4                          case USB_MIDI_CHANNEL_PRESSURE:
 848   4                              rxStat->length = 2u;
 849   4                              break;
 850   4                          default:
 851   4                              rxStat->runstat = 0u;
 852   4                              rxStat->count = 0u;
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 15  

 853   4                              break;
 854   4                      }
 855   3                  }
 856   2              }
 857   1      
 858   1              /* Otherwise, it's a data byte */
 859   1              else
 860   1              {
 861   2                  if (rxStat->runstat == USB_MIDI_SYSEX)
 862   2                  {
 863   3                      rxStat->msgBuff[rxStat->count] = mData;
 864   3                      rxStat->count++;
 865   3                      if (rxStat->count >= rxStat->length)
 866   3                      {
 867   4                          rxStat->size = rxStat->count;
 868   4                          rxStat->count = 0u;
 869   4                          midiReturn = USB_MIDI_SYSEX;
 870   4                      }
 871   3                  }
 872   2                  else if (rxStat->count > 0u)
 873   2                  {
 874   3                      rxStat->msgBuff[rxStat->count] = mData;
 875   3                      rxStat->count++;
 876   3                      if (rxStat->count >= rxStat->length)
 877   3                      {
 878   4                          rxStat->size = rxStat->count;
 879   4                          rxStat->count = 0u;
 880   4                          midiReturn = rxStat->size;
 881   4                      }
 882   3                  }
 883   2                  else if (rxStat->runstat != 0u)
 884   2                  {
 885   3                      rxStat->msgBuff[0u] = rxStat->runstat;
 886   3                      rxStat->msgBuff[1u] = mData;
 887   3                      rxStat->count = 2u;
 888   3                      switch (rxStat->runstat & USB_MIDI_STATUS_MASK)
 889   3                      {
 890   4                          case USB_MIDI_NOTE_OFF:
 891   4                          case USB_MIDI_NOTE_ON:
 892   4                          case USB_MIDI_POLY_KEY_PRESSURE:
 893   4                          case USB_MIDI_CONTROL_CHANGE:
 894   4                          case USB_MIDI_PITCH_BEND_CHANGE:
 895   4                              rxStat->length = 3u;
 896   4                              break;
 897   4                          case USB_MIDI_PROGRAM_CHANGE:
 898   4                          case USB_MIDI_CHANNEL_PRESSURE:
 899   4                              rxStat->size = rxStat->count;
 900   4                              rxStat->count = 0u;
 901   4                              midiReturn = rxStat->size;
 902   4                              break;
 903   4                          default:
 904   4                              rxStat->count = 0u;
 905   4                          break;
 906   4                      }
 907   3                  }
 908   2                  else
 909   2                  {
 910   3                  }
 911   2              }
 912   1              return (midiReturn);
 913   1          }
 914          
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 16  

 915          
 916              /*******************************************************************************
 917              * Function Name: USB_MIDI1_GetEvent
 918              ****************************************************************************//**
 919              *
 920              *  Checks for incoming MIDI data, calls the MIDI event builder if so.
 921              *  Returns either empty or with a complete event.
 922              *
 923              * \return
 924              *   0, if no complete message
 925              *   1 - 4, if message complete
 926              *   MIDI_SYSEX, if start or continuation of system exclusive
 927              *   MIDI_EOSEX, if end of system exclusive
 928              *   0xf8 - 0xff, if single byte real time message
 929              *
 930              * \globalvars
 931              *  USB_MIDI1_Event: RX status structure used to parse received
 932              *    data.
 933              *
 934              *******************************************************************************/
 935              uint8 USB_MIDI1_GetEvent(void) CYREENTRANT
 936              {
 937   1              uint8 msgRtn = 0u;
 938   1              uint8 rxData;
 939   1              #if (MIDI1_UART_RXBUFFERSIZE >= 256u)
                          uint16 rxBufferRead;
                          #if (CY_PSOC3) /* This local variable is required only for PSOC3 and large buffer */
                              uint16 rxBufferWrite;
                          #endif /* (CY_PSOC3) */
                      #else
 945   1                  uint8 rxBufferRead;
 946   1              #endif /* (MIDI1_UART_RXBUFFERSIZE >= 256u) */
 947   1      
 948   1              uint8 rxBufferLoopDetect;
 949   1              /* Read buffer loop condition to the local variable */
 950   1              rxBufferLoopDetect = MIDI1_UART_rxBufferLoopDetect;
 951   1      
 952   1              if ((MIDI1_UART_rxBufferRead != MIDI1_UART_rxBufferWrite) || (rxBufferLoopDetect != 0u))
 953   1              {
 954   2                  /* Protect variables that could change on interrupt by disabling Rx interrupt.*/
 955   2                  #if ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              CyIntDisable(MIDI1_UART_RX_VECT_NUM);
                          #endif /* ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
 958   2      
 959   2                  rxBufferRead = MIDI1_UART_rxBufferRead;
 960   2                  #if ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              rxBufferWrite = MIDI1_UART_rxBufferWrite;
                              CyIntEnable(MIDI1_UART_RX_VECT_NUM);
                          #endif /* ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
 964   2      
 965   2                  /* Stay here until either the buffer is empty or we have a complete message
 966   2                  *  in the message buffer. Note that we must use a temporary buffer pointer
 967   2                  *  since it takes two instructions to increment with a wrap, and we can't
 968   2                  *  risk doing that with the real pointer and getting an interrupt in between
 969   2                  *  instructions.
 970   2                  */
 971   2      
 972   2                  #if ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              while ( ((rxBufferRead != rxBufferWrite) || (rxBufferLoopDetect != 0u)) && (msgRtn == 0u) 
             -)
                          #else
 975   2                      while ( ((rxBufferRead != MIDI1_UART_rxBufferWrite) || (rxBufferLoopDetect != 0u)) && (msg
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 17  

             -Rtn == 0u) )
 976   2                  #endif /*  ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
 977   2                      {
 978   3                          rxData = MIDI1_UART_rxBuffer[rxBufferRead];
 979   3                          /* Increment pointer with a wrap */
 980   3                          rxBufferRead++;
 981   3                          if (rxBufferRead >= MIDI1_UART_RXBUFFERSIZE)
 982   3                          {
 983   4                              rxBufferRead = 0u;
 984   4                          }
 985   3      
 986   3                          /* If loop condition was set - update real read buffer pointer
 987   3                          *  to avoid overflow status
 988   3                          */
 989   3                          if (rxBufferLoopDetect != 0u )
 990   3                          {
 991   4                              MIDI1_UART_rxBufferLoopDetect = 0u;
 992   4                          #if ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                                      CyIntDisable(MIDI1_UART_RX_VECT_NUM);
                                  #endif /*  MIDI1_UART_RXBUFFERSIZE >= 256 */
 995   4      
 996   4                              MIDI1_UART_rxBufferRead = rxBufferRead;
 997   4                          #if ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                                      CyIntEnable(MIDI1_UART_RX_VECT_NUM);
                                  #endif /*  MIDI1_UART_RXBUFFERSIZE >= 256 */
1000   4                          }
1001   3      
1002   3                          msgRtn = USB_ProcessMidiIn(rxData,
1003   3                                                          (USB_MIDI_RX_STATUS *)&USB_MIDI1_Event);
1004   3      
1005   3                          /* Read buffer loop condition to the local variable */
1006   3                          rxBufferLoopDetect = MIDI1_UART_rxBufferLoopDetect;
1007   3                      }
1008   2      
1009   2                  /* Finally, update the real output pointer, then return with
1010   2                  *  an indication as to whether there's a complete message in the buffer.
1011   2                  */
1012   2              #if ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                          CyIntDisable(MIDI1_UART_RX_VECT_NUM);
                      #endif /* ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1015   2      
1016   2              MIDI1_UART_rxBufferRead = rxBufferRead;
1017   2              #if ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                          CyIntEnable(MIDI1_UART_RX_VECT_NUM);
                      #endif /* ((MIDI1_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1020   2              }
1021   1      
1022   1              return (msgRtn);
1023   1          }
1024          
1025          
1026              /*******************************************************************************
1027              * Function Name: USB_MIDI1_ProcessUsbOut
1028              ****************************************************************************//**
1029              *
1030              *  Process a USB MIDI output event.
1031              *  Puts data into the MIDI TX output buffer.
1032              *
1033              *  \param *epBuf: pointer on MIDI event.
1034              *
1035              * \globalvars
1036              *  USB_MIDI1_TxRunStat: This variable used to save the MIDI
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 18  

1037              *    status byte and skip to send the repeated status byte in subsequent event.
1038              *  USB_MIDI1_InqFlags: The following flags are set when SysEx
1039              *    message comes.
1040              *    USB_INQ_SYSEX_FLAG: Non-Real Time SySEx message received.
1041              *    USB_INQ_IDENTITY_REQ_FLAG: Identity Request received.
1042              *      This bit should be cleared by user when Identity Reply message generated.
1043              *
1044              *******************************************************************************/
1045              void USB_MIDI1_ProcessUsbOut(const uint8 epBuf[])
1046                                                                      CYREENTRANT
1047              {
1048   1              uint8 cmd;
1049   1              uint8 len;
1050   1              uint8 i;
1051   1      
1052   1              /* User code is required at the beginning of the procedure */
1053   1              /* `#START MIDI1_PROCESS_OUT_BEGIN` */
1054   1      
1055   1              /* `#END` */
1056   1      
1057   1          #ifdef USB_MIDI1_PROCESS_USB_OUT_ENTRY_CALLBACK
1058   1              USB_MIDI1_ProcessUsbOut_EntryCallback();
1059   1          #endif /* (USB_MIDI1_PROCESS_USB_OUT_ENTRY_CALLBACK) */
1060   1      
1061   1              cmd = epBuf[USB_EVENT_BYTE0] & USB_CIN_MASK;
1062   1      
1063   1              if ((cmd != USB_RESERVED0) && (cmd != USB_RESERVED1))
1064   1              {
1065   2                  len = USB_MIDI_SIZE[cmd];
1066   2                  i = USB_EVENT_BYTE1;
1067   2                  /* Universal System Exclusive message parsing */
1068   2                  if (cmd == USB_SYSEX)
1069   2                  {
1070   3                      if ((epBuf[USB_EVENT_BYTE1] == USB_MIDI_SYSEX) &&
1071   3                          (epBuf[USB_EVENT_BYTE2] == USB_MIDI_SYSEX_NON_REAL_TIME))
1072   3                      {
1073   4                          /* Non-Real Time SySEx starts */
1074   4                          USB_MIDI1_InqFlags |= USB_INQ_SYSEX_FLAG;
1075   4                      }
1076   3                      else
1077   3                      {
1078   4                          USB_MIDI1_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1079   4                      }
1080   3                  }
1081   2                  else if (cmd == USB_SYSEX_ENDS_WITH1)
1082   2                  {
1083   3                      USB_MIDI1_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1084   3                  }
1085   2                  else if (cmd == USB_SYSEX_ENDS_WITH2)
1086   2                  {
1087   3                      USB_MIDI1_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1088   3                  }
1089   2                  else if (cmd == USB_SYSEX_ENDS_WITH3)
1090   2                  {
1091   3                      /* Identify Request support */
1092   3                      if ((USB_MIDI1_InqFlags & USB_INQ_SYSEX_FLAG) != 0u)
1093   3                      {
1094   4                          USB_MIDI1_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1095   4                          if ((epBuf[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_GEN_INFORMATION) &&
1096   4                              (epBuf[USB_EVENT_BYTE2] == USB_MIDI_SYSEX_IDENTITY_REQ))
1097   4                          {
1098   5                              /* Set the flag about received the Identity Request.
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 19  

1099   5                              *  The Identity Reply message may be send by user code.
1100   5                              */
1101   5                              USB_MIDI1_InqFlags |= USB_INQ_IDENTITY_REQ_FLAG;
1102   5                          }
1103   4                      }
1104   3                  }
1105   2                  else /* Do nothing for other command */
1106   2                  {
1107   3                  }
1108   2      
1109   2                  /* Running Status for Voice and Mode messages only. */
1110   2                  if ((cmd >= USB_NOTE_OFF) && (cmd <= USB_PITCH_BEND_CHANGE))
1111   2                  {
1112   3                      if (USB_MIDI1_TxRunStat == epBuf[USB_EVENT_BYTE1])
1113   3                      {
1114   4                          /* Skip the repeated Status byte */
1115   4                          i++;
1116   4                      }
1117   3                      else
1118   3                      {
1119   4                          /* Save Status byte for next event */
1120   4                          USB_MIDI1_TxRunStat = epBuf[USB_EVENT_BYTE1];
1121   4                      }
1122   3                  }
1123   2                  else
1124   2                  {
1125   3                      /* Clear Running Status */
1126   3                      USB_MIDI1_TxRunStat = 0u;
1127   3                  }
1128   2      
1129   2                  /* Puts data into the MIDI TX output buffer.*/
1130   2                  do
1131   2                  {
1132   3                      MIDI1_UART_PutChar(epBuf[i]);
1133   3                      i++;
1134   3                  }
1135   2                  while (i <= len);
1136   2              }
1137   1      
1138   1              /* User code is required at the end of the procedure */
1139   1              /* `#START MIDI1_PROCESS_OUT_END` */
1140   1      
1141   1              /* `#END` */
1142   1      
1143   1          #ifdef USB_MIDI1_PROCESS_USB_OUT_EXIT_CALLBACK
1144   1              USB_MIDI1_ProcessUsbOut_ExitCallback();
1145   1          #endif /* (USB_MIDI1_PROCESS_USB_OUT_EXIT_CALLBACK) */
1146   1          }
1147          
1148          
1149          #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
1150              /*******************************************************************************
1151              * Function Name: USB_MIDI2_GetEvent
1152              ****************************************************************************//**
1153              *
1154              *  Checks for incoming MIDI data, calls the MIDI event builder if so.
1155              *  Returns either empty or with a complete event.
1156              *
1157              * \return
1158              *   0, if no complete message
1159              *   1 - 4, if message complete
1160              *   MIDI_SYSEX, if start or continuation of system exclusive
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 20  

1161              *   MIDI_EOSEX, if end of system exclusive
1162              *   0xf8 - 0xff, if single byte real time message
1163              *
1164              * \globalvars
1165              *  USB_MIDI2_Event: RX status structure used to parse received
1166              *    data.
1167              *
1168              *******************************************************************************/
1169              uint8 USB_MIDI2_GetEvent(void) CYREENTRANT
1170              {
1171   1              uint8 msgRtn = 0u;
1172   1              uint8 rxData;
1173   1      
1174   1              #if (MIDI2_UART_RXBUFFERSIZE >= 256u)
                          uint16 rxBufferRead;
                          #if (CY_PSOC3) /* This local variable required only for PSOC3 and large buffer */
                              uint16 rxBufferWrite;
                          #endif /* (CY_PSOC3) */
                      #else
1180   1                  uint8 rxBufferRead;
1181   1              #endif /* (MIDI2_UART_RXBUFFERSIZE >= 256) */
1182   1      
1183   1              uint8 rxBufferLoopDetect;
1184   1              /* Read buffer loop condition to the local variable */
1185   1              rxBufferLoopDetect = MIDI2_UART_rxBufferLoopDetect;
1186   1      
1187   1              if ( (MIDI2_UART_rxBufferRead != MIDI2_UART_rxBufferWrite) || (rxBufferLoopDetect != 0u) )
1188   1              {
1189   2                  /* Protect variables that could change on interrupt by disabling Rx interrupt.*/
1190   2                  #if ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              CyIntDisable(MIDI2_UART_RX_VECT_NUM);
                          #endif /* ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1193   2                  rxBufferRead = MIDI2_UART_rxBufferRead;
1194   2                  #if ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              rxBufferWrite = MIDI2_UART_rxBufferWrite;
                              CyIntEnable(MIDI2_UART_RX_VECT_NUM);
                          #endif /* ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1198   2      
1199   2                  /* Stay here until either the buffer is empty or we have a complete message
1200   2                  *  in the message buffer. Note that we must use a temporary output pointer to
1201   2                  *  since it takes two instructions to increment with a wrap, and we can't
1202   2                  *  risk doing that with the real pointer and getting an interrupt in between
1203   2                  *  instructions.
1204   2                  */
1205   2      
1206   2                  #if ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                              while ( ((rxBufferRead != rxBufferWrite) || (rxBufferLoopDetect != 0u)) && (msgRtn == 0u) 
             -)
                          #else
1209   2                      while ( ((rxBufferRead != MIDI2_UART_rxBufferWrite) || (rxBufferLoopDetect != 0u)) && (msg
             -Rtn == 0u) )
1210   2                  #endif /* ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1211   2                      {
1212   3                          rxData = MIDI2_UART_rxBuffer[rxBufferRead];
1213   3                          rxBufferRead++;
1214   3                          if(rxBufferRead >= MIDI2_UART_RXBUFFERSIZE)
1215   3                          {
1216   4                              rxBufferRead = 0u;
1217   4                          }
1218   3      
1219   3                          /* If loop condition was set - update real read buffer pointer
1220   3                          *  to avoid overflow status
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 21  

1221   3                          */
1222   3                          if (rxBufferLoopDetect != 0u)
1223   3                          {
1224   4                              MIDI2_UART_rxBufferLoopDetect = 0u;
1225   4                          #if ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                                      CyIntDisable(MIDI2_UART_RX_VECT_NUM);
                                  #endif /* ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1228   4      
1229   4                              MIDI2_UART_rxBufferRead = rxBufferRead;
1230   4                          #if ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                                      CyIntEnable(MIDI2_UART_RX_VECT_NUM);
                                  #endif /* ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1233   4                          }
1234   3      
1235   3                          msgRtn = USB_ProcessMidiIn(rxData,
1236   3                                                          (USB_MIDI_RX_STATUS *)&USB_MIDI2_Event);
1237   3      
1238   3                          /* Read buffer loop condition to the local variable */
1239   3                          rxBufferLoopDetect = MIDI2_UART_rxBufferLoopDetect;
1240   3                      }
1241   2      
1242   2                  /* Finally, update the real output pointer, then return with
1243   2                  *  an indication as to whether there's a complete message in the buffer.
1244   2                  */
1245   2              #if ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                          CyIntDisable(MIDI2_UART_RX_VECT_NUM);
                      #endif /* ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1248   2      
1249   2                  MIDI2_UART_rxBufferRead = rxBufferRead;
1250   2              #if ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3))
                          CyIntEnable(MIDI2_UART_RX_VECT_NUM);
                      #endif /* ((MIDI2_UART_RXBUFFERSIZE >= 256u) && (CY_PSOC3)) */
1253   2              }
1254   1      
1255   1              return (msgRtn);
1256   1          }
1257          
1258          
1259              /*******************************************************************************
1260              * Function Name: USB_MIDI2_ProcessUsbOut
1261              ****************************************************************************//**
1262              *
1263              *  Process a USB MIDI output event.
1264              *  Puts data into the MIDI TX output buffer.
1265              *
1266              *  \param *epBuf: pointer on MIDI event.
1267              *
1268              * \globalvars
1269              *  USB_MIDI2_TxRunStat: This variable used to save the MIDI
1270              *    status byte and skip to send the repeated status byte in subsequent event.
1271              *  USB_MIDI2_InqFlags: The following flags are set when SysEx
1272              *    message comes.
1273              *  USB_INQ_SYSEX_FLAG: Non-Real Time SySEx message received.
1274              *  USB_INQ_IDENTITY_REQ_FLAG: Identity Request received.
1275              *    This bit should be cleared by user when Identity Reply message generated.
1276              *
1277              *******************************************************************************/
1278              void USB_MIDI2_ProcessUsbOut(const uint8 epBuf[])
1279                                                                      CYREENTRANT
1280              {
1281   1              uint8 cmd;
1282   1              uint8 len;
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 22  

1283   1              uint8 i;
1284   1      
1285   1              /* User code is required at the beginning of the procedure */
1286   1              /* `#START MIDI2_PROCESS_OUT_START` */
1287   1      
1288   1              /* `#END` */
1289   1      
1290   1          #ifdef USB_MIDI2_PROCESS_USB_OUT_ENTRY_CALLBACK
1291   1              USB_MIDI2_ProcessUsbOut_EntryCallback();
1292   1          #endif /* (USB_MIDI2_PROCESS_USB_OUT_ENTRY_CALLBACK) */
1293   1      
1294   1              cmd = epBuf[USB_EVENT_BYTE0] & USB_CIN_MASK;
1295   1      
1296   1              if ((cmd != USB_RESERVED0) && (cmd != USB_RESERVED1))
1297   1              {
1298   2                  len = USB_MIDI_SIZE[cmd];
1299   2                  i = USB_EVENT_BYTE1;
1300   2      
1301   2                  /* Universal System Exclusive message parsing */
1302   2                  if(cmd == USB_SYSEX)
1303   2                  {
1304   3                      if((epBuf[USB_EVENT_BYTE1] == USB_MIDI_SYSEX) &&
1305   3                         (epBuf[USB_EVENT_BYTE2] == USB_MIDI_SYSEX_NON_REAL_TIME))
1306   3                      {
1307   4                          /* SySEx starts */
1308   4                          USB_MIDI2_InqFlags |= USB_INQ_SYSEX_FLAG;
1309   4                      }
1310   3                      else
1311   3                      {
1312   4                          USB_MIDI2_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1313   4                      }
1314   3                  }
1315   2                  else if(cmd == USB_SYSEX_ENDS_WITH1)
1316   2                  {
1317   3                      USB_MIDI2_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1318   3                  }
1319   2                  else if(cmd == USB_SYSEX_ENDS_WITH2)
1320   2                  {
1321   3                      USB_MIDI2_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1322   3                  }
1323   2                  else if(cmd == USB_SYSEX_ENDS_WITH3)
1324   2                  {
1325   3                      /* Identify Request support */
1326   3                      if ((USB_MIDI2_InqFlags & USB_INQ_SYSEX_FLAG) != 0u)
1327   3                      {
1328   4                          USB_MIDI2_InqFlags &= (uint8)~USB_INQ_SYSEX_FLAG;
1329   4      
1330   4                          if((epBuf[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_GEN_INFORMATION) &&
1331   4                             (epBuf[USB_EVENT_BYTE2] == USB_MIDI_SYSEX_IDENTITY_REQ))
1332   4                          {   /* Set the flag about received the Identity Request.
1333   5                              *  The Identity Reply message may be send by user code.
1334   5                              */
1335   5                              USB_MIDI2_InqFlags |= USB_INQ_IDENTITY_REQ_FLAG;
1336   5                          }
1337   4                      }
1338   3                  }
1339   2                  else /* Do nothing for other command */
1340   2                  {
1341   3                  }
1342   2      
1343   2                  /* Running Status for Voice and Mode messages only. */
1344   2                  if ((cmd >= USB_NOTE_OFF) && ( cmd <= USB_PITCH_BEND_CHANGE))
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 23  

1345   2                  {
1346   3                      if (USB_MIDI2_TxRunStat == epBuf[USB_EVENT_BYTE1])
1347   3                      {   /* Skip the repeated Status byte */
1348   4                          i++;
1349   4                      }
1350   3                      else
1351   3                      {   /* Save Status byte for next event */
1352   4                          USB_MIDI2_TxRunStat = epBuf[USB_EVENT_BYTE1];
1353   4                      }
1354   3                  }
1355   2                  else
1356   2                  {   /* Clear Running Status */
1357   3                      USB_MIDI2_TxRunStat = 0u;
1358   3                  }
1359   2      
1360   2                  /* Puts data into the MIDI TX output buffer.*/
1361   2                  do
1362   2                  {
1363   3                      MIDI2_UART_PutChar(epBuf[i]);
1364   3                      i++;
1365   3                  }
1366   2                  while (i <= len);
1367   2              }
1368   1      
1369   1              /* User code is required at the end of the procedure */
1370   1              /* `#START MIDI2_PROCESS_OUT_END` */
1371   1      
1372   1              /* `#END` */
1373   1      
1374   1          #ifdef USB_MIDI2_PROCESS_USB_OUT_EXIT_CALLBACK
1375   1              USB_MIDI2_ProcessUsbOut_ExitCallback();
1376   1          #endif /* (USB_MIDI2_PROCESS_USB_OUT_EXIT_CALLBACK) */
1377   1          }
1378          #endif /* (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF) */
1379          #endif /* (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF) */
1380          
1381          #endif  /*  (USB_ENABLE_MIDI_API != 0u) */
1382          
1383          
1384          /* `#START MIDI_FUNCTIONS` Place any additional functions here */
1385          
1386          /* `#END` */
1387          
1388          #endif  /* defined(USB_ENABLE_MIDI_STREAMING) */
1389          
1390          
1391          /* [] END OF FILE */
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 24  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION USB_MIDI_Init (BEGIN)
                                           ; SOURCE LINE # 167
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 170
0000 900000      R     MOV     DPTR,#USB_midiInPointer
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 188
0005 900000      R     MOV     DPTR,#USB_midi_out_ep
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 120000      E     LCALL   _?USB_EnableOutEP
                                           ; SOURCE LINE # 193
000D 120000      R     LCALL   USB_MIDI_InitInterface
                                           ; SOURCE LINE # 195
0010 22                RET     
             ; FUNCTION USB_MIDI_Init (END)

             ; FUNCTION _?USB_MIDI_OUT_Service (BEGIN)
                                           ; SOURCE LINE # 221
0000 90FFFE            MOV     DPTR,#0FFFEH
0003 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 232
0006 900000      R     MOV     DPTR,#USB_midi_out_ep
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B 120000      E     LCALL   _?USB_GetEPState
000E EF                MOV     A,R7
000F 6401              XRL     A,#01H
0011 6003              JZ      $ + 5H
0013 020000      R     LJMP    ?C0011
                                           ; SOURCE LINE # 233
                                           ; SOURCE LINE # 237
0016 900000      R     MOV     DPTR,#USB_midi_out_ep
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B 120000      E     LCALL   _?USB_GetEPCount
001E 850083      E     MOV     DPH,?C_XBP
0021 850082      E     MOV     DPL,?C_XBP+01H
0024 EF                MOV     A,R7
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 246
0026 850083      E     MOV     DPH,?C_XBP
0029 850082      E     MOV     DPL,?C_XBP+01H
002C E0                MOVX    A,@DPTR
002D FF                MOV     R7,A
002E 7E00              MOV     R6,#00H
0030 90FFFE            MOV     DPTR,#0FFFEH
0033 120000      E     LCALL   ?C?ADDXBP
0036 EE                MOV     A,R6
0037 F0                MOVX    @DPTR,A
0038 A3                INC     DPTR
0039 EF                MOV     A,R7
003A F0                MOVX    @DPTR,A
003B 7B01              MOV     R3,#01H
003D 7A00        R     MOV     R2,#HIGH USB_midiOutBuffer
003F 7900        R     MOV     R1,#LOW USB_midiOutBuffer
0041 900000      R     MOV     DPTR,#USB_midi_out_ep
0044 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 25  

0045 FF                MOV     R7,A
0046 120000      E     LCALL   _?USB_ReadOutEP
0049 850083      E     MOV     DPH,?C_XBP
004C 850082      E     MOV     DPL,?C_XBP+01H
004F EF                MOV     A,R7
0050 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 260
0051 850083      E     MOV     DPH,?C_XBP
0054 850082      E     MOV     DPL,?C_XBP+01H
0057 E0                MOVX    A,@DPTR
0058 FF                MOV     R7,A
0059 EF                MOV     A,R7
005A C3                CLR     C
005B 9404              SUBB    A,#04H
005D 5003              JNC     $ + 5H
005F 020000      R     LJMP    ?C0011
                                           ; SOURCE LINE # 261
                                           ; SOURCE LINE # 262
0062 850083      E     MOV     DPH,?C_XBP
0065 850082      E     MOV     DPL,?C_XBP+01H
0068 A3                INC     DPTR
0069 E4                CLR     A
006A F0                MOVX    @DPTR,A
006B         ?C0004:
                                           ; SOURCE LINE # 263
006B 850083      E     MOV     DPH,?C_XBP
006E 850082      E     MOV     DPL,?C_XBP+01H
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 850083      E     MOV     DPH,?C_XBP
0076 850082      E     MOV     DPL,?C_XBP+01H
0079 A3                INC     DPTR
007A E0                MOVX    A,@DPTR
007B FE                MOV     R6,A
007C EE                MOV     A,R6
007D C3                CLR     C
007E 9F                SUBB    A,R7
007F 4003              JC      $ + 5H
0081 020000      R     LJMP    ?C0011
                                           ; SOURCE LINE # 264
                                           ; SOURCE LINE # 266
0084 850083      E     MOV     DPH,?C_XBP
0087 850082      E     MOV     DPL,?C_XBP+01H
008A A3                INC     DPTR
008B E0                MOVX    A,@DPTR
008C FF                MOV     R7,A
008D 7400        R     MOV     A,#LOW USB_midiOutBuffer
008F 2F                ADD     A,R7
0090 F582              MOV     DPL,A
0092 E4                CLR     A
0093 3400        R     ADDC    A,#HIGH USB_midiOutBuffer
0095 F583              MOV     DPH,A
0097 E0                MOVX    A,@DPTR
0098 FF                MOV     R7,A
0099 EF                MOV     A,R7
009A 7003              JNZ     $ + 5H
009C 020000      R     LJMP    ?C0011
                                           ; SOURCE LINE # 267
                                           ; SOURCE LINE # 268
                                           ; SOURCE LINE # 269
009F         ?C0006:
                                           ; SOURCE LINE # 273
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 26  

009F 850083      E     MOV     DPH,?C_XBP
00A2 850082      E     MOV     DPL,?C_XBP+01H
00A5 A3                INC     DPTR
00A6 E0                MOVX    A,@DPTR
00A7 FF                MOV     R7,A
00A8 7400        R     MOV     A,#LOW USB_midiOutBuffer
00AA 2F                ADD     A,R7
00AB F582              MOV     DPL,A
00AD E4                CLR     A
00AE 3400        R     ADDC    A,#HIGH USB_midiOutBuffer
00B0 F583              MOV     DPH,A
00B2 E0                MOVX    A,@DPTR
00B3 FF                MOV     R7,A
00B4 EF                MOV     A,R7
00B5 54F0              ANL     A,#0F0H
00B7 FF                MOV     R7,A
00B8 7E00              MOV     R6,#00H
00BA EF                MOV     A,R7
00BB 4E                ORL     A,R6
00BC 7018              JNZ     ?C0007
                                           ; SOURCE LINE # 275
                                           ; SOURCE LINE # 276
00BE 850083      E     MOV     DPH,?C_XBP
00C1 850082      E     MOV     DPL,?C_XBP+01H
00C4 A3                INC     DPTR
00C5 E0                MOVX    A,@DPTR
00C6 FF                MOV     R7,A
00C7 7400        R     MOV     A,#LOW USB_midiOutBuffer
00C9 2F                ADD     A,R7
00CA F9                MOV     R1,A
00CB E4                CLR     A
00CC 3400        R     ADDC    A,#HIGH USB_midiOutBuffer
00CE FA                MOV     R2,A
00CF 7B01              MOV     R3,#01H
00D1 120000      R     LCALL   _?USB_MIDI1_ProcessUsbOut
                                           ; SOURCE LINE # 277
00D4 8037              SJMP    ?C0008
00D6         ?C0007:
                                           ; SOURCE LINE # 278
00D6 850083      E     MOV     DPH,?C_XBP
00D9 850082      E     MOV     DPL,?C_XBP+01H
00DC A3                INC     DPTR
00DD E0                MOVX    A,@DPTR
00DE FF                MOV     R7,A
00DF 7400        R     MOV     A,#LOW USB_midiOutBuffer
00E1 2F                ADD     A,R7
00E2 F582              MOV     DPL,A
00E4 E4                CLR     A
00E5 3400        R     ADDC    A,#HIGH USB_midiOutBuffer
00E7 F583              MOV     DPH,A
00E9 E0                MOVX    A,@DPTR
00EA FF                MOV     R7,A
00EB EF                MOV     A,R7
00EC 54F0              ANL     A,#0F0H
00EE FF                MOV     R7,A
00EF 7E00              MOV     R6,#00H
00F1 EF                MOV     A,R7
00F2 6410              XRL     A,#010H
00F4 4E                ORL     A,R6
00F5 7016              JNZ     ?C0008
                                           ; SOURCE LINE # 280
                                           ; SOURCE LINE # 282
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 27  

00F7 850083      E     MOV     DPH,?C_XBP
00FA 850082      E     MOV     DPL,?C_XBP+01H
00FD A3                INC     DPTR
00FE E0                MOVX    A,@DPTR
00FF FF                MOV     R7,A
0100 7400        R     MOV     A,#LOW USB_midiOutBuffer
0102 2F                ADD     A,R7
0103 F9                MOV     R1,A
0104 E4                CLR     A
0105 3400        R     ADDC    A,#HIGH USB_midiOutBuffer
0107 FA                MOV     R2,A
0108 7B01              MOV     R3,#01H
010A 120000      R     LCALL   _?USB_MIDI2_ProcessUsbOut
                                           ; SOURCE LINE # 284
                                           ; SOURCE LINE # 286
                                           ; SOURCE LINE # 294
010D         ?C0008:
                                           ; SOURCE LINE # 298
010D 850083      E     MOV     DPH,?C_XBP
0110 850082      E     MOV     DPL,?C_XBP+01H
0113 A3                INC     DPTR
0114 E0                MOVX    A,@DPTR
0115 FF                MOV     R7,A
0116 7400        R     MOV     A,#LOW USB_midiOutBuffer+01H
0118 2F                ADD     A,R7
0119 F9                MOV     R1,A
011A E4                CLR     A
011B 3400        R     ADDC    A,#HIGH USB_midiOutBuffer+01H
011D FA                MOV     R2,A
011E 7B01              MOV     R3,#01H
0120 850083      E     MOV     DPH,?C_XBP
0123 850082      E     MOV     DPL,?C_XBP+01H
0126 A3                INC     DPTR
0127 E0                MOVX    A,@DPTR
0128 FF                MOV     R7,A
0129 7400        R     MOV     A,#LOW USB_midiOutBuffer
012B 2F                ADD     A,R7
012C F582              MOV     DPL,A
012E E4                CLR     A
012F 3400        R     ADDC    A,#HIGH USB_midiOutBuffer
0131 F583              MOV     DPH,A
0133 E0                MOVX    A,@DPTR
0134 FF                MOV     R7,A
0135 EF                MOV     A,R7
0136 54F0              ANL     A,#0F0H
0138 FF                MOV     R7,A
0139 120000      E     LCALL   _?USB_callbackLocalMidiEvent
                                           ; SOURCE LINE # 300
013C 850083      E     MOV     DPH,?C_XBP
013F 850082      E     MOV     DPL,?C_XBP+01H
0142 A3                INC     DPTR
0143 E0                MOVX    A,@DPTR
0144 2404              ADD     A,#04H
0146 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 301
0147 020000      R     LJMP    ?C0004
                                           ; SOURCE LINE # 302
                                           ; SOURCE LINE # 308
                                           ; SOURCE LINE # 309
014A         ?C0011:
014A 900002            MOV     DPTR,#02H
014D 120000      E     LCALL   ?C?ADDXBP
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 28  

0150 22                RET     
             ; FUNCTION _?USB_MIDI_OUT_Service (END)

             ; FUNCTION _?USB_MIDI_IN_EP_Service (BEGIN)
                                           ; SOURCE LINE # 334
                                           ; SOURCE LINE # 338
0000 900000      R     MOV     DPTR,#USB_midiInPointer
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 6031              JZ      ?C0014
                                           ; SOURCE LINE # 339
                                           ; SOURCE LINE # 340
0008 900000      R     MOV     DPTR,#USB_midi_in_ep
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D 120000      E     LCALL   _?USB_GetEPState
0010 EF                MOV     A,R7
0011 B40125            CJNE    A,#01H,?C0014
                                           ; SOURCE LINE # 341
                                           ; SOURCE LINE # 346
0014 900000      R     MOV     DPTR,#USB_midiInPointer
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 7E00              MOV     R6,#00H
001B 90FFFE            MOV     DPTR,#0FFFEH
001E 120000      E     LCALL   ?C?ADDXBP
0021 EE                MOV     A,R6
0022 F0                MOVX    @DPTR,A
0023 A3                INC     DPTR
0024 EF                MOV     A,R7
0025 F0                MOVX    @DPTR,A
0026 7B01              MOV     R3,#01H
0028 7A00        R     MOV     R2,#HIGH USB_midiInBuffer
002A 7900        R     MOV     R1,#LOW USB_midiInBuffer
002C 900000      R     MOV     DPTR,#USB_midi_in_ep
002F E0                MOVX    A,@DPTR
0030 FF                MOV     R7,A
0031 120000      E     LCALL   _?USB_LoadInEP
                                           ; SOURCE LINE # 351
0034 900000      R     MOV     DPTR,#USB_midiInPointer
0037 E4                CLR     A
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 353
                                           ; SOURCE LINE # 354
                                           ; SOURCE LINE # 355
0039         ?C0014:
0039 22                RET     
             ; FUNCTION _?USB_MIDI_IN_EP_Service (END)

             ; FUNCTION _?USB_MIDI_IN_Service (BEGIN)
                                           ; SOURCE LINE # 383
0000 90FFFE            MOV     DPTR,#0FFFEH
0003 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 389
0006 850083      E     MOV     DPH,?C_XBP
0009 850082      E     MOV     DPL,?C_XBP+01H
000C E4                CLR     A
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 390
000E 850083      E     MOV     DPH,?C_XBP
0011 850082      E     MOV     DPL,?C_XBP+01H
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 29  

0014 A3                INC     DPTR
0015 E4                CLR     A
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 392
0017 900000      R     MOV     DPTR,#USB_midiInPointer
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 6003              JZ      $ + 5H
001F 020000      R     LJMP    ?C0015
                                           ; SOURCE LINE # 393
0022         ?C0018:
                                           ; SOURCE LINE # 395
                                           ; SOURCE LINE # 396
0022 900000      R     MOV     DPTR,#USB_midiInPointer
0025 E0                MOVX    A,@DPTR
0026 FF                MOV     R7,A
0027 EF                MOV     A,R7
0028 D3                SETB    C
0029 941C              SUBB    A,#01CH
002B 503E              JNC     ?C0019
                                           ; SOURCE LINE # 397
                                           ; SOURCE LINE # 399
002D 120000      R     LCALL   _?USB_MIDI1_GetEvent
0030 850083      E     MOV     DPH,?C_XBP
0033 850082      E     MOV     DPL,?C_XBP+01H
0036 EF                MOV     A,R7
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 400
0038 850083      E     MOV     DPH,?C_XBP
003B 850082      E     MOV     DPL,?C_XBP+01H
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 EF                MOV     A,R7
0041 6028              JZ      ?C0019
                                           ; SOURCE LINE # 401
                                           ; SOURCE LINE # 402
0043 90FFFF            MOV     DPTR,#0FFFFH
0046 120000      E     LCALL   ?C?ADDXBP
0049 E4                CLR     A
004A F0                MOVX    @DPTR,A
004B 900000      R     MOV     DPTR,#USB_MIDI1_Event+02H
004E E0                MOVX    A,@DPTR
004F FF                MOV     R7,A
0050 90FFFF            MOV     DPTR,#0FFFFH
0053 120000      E     LCALL   ?C?ADDXBP
0056 EF                MOV     A,R7
0057 F0                MOVX    @DPTR,A
0058 7B01              MOV     R3,#01H
005A 7A00        R     MOV     R2,#HIGH USB_MIDI1_Event+04H
005C 7900        R     MOV     R1,#LOW USB_MIDI1_Event+04H
005E 850083      E     MOV     DPH,?C_XBP
0061 850082      E     MOV     DPL,?C_XBP+01H
0064 A3                INC     DPTR
0065 A3                INC     DPTR
0066 E0                MOVX    A,@DPTR
0067 FF                MOV     R7,A
0068 120000      R     LCALL   _?USB_PrepareInBuffer
                                           ; SOURCE LINE # 404
                                           ; SOURCE LINE # 405
006B         ?C0019:
                                           ; SOURCE LINE # 408
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 30  

006B 900000      R     MOV     DPTR,#USB_midiInPointer
006E E0                MOVX    A,@DPTR
006F FF                MOV     R7,A
0070 EF                MOV     A,R7
0071 D3                SETB    C
0072 941C              SUBB    A,#01CH
0074 503F              JNC     ?C0016
                                           ; SOURCE LINE # 409
                                           ; SOURCE LINE # 411
0076 120000      R     LCALL   _?USB_MIDI2_GetEvent
0079 850083      E     MOV     DPH,?C_XBP
007C 850082      E     MOV     DPL,?C_XBP+01H
007F A3                INC     DPTR
0080 EF                MOV     A,R7
0081 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 412
0082 850083      E     MOV     DPH,?C_XBP
0085 850082      E     MOV     DPL,?C_XBP+01H
0088 A3                INC     DPTR
0089 E0                MOVX    A,@DPTR
008A FF                MOV     R7,A
008B EF                MOV     A,R7
008C 6027              JZ      ?C0016
                                           ; SOURCE LINE # 413
                                           ; SOURCE LINE # 414
008E 90FFFF            MOV     DPTR,#0FFFFH
0091 120000      E     LCALL   ?C?ADDXBP
0094 7410              MOV     A,#010H
0096 F0                MOVX    @DPTR,A
0097 900000      R     MOV     DPTR,#USB_MIDI2_Event+02H
009A E0                MOVX    A,@DPTR
009B FF                MOV     R7,A
009C 90FFFF            MOV     DPTR,#0FFFFH
009F 120000      E     LCALL   ?C?ADDXBP
00A2 EF                MOV     A,R7
00A3 F0                MOVX    @DPTR,A
00A4 7B01              MOV     R3,#01H
00A6 7A00        R     MOV     R2,#HIGH USB_MIDI2_Event+04H
00A8 7900        R     MOV     R1,#LOW USB_MIDI2_Event+04H
00AA 900003            MOV     DPTR,#03H
00AD 120000      E     LCALL   ?C?XBPOFF
00B0 E0                MOVX    A,@DPTR
00B1 FF                MOV     R7,A
00B2 120000      R     LCALL   _?USB_PrepareInBuffer
                                           ; SOURCE LINE # 416
                                           ; SOURCE LINE # 417
                                           ; SOURCE LINE # 419
00B5         ?C0016:
                                           ; SOURCE LINE # 420
00B5 900000      R     MOV     DPTR,#USB_midiInPointer
00B8 E0                MOVX    A,@DPTR
00B9 FF                MOV     R7,A
00BA EF                MOV     A,R7
00BB D3                SETB    C
00BC 941C              SUBB    A,#01CH
00BE 501D              JNC     ?C0015
00C0 850083      E     MOV     DPH,?C_XBP
00C3 850082      E     MOV     DPL,?C_XBP+01H
00C6 E0                MOVX    A,@DPTR
00C7 FF                MOV     R7,A
00C8 EF                MOV     A,R7
00C9 6003              JZ      $ + 5H
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 31  

00CB 020000      R     LJMP    ?C0018
00CE 850083      E     MOV     DPH,?C_XBP
00D1 850082      E     MOV     DPL,?C_XBP+01H
00D4 A3                INC     DPTR
00D5 E0                MOVX    A,@DPTR
00D6 FF                MOV     R7,A
00D7 EF                MOV     A,R7
00D8 6003              JZ      $ + 5H
00DA 020000      R     LJMP    ?C0018
                                           ; SOURCE LINE # 422
00DD         ?C0015:
                                           ; SOURCE LINE # 426
00DD 120000      R     LCALL   _?USB_MIDI_IN_EP_Service
                                           ; SOURCE LINE # 427
00E0 900002            MOV     DPTR,#02H
00E3 120000      E     LCALL   ?C?ADDXBP
00E6 22                RET     
             ; FUNCTION _?USB_MIDI_IN_Service (END)

             ; FUNCTION _USB_PutUsbMidiIn (BEGIN)
                                           ; SOURCE LINE # 474
0000 900000      R     MOV     DPTR,#ic
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#midiMsg
0008 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 476
                                           ; SOURCE LINE # 477
000B 900000      R     MOV     DPTR,#retError
000E E4                CLR     A
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 482
0010 9044C8            MOV     DPTR,#044C8H
0013 7402              MOV     A,#02H
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 484
0016 9044C8            MOV     DPTR,#044C8H
0019 7408              MOV     A,#08H
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 488
001C 900000      R     MOV     DPTR,#USB_midi_in_ep
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 75F00B            MOV     B,#0BH
0025 A4                MUL     AB
0026 2400        E     ADD     A,#LOW USB_EP+08H
0028 F582              MOV     DPL,A
002A E4                CLR     A
002B 3400        E     ADDC    A,#HIGH USB_EP+08H
002D F583              MOV     DPH,A
002F E0                MOVX    A,@DPTR
0030 FE                MOV     R6,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 FF                MOV     R7,A
0034 EF                MOV     A,R7
0035 24FC              ADD     A,#0FCH
0037 FF                MOV     R7,A
0038 EE                MOV     A,R6
0039 34FF              ADDC    A,#0FFH
003B FE                MOV     R6,A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 32  

003C 900000      R     MOV     DPTR,#USB_midiInPointer
003F E0                MOVX    A,@DPTR
0040 FD                MOV     R5,A
0041 7C00              MOV     R4,#00H
0043 D3                SETB    C
0044 ED                MOV     A,R5
0045 9F                SUBB    A,R7
0046 EC                MOV     A,R4
0047 9E                SUBB    A,R6
0048 4003              JC      ?C0025
                                           ; SOURCE LINE # 490
                                           ; SOURCE LINE # 491
004A 120000      R     LCALL   _?USB_MIDI_IN_EP_Service
                                           ; SOURCE LINE # 492
004D         ?C0025:
                                           ; SOURCE LINE # 494
004D 900000      R     MOV     DPTR,#USB_midi_in_ep
0050 E0                MOVX    A,@DPTR
0051 FF                MOV     R7,A
0052 EF                MOV     A,R7
0053 75F00B            MOV     B,#0BH
0056 A4                MUL     AB
0057 2400        E     ADD     A,#LOW USB_EP+08H
0059 F582              MOV     DPL,A
005B E4                CLR     A
005C 3400        E     ADDC    A,#HIGH USB_EP+08H
005E F583              MOV     DPH,A
0060 E0                MOVX    A,@DPTR
0061 FE                MOV     R6,A
0062 A3                INC     DPTR
0063 E0                MOVX    A,@DPTR
0064 FF                MOV     R7,A
0065 EF                MOV     A,R7
0066 24FC              ADD     A,#0FCH
0068 FF                MOV     R7,A
0069 EE                MOV     A,R6
006A 34FF              ADDC    A,#0FFH
006C FE                MOV     R6,A
006D 900000      R     MOV     DPTR,#USB_midiInPointer
0070 E0                MOVX    A,@DPTR
0071 FD                MOV     R5,A
0072 7C00              MOV     R4,#00H
0074 D3                SETB    C
0075 ED                MOV     A,R5
0076 9F                SUBB    A,R7
0077 EC                MOV     A,R4
0078 9E                SUBB    A,R6
0079 4003              JC      $ + 5H
007B 020000      R     LJMP    ?C0026
                                           ; SOURCE LINE # 496
                                           ; SOURCE LINE # 497
007E 900000      R     MOV     DPTR,#ic
0081 E0                MOVX    A,@DPTR
0082 FF                MOV     R7,A
0083 EF                MOV     A,R7
0084 C3                CLR     C
0085 9404              SUBB    A,#04H
0087 400B              JC      ?C0028
0089 900000      R     MOV     DPTR,#ic
008C E0                MOVX    A,@DPTR
008D FF                MOV     R7,A
008E EF                MOV     A,R7
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 33  

008F C3                CLR     C
0090 94F0              SUBB    A,#0F0H
0092 402B              JC      ?C0027
0094         ?C0028:
                                           ; SOURCE LINE # 498
                                           ; SOURCE LINE # 499
0094 900000      R     MOV     DPTR,#cable
0097 E0                MOVX    A,@DPTR
0098 FF                MOV     R7,A
0099 90FFFF            MOV     DPTR,#0FFFFH
009C 120000      E     LCALL   ?C?ADDXBP
009F EF                MOV     A,R7
00A0 F0                MOVX    @DPTR,A
00A1 900000      R     MOV     DPTR,#ic
00A4 E0                MOVX    A,@DPTR
00A5 FF                MOV     R7,A
00A6 90FFFF            MOV     DPTR,#0FFFFH
00A9 120000      E     LCALL   ?C?ADDXBP
00AC EF                MOV     A,R7
00AD F0                MOVX    @DPTR,A
00AE 900000      R     MOV     DPTR,#midiMsg
00B1 120000      E     LCALL   ?C?PLDXDATA
00B4 900000      R     MOV     DPTR,#ic
00B7 E0                MOVX    A,@DPTR
00B8 FF                MOV     R7,A
00B9 120000      R     LCALL   _?USB_PrepareInBuffer
                                           ; SOURCE LINE # 500
00BC 020000      R     LJMP    ?C0036
00BF         ?C0027:
                                           ; SOURCE LINE # 502
                                           ; SOURCE LINE # 504
00BF 900000      R     MOV     DPTR,#msgIndex
00C2 E4                CLR     A
00C3 F0                MOVX    @DPTR,A
00C4         ?C0032:
                                           ; SOURCE LINE # 507
                                           ; SOURCE LINE # 508
00C4 900000      R     MOV     DPTR,#cable
00C7 E0                MOVX    A,@DPTR
00C8 FF                MOV     R7,A
00C9 90FFFF            MOV     DPTR,#0FFFFH
00CC 120000      E     LCALL   ?C?ADDXBP
00CF EF                MOV     A,R7
00D0 F0                MOVX    @DPTR,A
00D1 90FFFF            MOV     DPTR,#0FFFFH
00D4 120000      E     LCALL   ?C?ADDXBP
00D7 7403              MOV     A,#03H
00D9 F0                MOVX    @DPTR,A
00DA 900000      R     MOV     DPTR,#midiMsg
00DD 120000      E     LCALL   ?C?PLDXDATA
00E0 900000      R     MOV     DPTR,#msgIndex
00E3 E0                MOVX    A,@DPTR
00E4 FF                MOV     R7,A
00E5 7E00              MOV     R6,#00H
00E7 E9                MOV     A,R1
00E8 2F                ADD     A,R7
00E9 F9                MOV     R1,A
00EA EA                MOV     A,R2
00EB 3E                ADDC    A,R6
00EC FA                MOV     R2,A
00ED 7FF0              MOV     R7,#0F0H
00EF 120000      R     LCALL   _?USB_PrepareInBuffer
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 34  

                                           ; SOURCE LINE # 511
00F2 900000      R     MOV     DPTR,#ic
00F5 E0                MOVX    A,@DPTR
00F6 24FD              ADD     A,#0FDH
00F8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 512
00F9 900000      R     MOV     DPTR,#msgIndex
00FC E0                MOVX    A,@DPTR
00FD 2403              ADD     A,#03H
00FF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 514
0100 900000      R     MOV     DPTR,#USB_midi_in_ep
0103 E0                MOVX    A,@DPTR
0104 FF                MOV     R7,A
0105 EF                MOV     A,R7
0106 75F00B            MOV     B,#0BH
0109 A4                MUL     AB
010A 2400        E     ADD     A,#LOW USB_EP+08H
010C F582              MOV     DPL,A
010E E4                CLR     A
010F 3400        E     ADDC    A,#HIGH USB_EP+08H
0111 F583              MOV     DPH,A
0113 E0                MOVX    A,@DPTR
0114 FE                MOV     R6,A
0115 A3                INC     DPTR
0116 E0                MOVX    A,@DPTR
0117 FF                MOV     R7,A
0118 EF                MOV     A,R7
0119 24FC              ADD     A,#0FCH
011B FF                MOV     R7,A
011C EE                MOV     A,R6
011D 34FF              ADDC    A,#0FFH
011F FE                MOV     R6,A
0120 900000      R     MOV     DPTR,#USB_midiInPointer
0123 E0                MOVX    A,@DPTR
0124 FD                MOV     R5,A
0125 7C00              MOV     R4,#00H
0127 D3                SETB    C
0128 ED                MOV     A,R5
0129 9F                SUBB    A,R7
012A EC                MOV     A,R4
012B 9E                SUBB    A,R6
012C 4039              JC      ?C0030
                                           ; SOURCE LINE # 516
                                           ; SOURCE LINE # 517
012E 120000      R     LCALL   _?USB_MIDI_IN_EP_Service
                                           ; SOURCE LINE # 519
0131 900000      R     MOV     DPTR,#USB_midi_in_ep
0134 E0                MOVX    A,@DPTR
0135 FF                MOV     R7,A
0136 EF                MOV     A,R7
0137 75F00B            MOV     B,#0BH
013A A4                MUL     AB
013B 2400        E     ADD     A,#LOW USB_EP+08H
013D F582              MOV     DPL,A
013F E4                CLR     A
0140 3400        E     ADDC    A,#HIGH USB_EP+08H
0142 F583              MOV     DPH,A
0144 E0                MOVX    A,@DPTR
0145 FE                MOV     R6,A
0146 A3                INC     DPTR
0147 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 35  

0148 FF                MOV     R7,A
0149 EF                MOV     A,R7
014A 24FC              ADD     A,#0FCH
014C FF                MOV     R7,A
014D EE                MOV     A,R6
014E 34FF              ADDC    A,#0FFH
0150 FE                MOV     R6,A
0151 900000      R     MOV     DPTR,#USB_midiInPointer
0154 E0                MOVX    A,@DPTR
0155 FD                MOV     R5,A
0156 7C00              MOV     R4,#00H
0158 D3                SETB    C
0159 ED                MOV     A,R5
015A 9F                SUBB    A,R7
015B EC                MOV     A,R4
015C 9E                SUBB    A,R6
015D 4008              JC      ?C0030
                                           ; SOURCE LINE # 521
                                           ; SOURCE LINE # 523
015F 900000      R     MOV     DPTR,#retError
0162 7401              MOV     A,#01H
0164 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 524
0165 800E              SJMP    ?C0031
                                           ; SOURCE LINE # 525
                                           ; SOURCE LINE # 526
                                           ; SOURCE LINE # 527
0167         ?C0030:
                                           ; SOURCE LINE # 528
0167 900000      R     MOV     DPTR,#ic
016A E0                MOVX    A,@DPTR
016B FF                MOV     R7,A
016C EF                MOV     A,R7
016D D3                SETB    C
016E 9403              SUBB    A,#03H
0170 4003              JC      $ + 5H
0172 020000      R     LJMP    ?C0032
0175         ?C0031:
                                           ; SOURCE LINE # 530
0175 900000      R     MOV     DPTR,#retError
0178 E0                MOVX    A,@DPTR
0179 FF                MOV     R7,A
017A EF                MOV     A,R7
017B 702D              JNZ     ?C0036
                                           ; SOURCE LINE # 531
                                           ; SOURCE LINE # 532
017D 900000      R     MOV     DPTR,#cable
0180 E0                MOVX    A,@DPTR
0181 FF                MOV     R7,A
0182 90FFFF            MOV     DPTR,#0FFFFH
0185 120000      E     LCALL   ?C?ADDXBP
0188 EF                MOV     A,R7
0189 F0                MOVX    @DPTR,A
018A 900000      R     MOV     DPTR,#ic
018D E0                MOVX    A,@DPTR
018E FF                MOV     R7,A
018F 90FFFF            MOV     DPTR,#0FFFFH
0192 120000      E     LCALL   ?C?ADDXBP
0195 EF                MOV     A,R7
0196 F0                MOVX    @DPTR,A
0197 900000      R     MOV     DPTR,#midiMsg
019A 120000      E     LCALL   ?C?PLDXDATA
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 36  

019D 7FF7              MOV     R7,#0F7H
019F 120000      R     LCALL   _?USB_PrepareInBuffer
                                           ; SOURCE LINE # 533
                                           ; SOURCE LINE # 534
                                           ; SOURCE LINE # 535
01A2 8006              SJMP    ?C0036
01A4         ?C0026:
                                           ; SOURCE LINE # 537
                                           ; SOURCE LINE # 539
01A4 900000      R     MOV     DPTR,#retError
01A7 7401              MOV     A,#01H
01A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 540
01AA         ?C0036:
                                           ; SOURCE LINE # 543
01AA 9044C0            MOV     DPTR,#044C0H
01AD 7402              MOV     A,#02H
01AF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 545
01B0 9044C0            MOV     DPTR,#044C0H
01B3 7408              MOV     A,#08H
01B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 549
01B6 900000      R     MOV     DPTR,#retError
01B9 E0                MOVX    A,@DPTR
01BA FF                MOV     R7,A
                                           ; SOURCE LINE # 550
01BB         ?C0037:
01BB 22                RET     
             ; FUNCTION _USB_PutUsbMidiIn (END)

             ; FUNCTION _?USB_PrepareInBuffer (BEGIN)
                                           ; SOURCE LINE # 585
0000 90FFFD            MOV     DPTR,#0FFFDH
0003 120000      E     LCALL   ?C?ADDXBP
0006 120000      E     LCALL   ?C?PSTXDATA
0009 90FFFF            MOV     DPTR,#0FFFFH
000C 120000      E     LCALL   ?C?ADDXBP
000F EF                MOV     A,R7
0010 F0                MOVX    @DPTR,A
0011 90FFFE            MOV     DPTR,#0FFFEH
0014 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 586
                                           ; SOURCE LINE # 591
0017 900003            MOV     DPTR,#03H
001A 120000      E     LCALL   ?C?XBPOFF
001D 120000      E     LCALL   ?C?PLDXDATA
0020 120000      E     LCALL   ?C?CLDPTR
0023 FF                MOV     R7,A
0024 850083      E     MOV     DPH,?C_XBP
0027 850082      E     MOV     DPL,?C_XBP+01H
002A EF                MOV     A,R7
002B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 592
002C 900003            MOV     DPTR,#03H
002F 120000      E     LCALL   ?C?XBPOFF
0032 120000      E     LCALL   ?C?PLDXDATA
0035 E9                MOV     A,R1
0036 2401              ADD     A,#01H
0038 F9                MOV     R1,A
0039 EA                MOV     A,R2
003A 3400              ADDC    A,#00H
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 37  

003C FA                MOV     R2,A
003D 120000      E     LCALL   ?C?CLDPTR
0040 FF                MOV     R7,A
0041 850083      E     MOV     DPH,?C_XBP
0044 850082      E     MOV     DPL,?C_XBP+01H
0047 A3                INC     DPTR
0048 EF                MOV     A,R7
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 594
004A 850083      E     MOV     DPH,?C_XBP
004D 850082      E     MOV     DPL,?C_XBP+01H
0050 A3                INC     DPTR
0051 A3                INC     DPTR
0052 E0                MOVX    A,@DPTR
0053 FF                MOV     R7,A
0054 EF                MOV     A,R7
0055 C3                CLR     C
0056 94F8              SUBB    A,#0F8H
0058 4075              JC      ?C0038
                                           ; SOURCE LINE # 595
                                           ; SOURCE LINE # 596
005A 900007            MOV     DPTR,#07H
005D 120000      E     LCALL   ?C?XBPOFF
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 EF                MOV     A,R7
0063 440F              ORL     A,#0FH
0065 FF                MOV     R7,A
0066 900000      R     MOV     DPTR,#USB_midiInPointer
0069 E0                MOVX    A,@DPTR
006A FE                MOV     R6,A
006B 7400        R     MOV     A,#LOW USB_midiInBuffer
006D 2E                ADD     A,R6
006E F582              MOV     DPL,A
0070 E4                CLR     A
0071 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0073 F583              MOV     DPH,A
0075 EF                MOV     A,R7
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 597
0077 900000      R     MOV     DPTR,#USB_midiInPointer
007A E0                MOVX    A,@DPTR
007B 04                INC     A
007C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 598
007D 850083      E     MOV     DPH,?C_XBP
0080 850082      E     MOV     DPL,?C_XBP+01H
0083 A3                INC     DPTR
0084 A3                INC     DPTR
0085 E0                MOVX    A,@DPTR
0086 FF                MOV     R7,A
0087 900000      R     MOV     DPTR,#USB_midiInPointer
008A E0                MOVX    A,@DPTR
008B FE                MOV     R6,A
008C 7400        R     MOV     A,#LOW USB_midiInBuffer
008E 2E                ADD     A,R6
008F F582              MOV     DPL,A
0091 E4                CLR     A
0092 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0094 F583              MOV     DPH,A
0096 EF                MOV     A,R7
0097 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 38  

                                           ; SOURCE LINE # 599
0098 900000      R     MOV     DPTR,#USB_midiInPointer
009B E0                MOVX    A,@DPTR
009C 04                INC     A
009D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 600
009E 900000      R     MOV     DPTR,#USB_midiInPointer
00A1 E0                MOVX    A,@DPTR
00A2 FF                MOV     R7,A
00A3 7400        R     MOV     A,#LOW USB_midiInBuffer
00A5 2F                ADD     A,R7
00A6 F582              MOV     DPL,A
00A8 E4                CLR     A
00A9 3400        R     ADDC    A,#HIGH USB_midiInBuffer
00AB F583              MOV     DPH,A
00AD E4                CLR     A
00AE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 601
00AF 900000      R     MOV     DPTR,#USB_midiInPointer
00B2 E0                MOVX    A,@DPTR
00B3 04                INC     A
00B4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 602
00B5 900000      R     MOV     DPTR,#USB_midiInPointer
00B8 E0                MOVX    A,@DPTR
00B9 FF                MOV     R7,A
00BA 7400        R     MOV     A,#LOW USB_midiInBuffer
00BC 2F                ADD     A,R7
00BD F582              MOV     DPL,A
00BF E4                CLR     A
00C0 3400        R     ADDC    A,#HIGH USB_midiInBuffer
00C2 F583              MOV     DPH,A
00C4 E4                CLR     A
00C5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 603
00C6 900000      R     MOV     DPTR,#USB_midiInPointer
00C9 E0                MOVX    A,@DPTR
00CA 04                INC     A
00CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 604
00CC 020000      R     LJMP    ?C0061
00CF         ?C0038:
                                           ; SOURCE LINE # 605
00CF 850083      E     MOV     DPH,?C_XBP
00D2 850082      E     MOV     DPL,?C_XBP+01H
00D5 A3                INC     DPTR
00D6 A3                INC     DPTR
00D7 E0                MOVX    A,@DPTR
00D8 FF                MOV     R7,A
00D9 EF                MOV     A,R7
00DA C3                CLR     C
00DB 9404              SUBB    A,#04H
00DD 4012              JC      ?C0041
00DF 850083      E     MOV     DPH,?C_XBP
00E2 850082      E     MOV     DPL,?C_XBP+01H
00E5 A3                INC     DPTR
00E6 A3                INC     DPTR
00E7 E0                MOVX    A,@DPTR
00E8 FF                MOV     R7,A
00E9 EF                MOV     A,R7
00EA 64F0              XRL     A,#0F0H
00EC 6003              JZ      $ + 5H
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 39  

00EE 020000      R     LJMP    ?C0040
00F1         ?C0041:
                                           ; SOURCE LINE # 606
                                           ; SOURCE LINE # 607
00F1 850083      E     MOV     DPH,?C_XBP
00F4 850082      E     MOV     DPL,?C_XBP+01H
00F7 A3                INC     DPTR
00F8 A3                INC     DPTR
00F9 E0                MOVX    A,@DPTR
00FA FF                MOV     R7,A
00FB EF                MOV     A,R7
00FC B4F026            CJNE    A,#0F0H,?C0042
                                           ; SOURCE LINE # 608
                                           ; SOURCE LINE # 609
00FF 900007            MOV     DPTR,#07H
0102 120000      E     LCALL   ?C?XBPOFF
0105 E0                MOVX    A,@DPTR
0106 FF                MOV     R7,A
0107 EF                MOV     A,R7
0108 4404              ORL     A,#04H
010A FF                MOV     R7,A
010B 900000      R     MOV     DPTR,#USB_midiInPointer
010E E0                MOVX    A,@DPTR
010F FE                MOV     R6,A
0110 7400        R     MOV     A,#LOW USB_midiInBuffer
0112 2E                ADD     A,R6
0113 F582              MOV     DPL,A
0115 E4                CLR     A
0116 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0118 F583              MOV     DPH,A
011A EF                MOV     A,R7
011B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 610
011C 900000      R     MOV     DPTR,#USB_midiInPointer
011F E0                MOVX    A,@DPTR
0120 04                INC     A
0121 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 611
0122 020000      R     LJMP    ?C0043
0125         ?C0042:
                                           ; SOURCE LINE # 612
0125 850083      E     MOV     DPH,?C_XBP
0128 850082      E     MOV     DPL,?C_XBP+01H
012B E0                MOVX    A,@DPTR
012C FF                MOV     R7,A
012D EF                MOV     A,R7
012E C3                CLR     C
012F 94F0              SUBB    A,#0F0H
0131 5032              JNC     ?C0044
                                           ; SOURCE LINE # 613
                                           ; SOURCE LINE # 614
0133 850083      E     MOV     DPH,?C_XBP
0136 850082      E     MOV     DPL,?C_XBP+01H
0139 E0                MOVX    A,@DPTR
013A FF                MOV     R7,A
013B EF                MOV     A,R7
013C C4                SWAP    A
013D 540F              ANL     A,#0FH
013F FF                MOV     R7,A
0140 900007            MOV     DPTR,#07H
0143 120000      E     LCALL   ?C?XBPOFF
0146 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 40  

0147 FE                MOV     R6,A
0148 EF                MOV     A,R7
0149 4E                ORL     A,R6
014A FF                MOV     R7,A
014B 900000      R     MOV     DPTR,#USB_midiInPointer
014E E0                MOVX    A,@DPTR
014F FE                MOV     R6,A
0150 7400        R     MOV     A,#LOW USB_midiInBuffer
0152 2E                ADD     A,R6
0153 F582              MOV     DPL,A
0155 E4                CLR     A
0156 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0158 F583              MOV     DPH,A
015A EF                MOV     A,R7
015B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 615
015C 900000      R     MOV     DPTR,#USB_midiInPointer
015F E0                MOVX    A,@DPTR
0160 04                INC     A
0161 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 616
0162 020000      R     LJMP    ?C0043
0165         ?C0044:
                                           ; SOURCE LINE # 617
0165 850083      E     MOV     DPH,?C_XBP
0168 850082      E     MOV     DPL,?C_XBP+01H
016B E0                MOVX    A,@DPTR
016C FF                MOV     R7,A
016D EF                MOV     A,R7
016E B4F625            CJNE    A,#0F6H,?C0046
                                           ; SOURCE LINE # 618
                                           ; SOURCE LINE # 619
0171 900007            MOV     DPTR,#07H
0174 120000      E     LCALL   ?C?XBPOFF
0177 E0                MOVX    A,@DPTR
0178 FF                MOV     R7,A
0179 EF                MOV     A,R7
017A 4405              ORL     A,#05H
017C FF                MOV     R7,A
017D 900000      R     MOV     DPTR,#USB_midiInPointer
0180 E0                MOVX    A,@DPTR
0181 FE                MOV     R6,A
0182 7400        R     MOV     A,#LOW USB_midiInBuffer
0184 2E                ADD     A,R6
0185 F582              MOV     DPL,A
0187 E4                CLR     A
0188 3400        R     ADDC    A,#HIGH USB_midiInBuffer
018A F583              MOV     DPH,A
018C EF                MOV     A,R7
018D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 620
018E 900000      R     MOV     DPTR,#USB_midiInPointer
0191 E0                MOVX    A,@DPTR
0192 04                INC     A
0193 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 621
0194 806D              SJMP    ?C0043
0196         ?C0046:
                                           ; SOURCE LINE # 622
0196 850083      E     MOV     DPH,?C_XBP
0199 850082      E     MOV     DPL,?C_XBP+01H
019C E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 41  

019D FF                MOV     R7,A
019E EF                MOV     A,R7
019F 64F1              XRL     A,#0F1H
01A1 600C              JZ      ?C0049
01A3 850083      E     MOV     DPH,?C_XBP
01A6 850082      E     MOV     DPL,?C_XBP+01H
01A9 E0                MOVX    A,@DPTR
01AA FF                MOV     R7,A
01AB EF                MOV     A,R7
01AC B4F325            CJNE    A,#0F3H,?C0048
01AF         ?C0049:
                                           ; SOURCE LINE # 623
                                           ; SOURCE LINE # 624
01AF 900007            MOV     DPTR,#07H
01B2 120000      E     LCALL   ?C?XBPOFF
01B5 E0                MOVX    A,@DPTR
01B6 FF                MOV     R7,A
01B7 EF                MOV     A,R7
01B8 4402              ORL     A,#02H
01BA FF                MOV     R7,A
01BB 900000      R     MOV     DPTR,#USB_midiInPointer
01BE E0                MOVX    A,@DPTR
01BF FE                MOV     R6,A
01C0 7400        R     MOV     A,#LOW USB_midiInBuffer
01C2 2E                ADD     A,R6
01C3 F582              MOV     DPL,A
01C5 E4                CLR     A
01C6 3400        R     ADDC    A,#HIGH USB_midiInBuffer
01C8 F583              MOV     DPH,A
01CA EF                MOV     A,R7
01CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 625
01CC 900000      R     MOV     DPTR,#USB_midiInPointer
01CF E0                MOVX    A,@DPTR
01D0 04                INC     A
01D1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 626
01D2 802F              SJMP    ?C0043
01D4         ?C0048:
                                           ; SOURCE LINE # 627
01D4 850083      E     MOV     DPH,?C_XBP
01D7 850082      E     MOV     DPL,?C_XBP+01H
01DA E0                MOVX    A,@DPTR
01DB FF                MOV     R7,A
01DC EF                MOV     A,R7
01DD B4F223            CJNE    A,#0F2H,?C0043
                                           ; SOURCE LINE # 628
                                           ; SOURCE LINE # 629
01E0 900007            MOV     DPTR,#07H
01E3 120000      E     LCALL   ?C?XBPOFF
01E6 E0                MOVX    A,@DPTR
01E7 FF                MOV     R7,A
01E8 EF                MOV     A,R7
01E9 4403              ORL     A,#03H
01EB FF                MOV     R7,A
01EC 900000      R     MOV     DPTR,#USB_midiInPointer
01EF E0                MOVX    A,@DPTR
01F0 FE                MOV     R6,A
01F1 7400        R     MOV     A,#LOW USB_midiInBuffer
01F3 2E                ADD     A,R6
01F4 F582              MOV     DPL,A
01F6 E4                CLR     A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 42  

01F7 3400        R     ADDC    A,#HIGH USB_midiInBuffer
01F9 F583              MOV     DPH,A
01FB EF                MOV     A,R7
01FC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 630
01FD 900000      R     MOV     DPTR,#USB_midiInPointer
0200 E0                MOVX    A,@DPTR
0201 04                INC     A
0202 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 631
                                           ; SOURCE LINE # 633
                                           ; SOURCE LINE # 634
0203         ?C0043:
                                           ; SOURCE LINE # 636
0203 850083      E     MOV     DPH,?C_XBP
0206 850082      E     MOV     DPL,?C_XBP+01H
0209 E0                MOVX    A,@DPTR
020A FF                MOV     R7,A
020B 900000      R     MOV     DPTR,#USB_midiInPointer
020E E0                MOVX    A,@DPTR
020F FE                MOV     R6,A
0210 7400        R     MOV     A,#LOW USB_midiInBuffer
0212 2E                ADD     A,R6
0213 F582              MOV     DPL,A
0215 E4                CLR     A
0216 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0218 F583              MOV     DPH,A
021A EF                MOV     A,R7
021B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 637
021C 900000      R     MOV     DPTR,#USB_midiInPointer
021F E0                MOVX    A,@DPTR
0220 04                INC     A
0221 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 638
0222 850083      E     MOV     DPH,?C_XBP
0225 850082      E     MOV     DPL,?C_XBP+01H
0228 A3                INC     DPTR
0229 E0                MOVX    A,@DPTR
022A FF                MOV     R7,A
022B 900000      R     MOV     DPTR,#USB_midiInPointer
022E E0                MOVX    A,@DPTR
022F FE                MOV     R6,A
0230 7400        R     MOV     A,#LOW USB_midiInBuffer
0232 2E                ADD     A,R6
0233 F582              MOV     DPL,A
0235 E4                CLR     A
0236 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0238 F583              MOV     DPH,A
023A EF                MOV     A,R7
023B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 639
023C 900000      R     MOV     DPTR,#USB_midiInPointer
023F E0                MOVX    A,@DPTR
0240 04                INC     A
0241 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 640
0242 900003            MOV     DPTR,#03H
0245 120000      E     LCALL   ?C?XBPOFF
0248 120000      E     LCALL   ?C?PLDXDATA
024B E9                MOV     A,R1
024C 2402              ADD     A,#02H
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 43  

024E F9                MOV     R1,A
024F EA                MOV     A,R2
0250 3400              ADDC    A,#00H
0252 FA                MOV     R2,A
0253 120000      E     LCALL   ?C?CLDPTR
0256 FF                MOV     R7,A
0257 900000      R     MOV     DPTR,#USB_midiInPointer
025A E0                MOVX    A,@DPTR
025B FE                MOV     R6,A
025C 7400        R     MOV     A,#LOW USB_midiInBuffer
025E 2E                ADD     A,R6
025F F582              MOV     DPL,A
0261 E4                CLR     A
0262 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0264 F583              MOV     DPH,A
0266 EF                MOV     A,R7
0267 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 641
0268 900000      R     MOV     DPTR,#USB_midiInPointer
026B E0                MOVX    A,@DPTR
026C 04                INC     A
026D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 642
026E 020000      R     LJMP    ?C0061
0271         ?C0040:
                                           ; SOURCE LINE # 643
0271 850083      E     MOV     DPH,?C_XBP
0274 850082      E     MOV     DPL,?C_XBP+01H
0277 A3                INC     DPTR
0278 A3                INC     DPTR
0279 E0                MOVX    A,@DPTR
027A FF                MOV     R7,A
027B EF                MOV     A,R7
027C 64F7              XRL     A,#0F7H
027E 6003              JZ      $ + 5H
0280 020000      R     LJMP    ?C0061
                                           ; SOURCE LINE # 644
                                           ; SOURCE LINE # 645
0283 900006            MOV     DPTR,#06H
0286 120000      E     LCALL   ?C?XBPOFF
0289 E0                MOVX    A,@DPTR
028A FF                MOV     R7,A
028B EF                MOV     A,R7
028C 120000      E     LCALL   ?C?CCASE
028F 0000        R     DW      ?C0056
0291 00                DB      00H
0292 0000        R     DW      ?C0057
0294 01                DB      01H
0295 0000        R     DW      ?C0058
0297 02                DB      02H
0298 0000              DW      00H
029A 0000        R     DW      ?C0061
                                           ; SOURCE LINE # 646
                                           ; SOURCE LINE # 647
029C         ?C0056:
                                           ; SOURCE LINE # 648
029C 900007            MOV     DPTR,#07H
029F 120000      E     LCALL   ?C?XBPOFF
02A2 E0                MOVX    A,@DPTR
02A3 FF                MOV     R7,A
02A4 EF                MOV     A,R7
02A5 4405              ORL     A,#05H
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 44  

02A7 FF                MOV     R7,A
02A8 900000      R     MOV     DPTR,#USB_midiInPointer
02AB E0                MOVX    A,@DPTR
02AC FE                MOV     R6,A
02AD 7400        R     MOV     A,#LOW USB_midiInBuffer
02AF 2E                ADD     A,R6
02B0 F582              MOV     DPL,A
02B2 E4                CLR     A
02B3 3400        R     ADDC    A,#HIGH USB_midiInBuffer
02B5 F583              MOV     DPH,A
02B7 EF                MOV     A,R7
02B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 650
02B9 900000      R     MOV     DPTR,#USB_midiInPointer
02BC E0                MOVX    A,@DPTR
02BD 04                INC     A
02BE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 651
02BF 900000      R     MOV     DPTR,#USB_midiInPointer
02C2 E0                MOVX    A,@DPTR
02C3 FF                MOV     R7,A
02C4 7400        R     MOV     A,#LOW USB_midiInBuffer
02C6 2F                ADD     A,R7
02C7 F582              MOV     DPL,A
02C9 E4                CLR     A
02CA 3400        R     ADDC    A,#HIGH USB_midiInBuffer
02CC F583              MOV     DPH,A
02CE 74F7              MOV     A,#0F7H
02D0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 652
02D1 900000      R     MOV     DPTR,#USB_midiInPointer
02D4 E0                MOVX    A,@DPTR
02D5 04                INC     A
02D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 653
02D7 900000      R     MOV     DPTR,#USB_midiInPointer
02DA E0                MOVX    A,@DPTR
02DB FF                MOV     R7,A
02DC 7400        R     MOV     A,#LOW USB_midiInBuffer
02DE 2F                ADD     A,R7
02DF F582              MOV     DPL,A
02E1 E4                CLR     A
02E2 3400        R     ADDC    A,#HIGH USB_midiInBuffer
02E4 F583              MOV     DPH,A
02E6 E4                CLR     A
02E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 654
02E8 900000      R     MOV     DPTR,#USB_midiInPointer
02EB E0                MOVX    A,@DPTR
02EC 04                INC     A
02ED F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 655
02EE 900000      R     MOV     DPTR,#USB_midiInPointer
02F1 E0                MOVX    A,@DPTR
02F2 FF                MOV     R7,A
02F3 7400        R     MOV     A,#LOW USB_midiInBuffer
02F5 2F                ADD     A,R7
02F6 F582              MOV     DPL,A
02F8 E4                CLR     A
02F9 3400        R     ADDC    A,#HIGH USB_midiInBuffer
02FB F583              MOV     DPH,A
02FD E4                CLR     A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 45  

02FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 656
02FF 900000      R     MOV     DPTR,#USB_midiInPointer
0302 E0                MOVX    A,@DPTR
0303 04                INC     A
0304 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 657
0305 020000      R     LJMP    ?C0061
                                           ; SOURCE LINE # 658
0308         ?C0057:
                                           ; SOURCE LINE # 659
0308 900007            MOV     DPTR,#07H
030B 120000      E     LCALL   ?C?XBPOFF
030E E0                MOVX    A,@DPTR
030F FF                MOV     R7,A
0310 EF                MOV     A,R7
0311 4406              ORL     A,#06H
0313 FF                MOV     R7,A
0314 900000      R     MOV     DPTR,#USB_midiInPointer
0317 E0                MOVX    A,@DPTR
0318 FE                MOV     R6,A
0319 7400        R     MOV     A,#LOW USB_midiInBuffer
031B 2E                ADD     A,R6
031C F582              MOV     DPL,A
031E E4                CLR     A
031F 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0321 F583              MOV     DPH,A
0323 EF                MOV     A,R7
0324 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 661
0325 900000      R     MOV     DPTR,#USB_midiInPointer
0328 E0                MOVX    A,@DPTR
0329 04                INC     A
032A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 662
032B 850083      E     MOV     DPH,?C_XBP
032E 850082      E     MOV     DPL,?C_XBP+01H
0331 E0                MOVX    A,@DPTR
0332 FF                MOV     R7,A
0333 900000      R     MOV     DPTR,#USB_midiInPointer
0336 E0                MOVX    A,@DPTR
0337 FE                MOV     R6,A
0338 7400        R     MOV     A,#LOW USB_midiInBuffer
033A 2E                ADD     A,R6
033B F582              MOV     DPL,A
033D E4                CLR     A
033E 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0340 F583              MOV     DPH,A
0342 EF                MOV     A,R7
0343 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 663
0344 900000      R     MOV     DPTR,#USB_midiInPointer
0347 E0                MOVX    A,@DPTR
0348 04                INC     A
0349 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 664
034A 900000      R     MOV     DPTR,#USB_midiInPointer
034D E0                MOVX    A,@DPTR
034E FF                MOV     R7,A
034F 7400        R     MOV     A,#LOW USB_midiInBuffer
0351 2F                ADD     A,R7
0352 F582              MOV     DPL,A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 46  

0354 E4                CLR     A
0355 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0357 F583              MOV     DPH,A
0359 74F7              MOV     A,#0F7H
035B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 665
035C 900000      R     MOV     DPTR,#USB_midiInPointer
035F E0                MOVX    A,@DPTR
0360 04                INC     A
0361 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 666
0362 900000      R     MOV     DPTR,#USB_midiInPointer
0365 E0                MOVX    A,@DPTR
0366 FF                MOV     R7,A
0367 7400        R     MOV     A,#LOW USB_midiInBuffer
0369 2F                ADD     A,R7
036A F582              MOV     DPL,A
036C E4                CLR     A
036D 3400        R     ADDC    A,#HIGH USB_midiInBuffer
036F F583              MOV     DPH,A
0371 E4                CLR     A
0372 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 667
0373 900000      R     MOV     DPTR,#USB_midiInPointer
0376 E0                MOVX    A,@DPTR
0377 04                INC     A
0378 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 668
0379 807A              SJMP    ?C0061
                                           ; SOURCE LINE # 669
037B         ?C0058:
                                           ; SOURCE LINE # 670
037B 900007            MOV     DPTR,#07H
037E 120000      E     LCALL   ?C?XBPOFF
0381 E0                MOVX    A,@DPTR
0382 FF                MOV     R7,A
0383 EF                MOV     A,R7
0384 4407              ORL     A,#07H
0386 FF                MOV     R7,A
0387 900000      R     MOV     DPTR,#USB_midiInPointer
038A E0                MOVX    A,@DPTR
038B FE                MOV     R6,A
038C 7400        R     MOV     A,#LOW USB_midiInBuffer
038E 2E                ADD     A,R6
038F F582              MOV     DPL,A
0391 E4                CLR     A
0392 3400        R     ADDC    A,#HIGH USB_midiInBuffer
0394 F583              MOV     DPH,A
0396 EF                MOV     A,R7
0397 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 672
0398 900000      R     MOV     DPTR,#USB_midiInPointer
039B E0                MOVX    A,@DPTR
039C 04                INC     A
039D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 673
039E 850083      E     MOV     DPH,?C_XBP
03A1 850082      E     MOV     DPL,?C_XBP+01H
03A4 E0                MOVX    A,@DPTR
03A5 FF                MOV     R7,A
03A6 900000      R     MOV     DPTR,#USB_midiInPointer
03A9 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 47  

03AA FE                MOV     R6,A
03AB 7400        R     MOV     A,#LOW USB_midiInBuffer
03AD 2E                ADD     A,R6
03AE F582              MOV     DPL,A
03B0 E4                CLR     A
03B1 3400        R     ADDC    A,#HIGH USB_midiInBuffer
03B3 F583              MOV     DPH,A
03B5 EF                MOV     A,R7
03B6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 674
03B7 900000      R     MOV     DPTR,#USB_midiInPointer
03BA E0                MOVX    A,@DPTR
03BB 04                INC     A
03BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 675
03BD 850083      E     MOV     DPH,?C_XBP
03C0 850082      E     MOV     DPL,?C_XBP+01H
03C3 A3                INC     DPTR
03C4 E0                MOVX    A,@DPTR
03C5 FF                MOV     R7,A
03C6 900000      R     MOV     DPTR,#USB_midiInPointer
03C9 E0                MOVX    A,@DPTR
03CA FE                MOV     R6,A
03CB 7400        R     MOV     A,#LOW USB_midiInBuffer
03CD 2E                ADD     A,R6
03CE F582              MOV     DPL,A
03D0 E4                CLR     A
03D1 3400        R     ADDC    A,#HIGH USB_midiInBuffer
03D3 F583              MOV     DPH,A
03D5 EF                MOV     A,R7
03D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 676
03D7 900000      R     MOV     DPTR,#USB_midiInPointer
03DA E0                MOVX    A,@DPTR
03DB 04                INC     A
03DC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 677
03DD 900000      R     MOV     DPTR,#USB_midiInPointer
03E0 E0                MOVX    A,@DPTR
03E1 FF                MOV     R7,A
03E2 7400        R     MOV     A,#LOW USB_midiInBuffer
03E4 2F                ADD     A,R7
03E5 F582              MOV     DPL,A
03E7 E4                CLR     A
03E8 3400        R     ADDC    A,#HIGH USB_midiInBuffer
03EA F583              MOV     DPH,A
03EC 74F7              MOV     A,#0F7H
03EE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 678
03EF 900000      R     MOV     DPTR,#USB_midiInPointer
03F2 E0                MOVX    A,@DPTR
03F3 04                INC     A
03F4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 679
                                           ; SOURCE LINE # 680
                                           ; SOURCE LINE # 681
                                           ; SOURCE LINE # 682
                                           ; SOURCE LINE # 683
                                           ; SOURCE LINE # 685
                                           ; SOURCE LINE # 686
                                           ; SOURCE LINE # 687
03F5         ?C0061:
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 48  

03F5 900008            MOV     DPTR,#08H
03F8 120000      E     LCALL   ?C?ADDXBP
03FB 22                RET     
             ; FUNCTION _?USB_PrepareInBuffer (END)

             ; FUNCTION USB_MIDI_InitInterface (BEGIN)
                                           ; SOURCE LINE # 711
                                           ; SOURCE LINE # 712
                                           ; SOURCE LINE # 713
0000 900000      R     MOV     DPTR,#USB_MIDI1_Event
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 714
0005 900000      R     MOV     DPTR,#USB_MIDI1_Event+01H
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 715
000A 900000      R     MOV     DPTR,#USB_MIDI1_Event+02H
000D E4                CLR     A
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 716
000F 900000      R     MOV     DPTR,#USB_MIDI1_Event+03H
0012 E4                CLR     A
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 717
0014 900000      R     MOV     DPTR,#USB_MIDI1_TxRunStat
0017 E4                CLR     A
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 718
0019 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
001C E4                CLR     A
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 721
001E 120000      E     LCALL   MIDI1_UART_Start
                                           ; SOURCE LINE # 724
0021 7D04              MOV     R5,#04H
0023 7F02              MOV     R7,#02H
0025 120000      E     LCALL   _CyIntSetPriority
                                           ; SOURCE LINE # 725
0028 7D02              MOV     R5,#02H
002A 7F01              MOV     R7,#01H
002C 120000      E     LCALL   _CyIntSetPriority
                                           ; SOURCE LINE # 728
002F 900000      R     MOV     DPTR,#USB_MIDI2_Event
0032 E4                CLR     A
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 729
0034 900000      R     MOV     DPTR,#USB_MIDI2_Event+01H
0037 E4                CLR     A
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 730
0039 900000      R     MOV     DPTR,#USB_MIDI2_Event+02H
003C E4                CLR     A
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 731
003E 900000      R     MOV     DPTR,#USB_MIDI2_Event+03H
0041 E4                CLR     A
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 732
0043 900000      R     MOV     DPTR,#USB_MIDI2_TxRunStat
0046 E4                CLR     A
0047 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 49  

                                           ; SOURCE LINE # 733
0048 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
004B E4                CLR     A
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 736
004D 120000      E     LCALL   MIDI2_UART_Start
                                           ; SOURCE LINE # 739
0050 7D04              MOV     R5,#04H
0052 7F04              MOV     R7,#04H
0054 120000      E     LCALL   _CyIntSetPriority
                                           ; SOURCE LINE # 740
0057 7D02              MOV     R5,#02H
0059 7F03              MOV     R7,#03H
005B 120000      E     LCALL   _CyIntSetPriority
                                           ; SOURCE LINE # 750
005E 22                RET     
             ; FUNCTION USB_MIDI_InitInterface (END)

             ; FUNCTION _?USB_ProcessMidiIn (BEGIN)
                                           ; SOURCE LINE # 770
0000 90FFFD            MOV     DPTR,#0FFFDH
0003 120000      E     LCALL   ?C?ADDXBP
0006 120000      E     LCALL   ?C?PSTXDATA
0009 90FFFF            MOV     DPTR,#0FFFFH
000C 120000      E     LCALL   ?C?ADDXBP
000F EF                MOV     A,R7
0010 F0                MOVX    @DPTR,A
0011 90FFFF            MOV     DPTR,#0FFFFH
0014 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 771
                                           ; SOURCE LINE # 773
0017 850083      E     MOV     DPH,?C_XBP
001A 850082      E     MOV     DPL,?C_XBP+01H
001D E4                CLR     A
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 778
001F 850083      E     MOV     DPH,?C_XBP
0022 850082      E     MOV     DPL,?C_XBP+01H
0025 A3                INC     DPTR
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 EF                MOV     A,R7
0029 5480              ANL     A,#080H
002B FF                MOV     R7,A
002C 7E00              MOV     R6,#00H
002E EF                MOV     A,R7
002F 4E                ORL     A,R6
0030 7003              JNZ     $ + 5H
0032 020000      R     LJMP    ?C0063
                                           ; SOURCE LINE # 779
                                           ; SOURCE LINE # 780
0035 850083      E     MOV     DPH,?C_XBP
0038 850082      E     MOV     DPL,?C_XBP+01H
003B A3                INC     DPTR
003C E0                MOVX    A,@DPTR
003D FF                MOV     R7,A
003E EF                MOV     A,R7
003F 54F0              ANL     A,#0F0H
0041 FF                MOV     R7,A
0042 7E00              MOV     R6,#00H
0044 EF                MOV     A,R7
0045 64F0              XRL     A,#0F0H
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 50  

0047 4E                ORL     A,R6
0048 6003              JZ      $ + 5H
004A 020000      R     LJMP    ?C0064
                                           ; SOURCE LINE # 781
                                           ; SOURCE LINE # 782
004D 850083      E     MOV     DPH,?C_XBP
0050 850082      E     MOV     DPL,?C_XBP+01H
0053 A3                INC     DPTR
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 EF                MOV     A,R7
0057 5408              ANL     A,#08H
0059 FF                MOV     R7,A
005A 7E00              MOV     R6,#00H
005C EF                MOV     A,R7
005D 4E                ORL     A,R6
005E 6014              JZ      ?C0065
                                           ; SOURCE LINE # 783
                                           ; SOURCE LINE # 784
0060 850083      E     MOV     DPH,?C_XBP
0063 850082      E     MOV     DPL,?C_XBP+01H
0066 A3                INC     DPTR
0067 E0                MOVX    A,@DPTR
0068 FF                MOV     R7,A
0069 850083      E     MOV     DPH,?C_XBP
006C 850082      E     MOV     DPL,?C_XBP+01H
006F EF                MOV     A,R7
0070 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 785
0071 020000      R     LJMP    ?C0085
0074         ?C0065:
                                           ; SOURCE LINE # 787
                                           ; SOURCE LINE # 788
0074 850083      E     MOV     DPH,?C_XBP
0077 850082      E     MOV     DPL,?C_XBP+01H
007A A3                INC     DPTR
007B E0                MOVX    A,@DPTR
007C FF                MOV     R7,A
007D EF                MOV     A,R7
007E 120000      E     LCALL   ?C?CCASE
0081 0000        R     DW      ?C0068
0083 F0                DB      0F0H
0084 0000        R     DW      ?C0072
0086 F1                DB      0F1H
0087 0000        R     DW      ?C0070
0089 F2                DB      0F2H
008A 0000        R     DW      ?C0071
008C F3                DB      0F3H
008D 0000        R     DW      ?C0073
008F F6                DB      0F6H
0090 0000        R     DW      ?C0069
0092 F7                DB      0F7H
0093 0000              DW      00H
0095 0000        R     DW      ?C0085
                                           ; SOURCE LINE # 789
                                           ; SOURCE LINE # 790
0097         ?C0068:
                                           ; SOURCE LINE # 791
0097 850083      E     MOV     DPH,?C_XBP
009A 850082      E     MOV     DPL,?C_XBP+01H
009D A3                INC     DPTR
009E A3                INC     DPTR
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 51  

009F 120000      E     LCALL   ?C?PLDXDATA
00A2 E9                MOV     A,R1
00A3 2404              ADD     A,#04H
00A5 F9                MOV     R1,A
00A6 EA                MOV     A,R2
00A7 3400              ADDC    A,#00H
00A9 FA                MOV     R2,A
00AA 74F0              MOV     A,#0F0H
00AC 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 792
00AF 850083      E     MOV     DPH,?C_XBP
00B2 850082      E     MOV     DPL,?C_XBP+01H
00B5 A3                INC     DPTR
00B6 A3                INC     DPTR
00B7 120000      E     LCALL   ?C?PLDXDATA
00BA E9                MOV     A,R1
00BB 2403              ADD     A,#03H
00BD F9                MOV     R1,A
00BE EA                MOV     A,R2
00BF 3400              ADDC    A,#00H
00C1 FA                MOV     R2,A
00C2 74F0              MOV     A,#0F0H
00C4 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 793
00C7 850083      E     MOV     DPH,?C_XBP
00CA 850082      E     MOV     DPL,?C_XBP+01H
00CD A3                INC     DPTR
00CE A3                INC     DPTR
00CF 120000      E     LCALL   ?C?PLDXDATA
00D2 E9                MOV     A,R1
00D3 2401              ADD     A,#01H
00D5 F9                MOV     R1,A
00D6 EA                MOV     A,R2
00D7 3400              ADDC    A,#00H
00D9 FA                MOV     R2,A
00DA 7401              MOV     A,#01H
00DC 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 794
00DF 850083      E     MOV     DPH,?C_XBP
00E2 850082      E     MOV     DPL,?C_XBP+01H
00E5 A3                INC     DPTR
00E6 A3                INC     DPTR
00E7 120000      E     LCALL   ?C?PLDXDATA
00EA 7403              MOV     A,#03H
00EC 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 795
00EF 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 796
00F2         ?C0069:
                                           ; SOURCE LINE # 797
00F2 850083      E     MOV     DPH,?C_XBP
00F5 850082      E     MOV     DPL,?C_XBP+01H
00F8 A3                INC     DPTR
00F9 A3                INC     DPTR
00FA 120000      E     LCALL   ?C?PLDXDATA
00FD E9                MOV     A,R1
00FE 2403              ADD     A,#03H
0100 F9                MOV     R1,A
0101 EA                MOV     A,R2
0102 3400              ADDC    A,#00H
0104 FA                MOV     R2,A
0105 E4                CLR     A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 52  

0106 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 798
0109 850083      E     MOV     DPH,?C_XBP
010C 850082      E     MOV     DPL,?C_XBP+01H
010F A3                INC     DPTR
0110 A3                INC     DPTR
0111 120000      E     LCALL   ?C?PLDXDATA
0114 E9                MOV     A,R1
0115 2401              ADD     A,#01H
0117 F9                MOV     R1,A
0118 EA                MOV     A,R2
0119 3400              ADDC    A,#00H
011B FA                MOV     R2,A
011C 120000      E     LCALL   ?C?CLDPTR
011F FF                MOV     R7,A
0120 850083      E     MOV     DPH,?C_XBP
0123 850082      E     MOV     DPL,?C_XBP+01H
0126 A3                INC     DPTR
0127 A3                INC     DPTR
0128 120000      E     LCALL   ?C?PLDXDATA
012B E9                MOV     A,R1
012C 2402              ADD     A,#02H
012E F9                MOV     R1,A
012F EA                MOV     A,R2
0130 3400              ADDC    A,#00H
0132 FA                MOV     R2,A
0133 EF                MOV     A,R7
0134 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 799
0137 850083      E     MOV     DPH,?C_XBP
013A 850082      E     MOV     DPL,?C_XBP+01H
013D A3                INC     DPTR
013E A3                INC     DPTR
013F 120000      E     LCALL   ?C?PLDXDATA
0142 E9                MOV     A,R1
0143 2401              ADD     A,#01H
0145 F9                MOV     R1,A
0146 EA                MOV     A,R2
0147 3400              ADDC    A,#00H
0149 FA                MOV     R2,A
014A E4                CLR     A
014B 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 800
014E 850083      E     MOV     DPH,?C_XBP
0151 850082      E     MOV     DPL,?C_XBP+01H
0154 74F7              MOV     A,#0F7H
0156 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 801
0157 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 802
015A         ?C0070:
                                           ; SOURCE LINE # 803
015A 850083      E     MOV     DPH,?C_XBP
015D 850082      E     MOV     DPL,?C_XBP+01H
0160 A3                INC     DPTR
0161 A3                INC     DPTR
0162 120000      E     LCALL   ?C?PLDXDATA
0165 E9                MOV     A,R1
0166 2404              ADD     A,#04H
0168 F9                MOV     R1,A
0169 EA                MOV     A,R2
016A 3400              ADDC    A,#00H
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 53  

016C FA                MOV     R2,A
016D 74F2              MOV     A,#0F2H
016F 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 804
0172 850083      E     MOV     DPH,?C_XBP
0175 850082      E     MOV     DPL,?C_XBP+01H
0178 A3                INC     DPTR
0179 A3                INC     DPTR
017A 120000      E     LCALL   ?C?PLDXDATA
017D E9                MOV     A,R1
017E 2403              ADD     A,#03H
0180 F9                MOV     R1,A
0181 EA                MOV     A,R2
0182 3400              ADDC    A,#00H
0184 FA                MOV     R2,A
0185 E4                CLR     A
0186 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 805
0189 850083      E     MOV     DPH,?C_XBP
018C 850082      E     MOV     DPL,?C_XBP+01H
018F A3                INC     DPTR
0190 A3                INC     DPTR
0191 120000      E     LCALL   ?C?PLDXDATA
0194 E9                MOV     A,R1
0195 2401              ADD     A,#01H
0197 F9                MOV     R1,A
0198 EA                MOV     A,R2
0199 3400              ADDC    A,#00H
019B FA                MOV     R2,A
019C 7401              MOV     A,#01H
019E 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 806
01A1 850083      E     MOV     DPH,?C_XBP
01A4 850082      E     MOV     DPL,?C_XBP+01H
01A7 A3                INC     DPTR
01A8 A3                INC     DPTR
01A9 120000      E     LCALL   ?C?PLDXDATA
01AC 7403              MOV     A,#03H
01AE 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 807
01B1 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 808
01B4         ?C0071:
                                           ; SOURCE LINE # 809
01B4 850083      E     MOV     DPH,?C_XBP
01B7 850082      E     MOV     DPL,?C_XBP+01H
01BA A3                INC     DPTR
01BB A3                INC     DPTR
01BC 120000      E     LCALL   ?C?PLDXDATA
01BF E9                MOV     A,R1
01C0 2404              ADD     A,#04H
01C2 F9                MOV     R1,A
01C3 EA                MOV     A,R2
01C4 3400              ADDC    A,#00H
01C6 FA                MOV     R2,A
01C7 74F3              MOV     A,#0F3H
01C9 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 810
01CC 850083      E     MOV     DPH,?C_XBP
01CF 850082      E     MOV     DPL,?C_XBP+01H
01D2 A3                INC     DPTR
01D3 A3                INC     DPTR
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 54  

01D4 120000      E     LCALL   ?C?PLDXDATA
01D7 E9                MOV     A,R1
01D8 2403              ADD     A,#03H
01DA F9                MOV     R1,A
01DB EA                MOV     A,R2
01DC 3400              ADDC    A,#00H
01DE FA                MOV     R2,A
01DF E4                CLR     A
01E0 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 811
01E3 850083      E     MOV     DPH,?C_XBP
01E6 850082      E     MOV     DPL,?C_XBP+01H
01E9 A3                INC     DPTR
01EA A3                INC     DPTR
01EB 120000      E     LCALL   ?C?PLDXDATA
01EE E9                MOV     A,R1
01EF 2401              ADD     A,#01H
01F1 F9                MOV     R1,A
01F2 EA                MOV     A,R2
01F3 3400              ADDC    A,#00H
01F5 FA                MOV     R2,A
01F6 7401              MOV     A,#01H
01F8 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 812
01FB 850083      E     MOV     DPH,?C_XBP
01FE 850082      E     MOV     DPL,?C_XBP+01H
0201 A3                INC     DPTR
0202 A3                INC     DPTR
0203 120000      E     LCALL   ?C?PLDXDATA
0206 7402              MOV     A,#02H
0208 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 813
020B 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 814
020E         ?C0072:
                                           ; SOURCE LINE # 815
020E 850083      E     MOV     DPH,?C_XBP
0211 850082      E     MOV     DPL,?C_XBP+01H
0214 A3                INC     DPTR
0215 A3                INC     DPTR
0216 120000      E     LCALL   ?C?PLDXDATA
0219 E9                MOV     A,R1
021A 2404              ADD     A,#04H
021C F9                MOV     R1,A
021D EA                MOV     A,R2
021E 3400              ADDC    A,#00H
0220 FA                MOV     R2,A
0221 74F1              MOV     A,#0F1H
0223 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 816
0226 850083      E     MOV     DPH,?C_XBP
0229 850082      E     MOV     DPL,?C_XBP+01H
022C A3                INC     DPTR
022D A3                INC     DPTR
022E 120000      E     LCALL   ?C?PLDXDATA
0231 E9                MOV     A,R1
0232 2403              ADD     A,#03H
0234 F9                MOV     R1,A
0235 EA                MOV     A,R2
0236 3400              ADDC    A,#00H
0238 FA                MOV     R2,A
0239 E4                CLR     A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 55  

023A 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 817
023D 850083      E     MOV     DPH,?C_XBP
0240 850082      E     MOV     DPL,?C_XBP+01H
0243 A3                INC     DPTR
0244 A3                INC     DPTR
0245 120000      E     LCALL   ?C?PLDXDATA
0248 E9                MOV     A,R1
0249 2401              ADD     A,#01H
024B F9                MOV     R1,A
024C EA                MOV     A,R2
024D 3400              ADDC    A,#00H
024F FA                MOV     R2,A
0250 7401              MOV     A,#01H
0252 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 818
0255 850083      E     MOV     DPH,?C_XBP
0258 850082      E     MOV     DPL,?C_XBP+01H
025B A3                INC     DPTR
025C A3                INC     DPTR
025D 120000      E     LCALL   ?C?PLDXDATA
0260 7402              MOV     A,#02H
0262 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 819
0265 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 820
0268         ?C0073:
                                           ; SOURCE LINE # 821
0268 850083      E     MOV     DPH,?C_XBP
026B 850082      E     MOV     DPL,?C_XBP+01H
026E A3                INC     DPTR
026F A3                INC     DPTR
0270 120000      E     LCALL   ?C?PLDXDATA
0273 E9                MOV     A,R1
0274 2404              ADD     A,#04H
0276 F9                MOV     R1,A
0277 EA                MOV     A,R2
0278 3400              ADDC    A,#00H
027A FA                MOV     R2,A
027B 74F6              MOV     A,#0F6H
027D 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 822
0280 850083      E     MOV     DPH,?C_XBP
0283 850082      E     MOV     DPL,?C_XBP+01H
0286 A3                INC     DPTR
0287 A3                INC     DPTR
0288 120000      E     LCALL   ?C?PLDXDATA
028B E9                MOV     A,R1
028C 2403              ADD     A,#03H
028E F9                MOV     R1,A
028F EA                MOV     A,R2
0290 3400              ADDC    A,#00H
0292 FA                MOV     R2,A
0293 E4                CLR     A
0294 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 823
0297 850083      E     MOV     DPH,?C_XBP
029A 850082      E     MOV     DPL,?C_XBP+01H
029D A3                INC     DPTR
029E A3                INC     DPTR
029F 120000      E     LCALL   ?C?PLDXDATA
02A2 E9                MOV     A,R1
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 56  

02A3 2402              ADD     A,#02H
02A5 F9                MOV     R1,A
02A6 EA                MOV     A,R2
02A7 3400              ADDC    A,#00H
02A9 FA                MOV     R2,A
02AA 7401              MOV     A,#01H
02AC 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 824
02AF 850083      E     MOV     DPH,?C_XBP
02B2 850082      E     MOV     DPL,?C_XBP+01H
02B5 A3                INC     DPTR
02B6 A3                INC     DPTR
02B7 120000      E     LCALL   ?C?PLDXDATA
02BA E9                MOV     A,R1
02BB 2401              ADD     A,#01H
02BD F9                MOV     R1,A
02BE EA                MOV     A,R2
02BF 3400              ADDC    A,#00H
02C1 FA                MOV     R2,A
02C2 E4                CLR     A
02C3 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 825
02C6 850083      E     MOV     DPH,?C_XBP
02C9 850082      E     MOV     DPL,?C_XBP+01H
02CC A3                INC     DPTR
02CD A3                INC     DPTR
02CE 120000      E     LCALL   ?C?PLDXDATA
02D1 E9                MOV     A,R1
02D2 2402              ADD     A,#02H
02D4 F9                MOV     R1,A
02D5 EA                MOV     A,R2
02D6 3400              ADDC    A,#00H
02D8 FA                MOV     R2,A
02D9 120000      E     LCALL   ?C?CLDPTR
02DC FF                MOV     R7,A
02DD 850083      E     MOV     DPH,?C_XBP
02E0 850082      E     MOV     DPL,?C_XBP+01H
02E3 EF                MOV     A,R7
02E4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 826
02E5 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 827
                                           ; SOURCE LINE # 828
                                           ; SOURCE LINE # 829
                                           ; SOURCE LINE # 830
                                           ; SOURCE LINE # 831
02E8 020000      R     LJMP    ?C0085
02EB         ?C0064:
                                           ; SOURCE LINE # 833
                                           ; SOURCE LINE # 834
02EB 850083      E     MOV     DPH,?C_XBP
02EE 850082      E     MOV     DPL,?C_XBP+01H
02F1 A3                INC     DPTR
02F2 E0                MOVX    A,@DPTR
02F3 FF                MOV     R7,A
02F4 850083      E     MOV     DPH,?C_XBP
02F7 850082      E     MOV     DPL,?C_XBP+01H
02FA A3                INC     DPTR
02FB A3                INC     DPTR
02FC 120000      E     LCALL   ?C?PLDXDATA
02FF E9                MOV     A,R1
0300 2404              ADD     A,#04H
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 57  

0302 F9                MOV     R1,A
0303 EA                MOV     A,R2
0304 3400              ADDC    A,#00H
0306 FA                MOV     R2,A
0307 EF                MOV     A,R7
0308 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 835
030B 850083      E     MOV     DPH,?C_XBP
030E 850082      E     MOV     DPL,?C_XBP+01H
0311 A3                INC     DPTR
0312 E0                MOVX    A,@DPTR
0313 FF                MOV     R7,A
0314 850083      E     MOV     DPH,?C_XBP
0317 850082      E     MOV     DPL,?C_XBP+01H
031A A3                INC     DPTR
031B A3                INC     DPTR
031C 120000      E     LCALL   ?C?PLDXDATA
031F E9                MOV     A,R1
0320 2403              ADD     A,#03H
0322 F9                MOV     R1,A
0323 EA                MOV     A,R2
0324 3400              ADDC    A,#00H
0326 FA                MOV     R2,A
0327 EF                MOV     A,R7
0328 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 836
032B 850083      E     MOV     DPH,?C_XBP
032E 850082      E     MOV     DPL,?C_XBP+01H
0331 A3                INC     DPTR
0332 A3                INC     DPTR
0333 120000      E     LCALL   ?C?PLDXDATA
0336 E9                MOV     A,R1
0337 2401              ADD     A,#01H
0339 F9                MOV     R1,A
033A EA                MOV     A,R2
033B 3400              ADDC    A,#00H
033D FA                MOV     R2,A
033E 7401              MOV     A,#01H
0340 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 837
0343 850083      E     MOV     DPH,?C_XBP
0346 850082      E     MOV     DPL,?C_XBP+01H
0349 A3                INC     DPTR
034A E0                MOVX    A,@DPTR
034B FF                MOV     R7,A
034C EF                MOV     A,R7
034D 54F0              ANL     A,#0F0H
034F FF                MOV     R7,A
0350 EF                MOV     A,R7
0351 120000      E     LCALL   ?C?CCASE
0354 0000        R     DW      ?C0081
0356 80                DB      080H
0357 0000        R     DW      ?C0081
0359 90                DB      090H
035A 0000        R     DW      ?C0081
035C A0                DB      0A0H
035D 0000        R     DW      ?C0081
035F B0                DB      0B0H
0360 0000        R     DW      ?C0083
0362 C0                DB      0C0H
0363 0000        R     DW      ?C0083
0365 D0                DB      0D0H
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 58  

0366 0000        R     DW      ?C0081
0368 E0                DB      0E0H
0369 0000              DW      00H
036B 0000        R     DW      ?C0084
                                           ; SOURCE LINE # 838
                                           ; SOURCE LINE # 839
                                           ; SOURCE LINE # 840
                                           ; SOURCE LINE # 841
                                           ; SOURCE LINE # 842
                                           ; SOURCE LINE # 843
036D         ?C0081:
                                           ; SOURCE LINE # 844
036D 850083      E     MOV     DPH,?C_XBP
0370 850082      E     MOV     DPL,?C_XBP+01H
0373 A3                INC     DPTR
0374 A3                INC     DPTR
0375 120000      E     LCALL   ?C?PLDXDATA
0378 7403              MOV     A,#03H
037A 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 845
037D 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 846
                                           ; SOURCE LINE # 847
0380         ?C0083:
                                           ; SOURCE LINE # 848
0380 850083      E     MOV     DPH,?C_XBP
0383 850082      E     MOV     DPL,?C_XBP+01H
0386 A3                INC     DPTR
0387 A3                INC     DPTR
0388 120000      E     LCALL   ?C?PLDXDATA
038B 7402              MOV     A,#02H
038D 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 849
0390 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 850
0393         ?C0084:
                                           ; SOURCE LINE # 851
0393 850083      E     MOV     DPH,?C_XBP
0396 850082      E     MOV     DPL,?C_XBP+01H
0399 A3                INC     DPTR
039A A3                INC     DPTR
039B 120000      E     LCALL   ?C?PLDXDATA
039E E9                MOV     A,R1
039F 2403              ADD     A,#03H
03A1 F9                MOV     R1,A
03A2 EA                MOV     A,R2
03A3 3400              ADDC    A,#00H
03A5 FA                MOV     R2,A
03A6 E4                CLR     A
03A7 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 852
03AA 850083      E     MOV     DPH,?C_XBP
03AD 850082      E     MOV     DPL,?C_XBP+01H
03B0 A3                INC     DPTR
03B1 A3                INC     DPTR
03B2 120000      E     LCALL   ?C?PLDXDATA
03B5 E9                MOV     A,R1
03B6 2401              ADD     A,#01H
03B8 F9                MOV     R1,A
03B9 EA                MOV     A,R2
03BA 3400              ADDC    A,#00H
03BC FA                MOV     R2,A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 59  

03BD E4                CLR     A
03BE 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 853
03C1 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 854
                                           ; SOURCE LINE # 855
                                           ; SOURCE LINE # 856
03C4 020000      R     LJMP    ?C0085
03C7         ?C0063:
                                           ; SOURCE LINE # 860
                                           ; SOURCE LINE # 861
03C7 850083      E     MOV     DPH,?C_XBP
03CA 850082      E     MOV     DPL,?C_XBP+01H
03CD A3                INC     DPTR
03CE A3                INC     DPTR
03CF 120000      E     LCALL   ?C?PLDXDATA
03D2 E9                MOV     A,R1
03D3 2403              ADD     A,#03H
03D5 F9                MOV     R1,A
03D6 EA                MOV     A,R2
03D7 3400              ADDC    A,#00H
03D9 FA                MOV     R2,A
03DA 120000      E     LCALL   ?C?CLDPTR
03DD FF                MOV     R7,A
03DE EF                MOV     A,R7
03DF 64F0              XRL     A,#0F0H
03E1 6003              JZ      $ + 5H
03E3 020000      R     LJMP    ?C0086
                                           ; SOURCE LINE # 862
                                           ; SOURCE LINE # 863
03E6 850083      E     MOV     DPH,?C_XBP
03E9 850082      E     MOV     DPL,?C_XBP+01H
03EC A3                INC     DPTR
03ED E0                MOVX    A,@DPTR
03EE FF                MOV     R7,A
03EF 850083      E     MOV     DPH,?C_XBP
03F2 850082      E     MOV     DPL,?C_XBP+01H
03F5 A3                INC     DPTR
03F6 A3                INC     DPTR
03F7 120000      E     LCALL   ?C?PLDXDATA
03FA E9                MOV     A,R1
03FB 2401              ADD     A,#01H
03FD F9                MOV     R1,A
03FE EA                MOV     A,R2
03FF 3400              ADDC    A,#00H
0401 FA                MOV     R2,A
0402 120000      E     LCALL   ?C?CLDPTR
0405 FE                MOV     R6,A
0406 EE                MOV     A,R6
0407 FD                MOV     R5,A
0408 7C00              MOV     R4,#00H
040A 850083      E     MOV     DPH,?C_XBP
040D 850082      E     MOV     DPL,?C_XBP+01H
0410 A3                INC     DPTR
0411 A3                INC     DPTR
0412 120000      E     LCALL   ?C?PLDXDATA
0415 E9                MOV     A,R1
0416 2404              ADD     A,#04H
0418 F9                MOV     R1,A
0419 EA                MOV     A,R2
041A 3400              ADDC    A,#00H
041C FA                MOV     R2,A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 60  

041D E9                MOV     A,R1
041E 2D                ADD     A,R5
041F F9                MOV     R1,A
0420 EA                MOV     A,R2
0421 3C                ADDC    A,R4
0422 FA                MOV     R2,A
0423 EF                MOV     A,R7
0424 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 864
0427 850083      E     MOV     DPH,?C_XBP
042A 850082      E     MOV     DPL,?C_XBP+01H
042D A3                INC     DPTR
042E A3                INC     DPTR
042F 120000      E     LCALL   ?C?PLDXDATA
0432 E9                MOV     A,R1
0433 2401              ADD     A,#01H
0435 F9                MOV     R1,A
0436 EA                MOV     A,R2
0437 3400              ADDC    A,#00H
0439 FA                MOV     R2,A
043A 7401              MOV     A,#01H
043C 120000      E     LCALL   ?C?CILDPTR
                                           ; SOURCE LINE # 865
043F 850083      E     MOV     DPH,?C_XBP
0442 850082      E     MOV     DPL,?C_XBP+01H
0445 A3                INC     DPTR
0446 A3                INC     DPTR
0447 120000      E     LCALL   ?C?PLDXDATA
044A E9                MOV     A,R1
044B 2401              ADD     A,#01H
044D F9                MOV     R1,A
044E EA                MOV     A,R2
044F 3400              ADDC    A,#00H
0451 FA                MOV     R2,A
0452 120000      E     LCALL   ?C?CLDPTR
0455 FF                MOV     R7,A
0456 850083      E     MOV     DPH,?C_XBP
0459 850082      E     MOV     DPL,?C_XBP+01H
045C A3                INC     DPTR
045D A3                INC     DPTR
045E 120000      E     LCALL   ?C?PLDXDATA
0461 120000      E     LCALL   ?C?CLDPTR
0464 FE                MOV     R6,A
0465 EF                MOV     A,R7
0466 C3                CLR     C
0467 9E                SUBB    A,R6
0468 5003              JNC     $ + 5H
046A 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 866
                                           ; SOURCE LINE # 867
046D 850083      E     MOV     DPH,?C_XBP
0470 850082      E     MOV     DPL,?C_XBP+01H
0473 A3                INC     DPTR
0474 A3                INC     DPTR
0475 120000      E     LCALL   ?C?PLDXDATA
0478 E9                MOV     A,R1
0479 2401              ADD     A,#01H
047B F9                MOV     R1,A
047C EA                MOV     A,R2
047D 3400              ADDC    A,#00H
047F FA                MOV     R2,A
0480 120000      E     LCALL   ?C?CLDPTR
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 61  

0483 FF                MOV     R7,A
0484 850083      E     MOV     DPH,?C_XBP
0487 850082      E     MOV     DPL,?C_XBP+01H
048A A3                INC     DPTR
048B A3                INC     DPTR
048C 120000      E     LCALL   ?C?PLDXDATA
048F E9                MOV     A,R1
0490 2402              ADD     A,#02H
0492 F9                MOV     R1,A
0493 EA                MOV     A,R2
0494 3400              ADDC    A,#00H
0496 FA                MOV     R2,A
0497 EF                MOV     A,R7
0498 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 868
049B 850083      E     MOV     DPH,?C_XBP
049E 850082      E     MOV     DPL,?C_XBP+01H
04A1 A3                INC     DPTR
04A2 A3                INC     DPTR
04A3 120000      E     LCALL   ?C?PLDXDATA
04A6 E9                MOV     A,R1
04A7 2401              ADD     A,#01H
04A9 F9                MOV     R1,A
04AA EA                MOV     A,R2
04AB 3400              ADDC    A,#00H
04AD FA                MOV     R2,A
04AE E4                CLR     A
04AF 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 869
04B2 850083      E     MOV     DPH,?C_XBP
04B5 850082      E     MOV     DPL,?C_XBP+01H
04B8 74F0              MOV     A,#0F0H
04BA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 870
                                           ; SOURCE LINE # 871
04BB 020000      R     LJMP    ?C0085
04BE         ?C0086:
                                           ; SOURCE LINE # 872
04BE 850083      E     MOV     DPH,?C_XBP
04C1 850082      E     MOV     DPL,?C_XBP+01H
04C4 A3                INC     DPTR
04C5 A3                INC     DPTR
04C6 120000      E     LCALL   ?C?PLDXDATA
04C9 E9                MOV     A,R1
04CA 2401              ADD     A,#01H
04CC F9                MOV     R1,A
04CD EA                MOV     A,R2
04CE 3400              ADDC    A,#00H
04D0 FA                MOV     R2,A
04D1 120000      E     LCALL   ?C?CLDPTR
04D4 FF                MOV     R7,A
04D5 EF                MOV     A,R7
04D6 D3                SETB    C
04D7 9400              SUBB    A,#00H
04D9 5003              JNC     $ + 5H
04DB 020000      R     LJMP    ?C0089
                                           ; SOURCE LINE # 873
                                           ; SOURCE LINE # 874
04DE 850083      E     MOV     DPH,?C_XBP
04E1 850082      E     MOV     DPL,?C_XBP+01H
04E4 A3                INC     DPTR
04E5 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 62  

04E6 FF                MOV     R7,A
04E7 850083      E     MOV     DPH,?C_XBP
04EA 850082      E     MOV     DPL,?C_XBP+01H
04ED A3                INC     DPTR
04EE A3                INC     DPTR
04EF 120000      E     LCALL   ?C?PLDXDATA
04F2 E9                MOV     A,R1
04F3 2401              ADD     A,#01H
04F5 F9                MOV     R1,A
04F6 EA                MOV     A,R2
04F7 3400              ADDC    A,#00H
04F9 FA                MOV     R2,A
04FA 120000      E     LCALL   ?C?CLDPTR
04FD FE                MOV     R6,A
04FE EE                MOV     A,R6
04FF FD                MOV     R5,A
0500 7C00              MOV     R4,#00H
0502 850083      E     MOV     DPH,?C_XBP
0505 850082      E     MOV     DPL,?C_XBP+01H
0508 A3                INC     DPTR
0509 A3                INC     DPTR
050A 120000      E     LCALL   ?C?PLDXDATA
050D E9                MOV     A,R1
050E 2404              ADD     A,#04H
0510 F9                MOV     R1,A
0511 EA                MOV     A,R2
0512 3400              ADDC    A,#00H
0514 FA                MOV     R2,A
0515 E9                MOV     A,R1
0516 2D                ADD     A,R5
0517 F9                MOV     R1,A
0518 EA                MOV     A,R2
0519 3C                ADDC    A,R4
051A FA                MOV     R2,A
051B EF                MOV     A,R7
051C 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 875
051F 850083      E     MOV     DPH,?C_XBP
0522 850082      E     MOV     DPL,?C_XBP+01H
0525 A3                INC     DPTR
0526 A3                INC     DPTR
0527 120000      E     LCALL   ?C?PLDXDATA
052A E9                MOV     A,R1
052B 2401              ADD     A,#01H
052D F9                MOV     R1,A
052E EA                MOV     A,R2
052F 3400              ADDC    A,#00H
0531 FA                MOV     R2,A
0532 7401              MOV     A,#01H
0534 120000      E     LCALL   ?C?CILDPTR
                                           ; SOURCE LINE # 876
0537 850083      E     MOV     DPH,?C_XBP
053A 850082      E     MOV     DPL,?C_XBP+01H
053D A3                INC     DPTR
053E A3                INC     DPTR
053F 120000      E     LCALL   ?C?PLDXDATA
0542 E9                MOV     A,R1
0543 2401              ADD     A,#01H
0545 F9                MOV     R1,A
0546 EA                MOV     A,R2
0547 3400              ADDC    A,#00H
0549 FA                MOV     R2,A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 63  

054A 120000      E     LCALL   ?C?CLDPTR
054D FF                MOV     R7,A
054E 850083      E     MOV     DPH,?C_XBP
0551 850082      E     MOV     DPL,?C_XBP+01H
0554 A3                INC     DPTR
0555 A3                INC     DPTR
0556 120000      E     LCALL   ?C?PLDXDATA
0559 120000      E     LCALL   ?C?CLDPTR
055C FE                MOV     R6,A
055D EF                MOV     A,R7
055E C3                CLR     C
055F 9E                SUBB    A,R6
0560 5003              JNC     $ + 5H
0562 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 877
                                           ; SOURCE LINE # 878
0565 850083      E     MOV     DPH,?C_XBP
0568 850082      E     MOV     DPL,?C_XBP+01H
056B A3                INC     DPTR
056C A3                INC     DPTR
056D 120000      E     LCALL   ?C?PLDXDATA
0570 E9                MOV     A,R1
0571 2401              ADD     A,#01H
0573 F9                MOV     R1,A
0574 EA                MOV     A,R2
0575 3400              ADDC    A,#00H
0577 FA                MOV     R2,A
0578 120000      E     LCALL   ?C?CLDPTR
057B FF                MOV     R7,A
057C 850083      E     MOV     DPH,?C_XBP
057F 850082      E     MOV     DPL,?C_XBP+01H
0582 A3                INC     DPTR
0583 A3                INC     DPTR
0584 120000      E     LCALL   ?C?PLDXDATA
0587 E9                MOV     A,R1
0588 2402              ADD     A,#02H
058A F9                MOV     R1,A
058B EA                MOV     A,R2
058C 3400              ADDC    A,#00H
058E FA                MOV     R2,A
058F EF                MOV     A,R7
0590 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 879
0593 850083      E     MOV     DPH,?C_XBP
0596 850082      E     MOV     DPL,?C_XBP+01H
0599 A3                INC     DPTR
059A A3                INC     DPTR
059B 120000      E     LCALL   ?C?PLDXDATA
059E E9                MOV     A,R1
059F 2401              ADD     A,#01H
05A1 F9                MOV     R1,A
05A2 EA                MOV     A,R2
05A3 3400              ADDC    A,#00H
05A5 FA                MOV     R2,A
05A6 E4                CLR     A
05A7 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 880
05AA 850083      E     MOV     DPH,?C_XBP
05AD 850082      E     MOV     DPL,?C_XBP+01H
05B0 A3                INC     DPTR
05B1 A3                INC     DPTR
05B2 120000      E     LCALL   ?C?PLDXDATA
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 64  

05B5 E9                MOV     A,R1
05B6 2402              ADD     A,#02H
05B8 F9                MOV     R1,A
05B9 EA                MOV     A,R2
05BA 3400              ADDC    A,#00H
05BC FA                MOV     R2,A
05BD 120000      E     LCALL   ?C?CLDPTR
05C0 FF                MOV     R7,A
05C1 850083      E     MOV     DPH,?C_XBP
05C4 850082      E     MOV     DPL,?C_XBP+01H
05C7 EF                MOV     A,R7
05C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 881
                                           ; SOURCE LINE # 882
05C9 020000      R     LJMP    ?C0085
05CC         ?C0089:
                                           ; SOURCE LINE # 883
05CC 850083      E     MOV     DPH,?C_XBP
05CF 850082      E     MOV     DPL,?C_XBP+01H
05D2 A3                INC     DPTR
05D3 A3                INC     DPTR
05D4 120000      E     LCALL   ?C?PLDXDATA
05D7 E9                MOV     A,R1
05D8 2403              ADD     A,#03H
05DA F9                MOV     R1,A
05DB EA                MOV     A,R2
05DC 3400              ADDC    A,#00H
05DE FA                MOV     R2,A
05DF 120000      E     LCALL   ?C?CLDPTR
05E2 FF                MOV     R7,A
05E3 EF                MOV     A,R7
05E4 7003              JNZ     $ + 5H
05E6 020000      R     LJMP    ?C0085
                                           ; SOURCE LINE # 884
                                           ; SOURCE LINE # 885
05E9 850083      E     MOV     DPH,?C_XBP
05EC 850082      E     MOV     DPL,?C_XBP+01H
05EF A3                INC     DPTR
05F0 A3                INC     DPTR
05F1 120000      E     LCALL   ?C?PLDXDATA
05F4 E9                MOV     A,R1
05F5 2403              ADD     A,#03H
05F7 F9                MOV     R1,A
05F8 EA                MOV     A,R2
05F9 3400              ADDC    A,#00H
05FB FA                MOV     R2,A
05FC 120000      E     LCALL   ?C?CLDPTR
05FF FF                MOV     R7,A
0600 850083      E     MOV     DPH,?C_XBP
0603 850082      E     MOV     DPL,?C_XBP+01H
0606 A3                INC     DPTR
0607 A3                INC     DPTR
0608 120000      E     LCALL   ?C?PLDXDATA
060B E9                MOV     A,R1
060C 2404              ADD     A,#04H
060E F9                MOV     R1,A
060F EA                MOV     A,R2
0610 3400              ADDC    A,#00H
0612 FA                MOV     R2,A
0613 EF                MOV     A,R7
0614 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 886
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 65  

0617 850083      E     MOV     DPH,?C_XBP
061A 850082      E     MOV     DPL,?C_XBP+01H
061D A3                INC     DPTR
061E E0                MOVX    A,@DPTR
061F FF                MOV     R7,A
0620 850083      E     MOV     DPH,?C_XBP
0623 850082      E     MOV     DPL,?C_XBP+01H
0626 A3                INC     DPTR
0627 A3                INC     DPTR
0628 120000      E     LCALL   ?C?PLDXDATA
062B E9                MOV     A,R1
062C 2405              ADD     A,#05H
062E F9                MOV     R1,A
062F EA                MOV     A,R2
0630 3400              ADDC    A,#00H
0632 FA                MOV     R2,A
0633 EF                MOV     A,R7
0634 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 887
0637 850083      E     MOV     DPH,?C_XBP
063A 850082      E     MOV     DPL,?C_XBP+01H
063D A3                INC     DPTR
063E A3                INC     DPTR
063F 120000      E     LCALL   ?C?PLDXDATA
0642 E9                MOV     A,R1
0643 2401              ADD     A,#01H
0645 F9                MOV     R1,A
0646 EA                MOV     A,R2
0647 3400              ADDC    A,#00H
0649 FA                MOV     R2,A
064A 7402              MOV     A,#02H
064C 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 888
064F 850083      E     MOV     DPH,?C_XBP
0652 850082      E     MOV     DPL,?C_XBP+01H
0655 A3                INC     DPTR
0656 A3                INC     DPTR
0657 120000      E     LCALL   ?C?PLDXDATA
065A E9                MOV     A,R1
065B 2403              ADD     A,#03H
065D F9                MOV     R1,A
065E EA                MOV     A,R2
065F 3400              ADDC    A,#00H
0661 FA                MOV     R2,A
0662 120000      E     LCALL   ?C?CLDPTR
0665 FF                MOV     R7,A
0666 EF                MOV     A,R7
0667 54F0              ANL     A,#0F0H
0669 FF                MOV     R7,A
066A EF                MOV     A,R7
066B 120000      E     LCALL   ?C?CCASE
066E 0000        R     DW      ?C0098
0670 80                DB      080H
0671 0000        R     DW      ?C0098
0673 90                DB      090H
0674 0000        R     DW      ?C0098
0676 A0                DB      0A0H
0677 0000        R     DW      ?C0098
0679 B0                DB      0B0H
067A 0000        R     DW      ?C0100
067C C0                DB      0C0H
067D 0000        R     DW      ?C0100
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 66  

067F D0                DB      0D0H
0680 0000        R     DW      ?C0098
0682 E0                DB      0E0H
0683 0000              DW      00H
0685 0000        R     DW      ?C0101
                                           ; SOURCE LINE # 889
                                           ; SOURCE LINE # 890
                                           ; SOURCE LINE # 891
                                           ; SOURCE LINE # 892
                                           ; SOURCE LINE # 893
                                           ; SOURCE LINE # 894
0687         ?C0098:
                                           ; SOURCE LINE # 895
0687 850083      E     MOV     DPH,?C_XBP
068A 850082      E     MOV     DPL,?C_XBP+01H
068D A3                INC     DPTR
068E A3                INC     DPTR
068F 120000      E     LCALL   ?C?PLDXDATA
0692 7403              MOV     A,#03H
0694 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 896
0697 807D              SJMP    ?C0085
                                           ; SOURCE LINE # 897
                                           ; SOURCE LINE # 898
0699         ?C0100:
                                           ; SOURCE LINE # 899
0699 850083      E     MOV     DPH,?C_XBP
069C 850082      E     MOV     DPL,?C_XBP+01H
069F A3                INC     DPTR
06A0 A3                INC     DPTR
06A1 120000      E     LCALL   ?C?PLDXDATA
06A4 E9                MOV     A,R1
06A5 2401              ADD     A,#01H
06A7 F9                MOV     R1,A
06A8 EA                MOV     A,R2
06A9 3400              ADDC    A,#00H
06AB FA                MOV     R2,A
06AC 120000      E     LCALL   ?C?CLDPTR
06AF FF                MOV     R7,A
06B0 850083      E     MOV     DPH,?C_XBP
06B3 850082      E     MOV     DPL,?C_XBP+01H
06B6 A3                INC     DPTR
06B7 A3                INC     DPTR
06B8 120000      E     LCALL   ?C?PLDXDATA
06BB E9                MOV     A,R1
06BC 2402              ADD     A,#02H
06BE F9                MOV     R1,A
06BF EA                MOV     A,R2
06C0 3400              ADDC    A,#00H
06C2 FA                MOV     R2,A
06C3 EF                MOV     A,R7
06C4 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 900
06C7 850083      E     MOV     DPH,?C_XBP
06CA 850082      E     MOV     DPL,?C_XBP+01H
06CD A3                INC     DPTR
06CE A3                INC     DPTR
06CF 120000      E     LCALL   ?C?PLDXDATA
06D2 E9                MOV     A,R1
06D3 2401              ADD     A,#01H
06D5 F9                MOV     R1,A
06D6 EA                MOV     A,R2
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 67  

06D7 3400              ADDC    A,#00H
06D9 FA                MOV     R2,A
06DA E4                CLR     A
06DB 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 901
06DE 850083      E     MOV     DPH,?C_XBP
06E1 850082      E     MOV     DPL,?C_XBP+01H
06E4 A3                INC     DPTR
06E5 A3                INC     DPTR
06E6 120000      E     LCALL   ?C?PLDXDATA
06E9 E9                MOV     A,R1
06EA 2402              ADD     A,#02H
06EC F9                MOV     R1,A
06ED EA                MOV     A,R2
06EE 3400              ADDC    A,#00H
06F0 FA                MOV     R2,A
06F1 120000      E     LCALL   ?C?CLDPTR
06F4 FF                MOV     R7,A
06F5 850083      E     MOV     DPH,?C_XBP
06F8 850082      E     MOV     DPL,?C_XBP+01H
06FB EF                MOV     A,R7
06FC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 902
06FD 8017              SJMP    ?C0085
                                           ; SOURCE LINE # 903
06FF         ?C0101:
                                           ; SOURCE LINE # 904
06FF 850083      E     MOV     DPH,?C_XBP
0702 850082      E     MOV     DPL,?C_XBP+01H
0705 A3                INC     DPTR
0706 A3                INC     DPTR
0707 120000      E     LCALL   ?C?PLDXDATA
070A E9                MOV     A,R1
070B 2401              ADD     A,#01H
070D F9                MOV     R1,A
070E EA                MOV     A,R2
070F 3400              ADDC    A,#00H
0711 FA                MOV     R2,A
0712 E4                CLR     A
0713 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 905
                                           ; SOURCE LINE # 906
                                           ; SOURCE LINE # 907
                                           ; SOURCE LINE # 909
                                           ; SOURCE LINE # 910
                                           ; SOURCE LINE # 911
0716         ?C0085:
                                           ; SOURCE LINE # 912
0716 850083      E     MOV     DPH,?C_XBP
0719 850082      E     MOV     DPL,?C_XBP+01H
071C E0                MOVX    A,@DPTR
071D FF                MOV     R7,A
                                           ; SOURCE LINE # 913
071E         ?C0103:
071E 900005            MOV     DPTR,#05H
0721 120000      E     LCALL   ?C?ADDXBP
0724 22                RET     
             ; FUNCTION _?USB_ProcessMidiIn (END)

             ; FUNCTION _?USB_MIDI1_GetEvent (BEGIN)
                                           ; SOURCE LINE # 935
0000 90FFFC            MOV     DPTR,#0FFFCH
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 68  

0003 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 937
0006 850083      E     MOV     DPH,?C_XBP
0009 850082      E     MOV     DPL,?C_XBP+01H
000C E4                CLR     A
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 950
000E 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferLoopDetect
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 900003            MOV     DPTR,#03H
0016 120000      E     LCALL   ?C?XBPOFF
0019 EF                MOV     A,R7
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 952
001B 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferWrite
001E E0                MOVX    A,@DPTR
001F FF                MOV     R7,A
0020 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferRead
0023 E0                MOVX    A,@DPTR
0024 FE                MOV     R6,A
0025 EE                MOV     A,R6
0026 B5070E            CJNE    A,AR7,?C0105
0029 900003            MOV     DPTR,#03H
002C 120000      E     LCALL   ?C?XBPOFF
002F E0                MOVX    A,@DPTR
0030 FF                MOV     R7,A
0031 EF                MOV     A,R7
0032 7003              JNZ     $ + 5H
0034 020000      R     LJMP    ?C0104
0037         ?C0105:
                                           ; SOURCE LINE # 953
                                           ; SOURCE LINE # 959
0037 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferRead
003A E0                MOVX    A,@DPTR
003B FF                MOV     R7,A
003C 850083      E     MOV     DPH,?C_XBP
003F 850082      E     MOV     DPL,?C_XBP+01H
0042 A3                INC     DPTR
0043 A3                INC     DPTR
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
0046         ?C0106:
                                           ; SOURCE LINE # 975
0046 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferWrite
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B 850083      E     MOV     DPH,?C_XBP
004E 850082      E     MOV     DPL,?C_XBP+01H
0051 A3                INC     DPTR
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
0054 FE                MOV     R6,A
0055 EE                MOV     A,R6
0056 B5070E            CJNE    A,AR7,?C0108
0059 900003            MOV     DPTR,#03H
005C 120000      E     LCALL   ?C?XBPOFF
005F E0                MOVX    A,@DPTR
0060 FF                MOV     R7,A
0061 EF                MOV     A,R7
0062 7003              JNZ     $ + 5H
0064 020000      R     LJMP    ?C0107
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 69  

0067         ?C0108:
0067 850083      E     MOV     DPH,?C_XBP
006A 850082      E     MOV     DPL,?C_XBP+01H
006D E0                MOVX    A,@DPTR
006E FF                MOV     R7,A
006F EF                MOV     A,R7
0070 6003              JZ      $ + 5H
0072 020000      R     LJMP    ?C0107
                                           ; SOURCE LINE # 977
                                           ; SOURCE LINE # 978
0075 850083      E     MOV     DPH,?C_XBP
0078 850082      E     MOV     DPL,?C_XBP+01H
007B A3                INC     DPTR
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E FF                MOV     R7,A
007F 7400        E     MOV     A,#LOW MIDI1_UART_rxBuffer
0081 2F                ADD     A,R7
0082 F582              MOV     DPL,A
0084 E4                CLR     A
0085 3400        E     ADDC    A,#HIGH MIDI1_UART_rxBuffer
0087 F583              MOV     DPH,A
0089 E0                MOVX    A,@DPTR
008A FF                MOV     R7,A
008B 850083      E     MOV     DPH,?C_XBP
008E 850082      E     MOV     DPL,?C_XBP+01H
0091 A3                INC     DPTR
0092 EF                MOV     A,R7
0093 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 980
0094 850083      E     MOV     DPH,?C_XBP
0097 850082      E     MOV     DPL,?C_XBP+01H
009A A3                INC     DPTR
009B A3                INC     DPTR
009C E0                MOVX    A,@DPTR
009D 04                INC     A
009E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 981
009F 850083      E     MOV     DPH,?C_XBP
00A2 850082      E     MOV     DPL,?C_XBP+01H
00A5 A3                INC     DPTR
00A6 A3                INC     DPTR
00A7 E0                MOVX    A,@DPTR
00A8 FF                MOV     R7,A
00A9 EF                MOV     A,R7
00AA C3                CLR     C
00AB 94FF              SUBB    A,#0FFH
00AD 400A              JC      ?C0109
                                           ; SOURCE LINE # 982
                                           ; SOURCE LINE # 983
00AF 850083      E     MOV     DPH,?C_XBP
00B2 850082      E     MOV     DPL,?C_XBP+01H
00B5 A3                INC     DPTR
00B6 A3                INC     DPTR
00B7 E4                CLR     A
00B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 984
00B9         ?C0109:
                                           ; SOURCE LINE # 989
00B9 900003            MOV     DPTR,#03H
00BC 120000      E     LCALL   ?C?XBPOFF
00BF E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 70  

00C0 FF                MOV     R7,A
00C1 EF                MOV     A,R7
00C2 6014              JZ      ?C0110
                                           ; SOURCE LINE # 990
                                           ; SOURCE LINE # 991
00C4 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferLoopDetect
00C7 E4                CLR     A
00C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 996
00C9 850083      E     MOV     DPH,?C_XBP
00CC 850082      E     MOV     DPL,?C_XBP+01H
00CF A3                INC     DPTR
00D0 A3                INC     DPTR
00D1 E0                MOVX    A,@DPTR
00D2 FF                MOV     R7,A
00D3 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferRead
00D6 EF                MOV     A,R7
00D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1000
00D8         ?C0110:
                                           ; SOURCE LINE # 1003
00D8 7B01              MOV     R3,#01H
00DA 7A00        R     MOV     R2,#HIGH USB_MIDI1_Event
00DC 7900        R     MOV     R1,#LOW USB_MIDI1_Event
00DE 850083      E     MOV     DPH,?C_XBP
00E1 850082      E     MOV     DPL,?C_XBP+01H
00E4 A3                INC     DPTR
00E5 E0                MOVX    A,@DPTR
00E6 FF                MOV     R7,A
00E7 120000      R     LCALL   _?USB_ProcessMidiIn
00EA 850083      E     MOV     DPH,?C_XBP
00ED 850082      E     MOV     DPL,?C_XBP+01H
00F0 EF                MOV     A,R7
00F1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1006
00F2 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferLoopDetect
00F5 E0                MOVX    A,@DPTR
00F6 FF                MOV     R7,A
00F7 900003            MOV     DPTR,#03H
00FA 120000      E     LCALL   ?C?XBPOFF
00FD EF                MOV     A,R7
00FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1007
00FF 020000      R     LJMP    ?C0106
0102         ?C0107:
                                           ; SOURCE LINE # 1016
0102 850083      E     MOV     DPH,?C_XBP
0105 850082      E     MOV     DPL,?C_XBP+01H
0108 A3                INC     DPTR
0109 A3                INC     DPTR
010A E0                MOVX    A,@DPTR
010B FF                MOV     R7,A
010C 900000      E     MOV     DPTR,#MIDI1_UART_rxBufferRead
010F EF                MOV     A,R7
0110 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1020
0111         ?C0104:
                                           ; SOURCE LINE # 1022
0111 850083      E     MOV     DPH,?C_XBP
0114 850082      E     MOV     DPL,?C_XBP+01H
0117 E0                MOVX    A,@DPTR
0118 FF                MOV     R7,A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 71  

                                           ; SOURCE LINE # 1023
0119         ?C0111:
0119 900004            MOV     DPTR,#04H
011C 120000      E     LCALL   ?C?ADDXBP
011F 22                RET     
             ; FUNCTION _?USB_MIDI1_GetEvent (END)

             ; FUNCTION _?USB_MIDI1_ProcessUsbOut (BEGIN)
                                           ; SOURCE LINE # 1045
0000 90FFFD            MOV     DPTR,#0FFFDH
0003 120000      E     LCALL   ?C?ADDXBP
0006 120000      E     LCALL   ?C?PSTXDATA
0009 90FFFD            MOV     DPTR,#0FFFDH
000C 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 1046
                                           ; SOURCE LINE # 1058
000F 120000      E     LCALL   USB_MIDI1_ProcessUsbOut_EntryCallback
                                           ; SOURCE LINE # 1061
0012 900003            MOV     DPTR,#03H
0015 120000      E     LCALL   ?C?XBPOFF
0018 120000      E     LCALL   ?C?PLDXDATA
001B 120000      E     LCALL   ?C?CLDPTR
001E FF                MOV     R7,A
001F EF                MOV     A,R7
0020 540F              ANL     A,#0FH
0022 FF                MOV     R7,A
0023 850083      E     MOV     DPH,?C_XBP
0026 850082      E     MOV     DPL,?C_XBP+01H
0029 EF                MOV     A,R7
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1063
002B 850083      E     MOV     DPH,?C_XBP
002E 850082      E     MOV     DPL,?C_XBP+01H
0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 EF                MOV     A,R7
0034 7003              JNZ     $ + 5H
0036 020000      R     LJMP    ?C0112
0039 850083      E     MOV     DPH,?C_XBP
003C 850082      E     MOV     DPL,?C_XBP+01H
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 EF                MOV     A,R7
0042 6401              XRL     A,#01H
0044 7003              JNZ     $ + 5H
0046 020000      R     LJMP    ?C0112
                                           ; SOURCE LINE # 1064
                                           ; SOURCE LINE # 1065
0049 850083      E     MOV     DPH,?C_XBP
004C 850082      E     MOV     DPL,?C_XBP+01H
004F E0                MOVX    A,@DPTR
0050 FF                MOV     R7,A
0051 EF                MOV     A,R7
0052 900000      R     MOV     DPTR,#USB_MIDI_SIZE
0055 93                MOVC    A,@A+DPTR
0056 FF                MOV     R7,A
0057 850083      E     MOV     DPH,?C_XBP
005A 850082      E     MOV     DPL,?C_XBP+01H
005D A3                INC     DPTR
005E EF                MOV     A,R7
005F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1066
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 72  

0060 850083      E     MOV     DPH,?C_XBP
0063 850082      E     MOV     DPL,?C_XBP+01H
0066 A3                INC     DPTR
0067 A3                INC     DPTR
0068 7401              MOV     A,#01H
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1068
006B 850083      E     MOV     DPH,?C_XBP
006E 850082      E     MOV     DPL,?C_XBP+01H
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 EF                MOV     A,R7
0074 6404              XRL     A,#04H
0076 7054              JNZ     ?C0113
                                           ; SOURCE LINE # 1069
                                           ; SOURCE LINE # 1070
0078 900003            MOV     DPTR,#03H
007B 120000      E     LCALL   ?C?XBPOFF
007E 120000      E     LCALL   ?C?PLDXDATA
0081 E9                MOV     A,R1
0082 2401              ADD     A,#01H
0084 F9                MOV     R1,A
0085 EA                MOV     A,R2
0086 3400              ADDC    A,#00H
0088 FA                MOV     R2,A
0089 120000      E     LCALL   ?C?CLDPTR
008C FF                MOV     R7,A
008D EF                MOV     A,R7
008E B4F02A            CJNE    A,#0F0H,?C0114
0091 900003            MOV     DPTR,#03H
0094 120000      E     LCALL   ?C?XBPOFF
0097 120000      E     LCALL   ?C?PLDXDATA
009A E9                MOV     A,R1
009B 2402              ADD     A,#02H
009D F9                MOV     R1,A
009E EA                MOV     A,R2
009F 3400              ADDC    A,#00H
00A1 FA                MOV     R2,A
00A2 120000      E     LCALL   ?C?CLDPTR
00A5 FF                MOV     R7,A
00A6 EF                MOV     A,R7
00A7 B47E11            CJNE    A,#07EH,?C0114
                                           ; SOURCE LINE # 1072
                                           ; SOURCE LINE # 1074
00AA 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
00AD E0                MOVX    A,@DPTR
00AE FF                MOV     R7,A
00AF EF                MOV     A,R7
00B0 4401              ORL     A,#01H
00B2 FF                MOV     R7,A
00B3 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
00B6 EF                MOV     A,R7
00B7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1075
00B8 020000      R     LJMP    ?C0116
00BB         ?C0114:
                                           ; SOURCE LINE # 1077
                                           ; SOURCE LINE # 1078
00BB 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
00BE E0                MOVX    A,@DPTR
00BF FF                MOV     R7,A
00C0 EF                MOV     A,R7
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 73  

00C1 54FE              ANL     A,#0FEH
00C3 FF                MOV     R7,A
00C4 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
00C7 EF                MOV     A,R7
00C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1079
                                           ; SOURCE LINE # 1080
00C9 020000      R     LJMP    ?C0116
00CC         ?C0113:
                                           ; SOURCE LINE # 1081
00CC 850083      E     MOV     DPH,?C_XBP
00CF 850082      E     MOV     DPL,?C_XBP+01H
00D2 E0                MOVX    A,@DPTR
00D3 FF                MOV     R7,A
00D4 EF                MOV     A,R7
00D5 B40511            CJNE    A,#05H,?C0117
                                           ; SOURCE LINE # 1082
                                           ; SOURCE LINE # 1083
00D8 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
00DB E0                MOVX    A,@DPTR
00DC FF                MOV     R7,A
00DD EF                MOV     A,R7
00DE 54FE              ANL     A,#0FEH
00E0 FF                MOV     R7,A
00E1 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
00E4 EF                MOV     A,R7
00E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1084
00E6 020000      R     LJMP    ?C0116
00E9         ?C0117:
                                           ; SOURCE LINE # 1085
00E9 850083      E     MOV     DPH,?C_XBP
00EC 850082      E     MOV     DPL,?C_XBP+01H
00EF E0                MOVX    A,@DPTR
00F0 FF                MOV     R7,A
00F1 EF                MOV     A,R7
00F2 B40610            CJNE    A,#06H,?C0119
                                           ; SOURCE LINE # 1086
                                           ; SOURCE LINE # 1087
00F5 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
00F8 E0                MOVX    A,@DPTR
00F9 FF                MOV     R7,A
00FA EF                MOV     A,R7
00FB 54FE              ANL     A,#0FEH
00FD FF                MOV     R7,A
00FE 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
0101 EF                MOV     A,R7
0102 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1088
0103 806A              SJMP    ?C0116
0105         ?C0119:
                                           ; SOURCE LINE # 1089
0105 850083      E     MOV     DPH,?C_XBP
0108 850082      E     MOV     DPL,?C_XBP+01H
010B E0                MOVX    A,@DPTR
010C FF                MOV     R7,A
010D EF                MOV     A,R7
010E 6407              XRL     A,#07H
0110 705D              JNZ     ?C0116
                                           ; SOURCE LINE # 1090
                                           ; SOURCE LINE # 1092
0112 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 74  

0115 E0                MOVX    A,@DPTR
0116 FF                MOV     R7,A
0117 EF                MOV     A,R7
0118 5401              ANL     A,#01H
011A FF                MOV     R7,A
011B 7E00              MOV     R6,#00H
011D EF                MOV     A,R7
011E 4E                ORL     A,R6
011F 604E              JZ      ?C0116
                                           ; SOURCE LINE # 1093
                                           ; SOURCE LINE # 1094
0121 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
0124 E0                MOVX    A,@DPTR
0125 FF                MOV     R7,A
0126 EF                MOV     A,R7
0127 54FE              ANL     A,#0FEH
0129 FF                MOV     R7,A
012A 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
012D EF                MOV     A,R7
012E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1095
012F 900003            MOV     DPTR,#03H
0132 120000      E     LCALL   ?C?XBPOFF
0135 120000      E     LCALL   ?C?PLDXDATA
0138 E9                MOV     A,R1
0139 2401              ADD     A,#01H
013B F9                MOV     R1,A
013C EA                MOV     A,R2
013D 3400              ADDC    A,#00H
013F FA                MOV     R2,A
0140 120000      E     LCALL   ?C?CLDPTR
0143 FF                MOV     R7,A
0144 EF                MOV     A,R7
0145 B40627            CJNE    A,#06H,?C0116
0148 900003            MOV     DPTR,#03H
014B 120000      E     LCALL   ?C?XBPOFF
014E 120000      E     LCALL   ?C?PLDXDATA
0151 E9                MOV     A,R1
0152 2402              ADD     A,#02H
0154 F9                MOV     R1,A
0155 EA                MOV     A,R2
0156 3400              ADDC    A,#00H
0158 FA                MOV     R2,A
0159 120000      E     LCALL   ?C?CLDPTR
015C FF                MOV     R7,A
015D EF                MOV     A,R7
015E B4010E            CJNE    A,#01H,?C0116
                                           ; SOURCE LINE # 1097
                                           ; SOURCE LINE # 1101
0161 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
0164 E0                MOVX    A,@DPTR
0165 FF                MOV     R7,A
0166 EF                MOV     A,R7
0167 4402              ORL     A,#02H
0169 FF                MOV     R7,A
016A 900000      R     MOV     DPTR,#USB_MIDI1_InqFlags
016D EF                MOV     A,R7
016E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1102
                                           ; SOURCE LINE # 1103
                                           ; SOURCE LINE # 1104
                                           ; SOURCE LINE # 1106
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 75  

                                           ; SOURCE LINE # 1107
016F         ?C0116:
                                           ; SOURCE LINE # 1110
016F 850083      E     MOV     DPH,?C_XBP
0172 850082      E     MOV     DPL,?C_XBP+01H
0175 E0                MOVX    A,@DPTR
0176 FF                MOV     R7,A
0177 EF                MOV     A,R7
0178 C3                CLR     C
0179 9408              SUBB    A,#08H
017B 4055              JC      ?C0125
017D 850083      E     MOV     DPH,?C_XBP
0180 850082      E     MOV     DPL,?C_XBP+01H
0183 E0                MOVX    A,@DPTR
0184 FF                MOV     R7,A
0185 EF                MOV     A,R7
0186 D3                SETB    C
0187 940E              SUBB    A,#0EH
0189 5047              JNC     ?C0125
                                           ; SOURCE LINE # 1111
                                           ; SOURCE LINE # 1112
018B 900003            MOV     DPTR,#03H
018E 120000      E     LCALL   ?C?XBPOFF
0191 120000      E     LCALL   ?C?PLDXDATA
0194 E9                MOV     A,R1
0195 2401              ADD     A,#01H
0197 F9                MOV     R1,A
0198 EA                MOV     A,R2
0199 3400              ADDC    A,#00H
019B FA                MOV     R2,A
019C 120000      E     LCALL   ?C?CLDPTR
019F FF                MOV     R7,A
01A0 900000      R     MOV     DPTR,#USB_MIDI1_TxRunStat
01A3 E0                MOVX    A,@DPTR
01A4 FE                MOV     R6,A
01A5 EE                MOV     A,R6
01A6 B5070D            CJNE    A,AR7,?C0126
                                           ; SOURCE LINE # 1113
                                           ; SOURCE LINE # 1115
01A9 850083      E     MOV     DPH,?C_XBP
01AC 850082      E     MOV     DPL,?C_XBP+01H
01AF A3                INC     DPTR
01B0 A3                INC     DPTR
01B1 E0                MOVX    A,@DPTR
01B2 04                INC     A
01B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1116
01B4 8021              SJMP    ?C0131
01B6         ?C0126:
                                           ; SOURCE LINE # 1118
                                           ; SOURCE LINE # 1120
01B6 900003            MOV     DPTR,#03H
01B9 120000      E     LCALL   ?C?XBPOFF
01BC 120000      E     LCALL   ?C?PLDXDATA
01BF E9                MOV     A,R1
01C0 2401              ADD     A,#01H
01C2 F9                MOV     R1,A
01C3 EA                MOV     A,R2
01C4 3400              ADDC    A,#00H
01C6 FA                MOV     R2,A
01C7 120000      E     LCALL   ?C?CLDPTR
01CA FF                MOV     R7,A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 76  

01CB 900000      R     MOV     DPTR,#USB_MIDI1_TxRunStat
01CE EF                MOV     A,R7
01CF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1121
                                           ; SOURCE LINE # 1122
01D0 8005              SJMP    ?C0131
01D2         ?C0125:
                                           ; SOURCE LINE # 1124
                                           ; SOURCE LINE # 1126
01D2 900000      R     MOV     DPTR,#USB_MIDI1_TxRunStat
01D5 E4                CLR     A
01D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1127
01D7         ?C0131:
                                           ; SOURCE LINE # 1131
                                           ; SOURCE LINE # 1132
01D7 900003            MOV     DPTR,#03H
01DA 120000      E     LCALL   ?C?XBPOFF
01DD 120000      E     LCALL   ?C?PLDXDATA
01E0 850083      E     MOV     DPH,?C_XBP
01E3 850082      E     MOV     DPL,?C_XBP+01H
01E6 A3                INC     DPTR
01E7 A3                INC     DPTR
01E8 E0                MOVX    A,@DPTR
01E9 FF                MOV     R7,A
01EA E9                MOV     A,R1
01EB 2F                ADD     A,R7
01EC F9                MOV     R1,A
01ED E4                CLR     A
01EE 3A                ADDC    A,R2
01EF FA                MOV     R2,A
01F0 120000      E     LCALL   ?C?CLDPTR
01F3 FF                MOV     R7,A
01F4 120000      E     LCALL   _?MIDI1_UART_PutChar
                                           ; SOURCE LINE # 1133
01F7 850083      E     MOV     DPH,?C_XBP
01FA 850082      E     MOV     DPL,?C_XBP+01H
01FD A3                INC     DPTR
01FE A3                INC     DPTR
01FF E0                MOVX    A,@DPTR
0200 04                INC     A
0201 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1134
                                           ; SOURCE LINE # 1135
0202 850083      E     MOV     DPH,?C_XBP
0205 850082      E     MOV     DPL,?C_XBP+01H
0208 A3                INC     DPTR
0209 E0                MOVX    A,@DPTR
020A FF                MOV     R7,A
020B 850083      E     MOV     DPH,?C_XBP
020E 850082      E     MOV     DPL,?C_XBP+01H
0211 A3                INC     DPTR
0212 A3                INC     DPTR
0213 E0                MOVX    A,@DPTR
0214 FE                MOV     R6,A
0215 EE                MOV     A,R6
0216 D3                SETB    C
0217 9F                SUBB    A,R7
0218 40BD              JC      ?C0131
                                           ; SOURCE LINE # 1136
021A         ?C0112:
                                           ; SOURCE LINE # 1144
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 77  

021A 120000      E     LCALL   USB_MIDI1_ProcessUsbOut_ExitCallback
                                           ; SOURCE LINE # 1146
021D 900006            MOV     DPTR,#06H
0220 120000      E     LCALL   ?C?ADDXBP
0223 22                RET     
             ; FUNCTION _?USB_MIDI1_ProcessUsbOut (END)

             ; FUNCTION _?USB_MIDI2_GetEvent (BEGIN)
                                           ; SOURCE LINE # 1169
0000 90FFFC            MOV     DPTR,#0FFFCH
0003 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 1171
0006 850083      E     MOV     DPH,?C_XBP
0009 850082      E     MOV     DPL,?C_XBP+01H
000C E4                CLR     A
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1185
000E 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferLoopDetect
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 900003            MOV     DPTR,#03H
0016 120000      E     LCALL   ?C?XBPOFF
0019 EF                MOV     A,R7
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1187
001B 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferWrite
001E E0                MOVX    A,@DPTR
001F FF                MOV     R7,A
0020 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferRead
0023 E0                MOVX    A,@DPTR
0024 FE                MOV     R6,A
0025 EE                MOV     A,R6
0026 B5070E            CJNE    A,AR7,?C0134
0029 900003            MOV     DPTR,#03H
002C 120000      E     LCALL   ?C?XBPOFF
002F E0                MOVX    A,@DPTR
0030 FF                MOV     R7,A
0031 EF                MOV     A,R7
0032 7003              JNZ     $ + 5H
0034 020000      R     LJMP    ?C0133
0037         ?C0134:
                                           ; SOURCE LINE # 1188
                                           ; SOURCE LINE # 1193
0037 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferRead
003A E0                MOVX    A,@DPTR
003B FF                MOV     R7,A
003C 850083      E     MOV     DPH,?C_XBP
003F 850082      E     MOV     DPL,?C_XBP+01H
0042 A3                INC     DPTR
0043 A3                INC     DPTR
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
0046         ?C0135:
                                           ; SOURCE LINE # 1209
0046 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferWrite
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B 850083      E     MOV     DPH,?C_XBP
004E 850082      E     MOV     DPL,?C_XBP+01H
0051 A3                INC     DPTR
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 78  

0054 FE                MOV     R6,A
0055 EE                MOV     A,R6
0056 B5070E            CJNE    A,AR7,?C0137
0059 900003            MOV     DPTR,#03H
005C 120000      E     LCALL   ?C?XBPOFF
005F E0                MOVX    A,@DPTR
0060 FF                MOV     R7,A
0061 EF                MOV     A,R7
0062 7003              JNZ     $ + 5H
0064 020000      R     LJMP    ?C0136
0067         ?C0137:
0067 850083      E     MOV     DPH,?C_XBP
006A 850082      E     MOV     DPL,?C_XBP+01H
006D E0                MOVX    A,@DPTR
006E FF                MOV     R7,A
006F EF                MOV     A,R7
0070 6003              JZ      $ + 5H
0072 020000      R     LJMP    ?C0136
                                           ; SOURCE LINE # 1211
                                           ; SOURCE LINE # 1212
0075 850083      E     MOV     DPH,?C_XBP
0078 850082      E     MOV     DPL,?C_XBP+01H
007B A3                INC     DPTR
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E FF                MOV     R7,A
007F 7400        E     MOV     A,#LOW MIDI2_UART_rxBuffer
0081 2F                ADD     A,R7
0082 F582              MOV     DPL,A
0084 E4                CLR     A
0085 3400        E     ADDC    A,#HIGH MIDI2_UART_rxBuffer
0087 F583              MOV     DPH,A
0089 E0                MOVX    A,@DPTR
008A FF                MOV     R7,A
008B 850083      E     MOV     DPH,?C_XBP
008E 850082      E     MOV     DPL,?C_XBP+01H
0091 A3                INC     DPTR
0092 EF                MOV     A,R7
0093 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1213
0094 850083      E     MOV     DPH,?C_XBP
0097 850082      E     MOV     DPL,?C_XBP+01H
009A A3                INC     DPTR
009B A3                INC     DPTR
009C E0                MOVX    A,@DPTR
009D 04                INC     A
009E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1214
009F 850083      E     MOV     DPH,?C_XBP
00A2 850082      E     MOV     DPL,?C_XBP+01H
00A5 A3                INC     DPTR
00A6 A3                INC     DPTR
00A7 E0                MOVX    A,@DPTR
00A8 FF                MOV     R7,A
00A9 EF                MOV     A,R7
00AA C3                CLR     C
00AB 94FF              SUBB    A,#0FFH
00AD 400A              JC      ?C0138
                                           ; SOURCE LINE # 1215
                                           ; SOURCE LINE # 1216
00AF 850083      E     MOV     DPH,?C_XBP
00B2 850082      E     MOV     DPL,?C_XBP+01H
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 79  

00B5 A3                INC     DPTR
00B6 A3                INC     DPTR
00B7 E4                CLR     A
00B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1217
00B9         ?C0138:
                                           ; SOURCE LINE # 1222
00B9 900003            MOV     DPTR,#03H
00BC 120000      E     LCALL   ?C?XBPOFF
00BF E0                MOVX    A,@DPTR
00C0 FF                MOV     R7,A
00C1 EF                MOV     A,R7
00C2 6014              JZ      ?C0139
                                           ; SOURCE LINE # 1223
                                           ; SOURCE LINE # 1224
00C4 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferLoopDetect
00C7 E4                CLR     A
00C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1229
00C9 850083      E     MOV     DPH,?C_XBP
00CC 850082      E     MOV     DPL,?C_XBP+01H
00CF A3                INC     DPTR
00D0 A3                INC     DPTR
00D1 E0                MOVX    A,@DPTR
00D2 FF                MOV     R7,A
00D3 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferRead
00D6 EF                MOV     A,R7
00D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1233
00D8         ?C0139:
                                           ; SOURCE LINE # 1236
00D8 7B01              MOV     R3,#01H
00DA 7A00        R     MOV     R2,#HIGH USB_MIDI2_Event
00DC 7900        R     MOV     R1,#LOW USB_MIDI2_Event
00DE 850083      E     MOV     DPH,?C_XBP
00E1 850082      E     MOV     DPL,?C_XBP+01H
00E4 A3                INC     DPTR
00E5 E0                MOVX    A,@DPTR
00E6 FF                MOV     R7,A
00E7 120000      R     LCALL   _?USB_ProcessMidiIn
00EA 850083      E     MOV     DPH,?C_XBP
00ED 850082      E     MOV     DPL,?C_XBP+01H
00F0 EF                MOV     A,R7
00F1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1239
00F2 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferLoopDetect
00F5 E0                MOVX    A,@DPTR
00F6 FF                MOV     R7,A
00F7 900003            MOV     DPTR,#03H
00FA 120000      E     LCALL   ?C?XBPOFF
00FD EF                MOV     A,R7
00FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1240
00FF 020000      R     LJMP    ?C0135
0102         ?C0136:
                                           ; SOURCE LINE # 1249
0102 850083      E     MOV     DPH,?C_XBP
0105 850082      E     MOV     DPL,?C_XBP+01H
0108 A3                INC     DPTR
0109 A3                INC     DPTR
010A E0                MOVX    A,@DPTR
010B FF                MOV     R7,A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 80  

010C 900000      E     MOV     DPTR,#MIDI2_UART_rxBufferRead
010F EF                MOV     A,R7
0110 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1253
0111         ?C0133:
                                           ; SOURCE LINE # 1255
0111 850083      E     MOV     DPH,?C_XBP
0114 850082      E     MOV     DPL,?C_XBP+01H
0117 E0                MOVX    A,@DPTR
0118 FF                MOV     R7,A
                                           ; SOURCE LINE # 1256
0119         ?C0140:
0119 900004            MOV     DPTR,#04H
011C 120000      E     LCALL   ?C?ADDXBP
011F 22                RET     
             ; FUNCTION _?USB_MIDI2_GetEvent (END)

             ; FUNCTION _?USB_MIDI2_ProcessUsbOut (BEGIN)
                                           ; SOURCE LINE # 1278
0000 90FFFD            MOV     DPTR,#0FFFDH
0003 120000      E     LCALL   ?C?ADDXBP
0006 120000      E     LCALL   ?C?PSTXDATA
0009 90FFFD            MOV     DPTR,#0FFFDH
000C 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 1279
                                           ; SOURCE LINE # 1291
000F 120000      E     LCALL   USB_MIDI2_ProcessUsbOut_EntryCallback
                                           ; SOURCE LINE # 1294
0012 900003            MOV     DPTR,#03H
0015 120000      E     LCALL   ?C?XBPOFF
0018 120000      E     LCALL   ?C?PLDXDATA
001B 120000      E     LCALL   ?C?CLDPTR
001E FF                MOV     R7,A
001F EF                MOV     A,R7
0020 540F              ANL     A,#0FH
0022 FF                MOV     R7,A
0023 850083      E     MOV     DPH,?C_XBP
0026 850082      E     MOV     DPL,?C_XBP+01H
0029 EF                MOV     A,R7
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1296
002B 850083      E     MOV     DPH,?C_XBP
002E 850082      E     MOV     DPL,?C_XBP+01H
0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 EF                MOV     A,R7
0034 7003              JNZ     $ + 5H
0036 020000      R     LJMP    ?C0141
0039 850083      E     MOV     DPH,?C_XBP
003C 850082      E     MOV     DPL,?C_XBP+01H
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 EF                MOV     A,R7
0042 6401              XRL     A,#01H
0044 7003              JNZ     $ + 5H
0046 020000      R     LJMP    ?C0141
                                           ; SOURCE LINE # 1297
                                           ; SOURCE LINE # 1298
0049 850083      E     MOV     DPH,?C_XBP
004C 850082      E     MOV     DPL,?C_XBP+01H
004F E0                MOVX    A,@DPTR
0050 FF                MOV     R7,A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 81  

0051 EF                MOV     A,R7
0052 900000      R     MOV     DPTR,#USB_MIDI_SIZE
0055 93                MOVC    A,@A+DPTR
0056 FF                MOV     R7,A
0057 850083      E     MOV     DPH,?C_XBP
005A 850082      E     MOV     DPL,?C_XBP+01H
005D A3                INC     DPTR
005E EF                MOV     A,R7
005F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1299
0060 850083      E     MOV     DPH,?C_XBP
0063 850082      E     MOV     DPL,?C_XBP+01H
0066 A3                INC     DPTR
0067 A3                INC     DPTR
0068 7401              MOV     A,#01H
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1302
006B 850083      E     MOV     DPH,?C_XBP
006E 850082      E     MOV     DPL,?C_XBP+01H
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 EF                MOV     A,R7
0074 6404              XRL     A,#04H
0076 7054              JNZ     ?C0142
                                           ; SOURCE LINE # 1303
                                           ; SOURCE LINE # 1304
0078 900003            MOV     DPTR,#03H
007B 120000      E     LCALL   ?C?XBPOFF
007E 120000      E     LCALL   ?C?PLDXDATA
0081 E9                MOV     A,R1
0082 2401              ADD     A,#01H
0084 F9                MOV     R1,A
0085 EA                MOV     A,R2
0086 3400              ADDC    A,#00H
0088 FA                MOV     R2,A
0089 120000      E     LCALL   ?C?CLDPTR
008C FF                MOV     R7,A
008D EF                MOV     A,R7
008E B4F02A            CJNE    A,#0F0H,?C0143
0091 900003            MOV     DPTR,#03H
0094 120000      E     LCALL   ?C?XBPOFF
0097 120000      E     LCALL   ?C?PLDXDATA
009A E9                MOV     A,R1
009B 2402              ADD     A,#02H
009D F9                MOV     R1,A
009E EA                MOV     A,R2
009F 3400              ADDC    A,#00H
00A1 FA                MOV     R2,A
00A2 120000      E     LCALL   ?C?CLDPTR
00A5 FF                MOV     R7,A
00A6 EF                MOV     A,R7
00A7 B47E11            CJNE    A,#07EH,?C0143
                                           ; SOURCE LINE # 1306
                                           ; SOURCE LINE # 1308
00AA 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
00AD E0                MOVX    A,@DPTR
00AE FF                MOV     R7,A
00AF EF                MOV     A,R7
00B0 4401              ORL     A,#01H
00B2 FF                MOV     R7,A
00B3 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
00B6 EF                MOV     A,R7
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 82  

00B7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1309
00B8 020000      R     LJMP    ?C0145
00BB         ?C0143:
                                           ; SOURCE LINE # 1311
                                           ; SOURCE LINE # 1312
00BB 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
00BE E0                MOVX    A,@DPTR
00BF FF                MOV     R7,A
00C0 EF                MOV     A,R7
00C1 54FE              ANL     A,#0FEH
00C3 FF                MOV     R7,A
00C4 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
00C7 EF                MOV     A,R7
00C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1313
                                           ; SOURCE LINE # 1314
00C9 020000      R     LJMP    ?C0145
00CC         ?C0142:
                                           ; SOURCE LINE # 1315
00CC 850083      E     MOV     DPH,?C_XBP
00CF 850082      E     MOV     DPL,?C_XBP+01H
00D2 E0                MOVX    A,@DPTR
00D3 FF                MOV     R7,A
00D4 EF                MOV     A,R7
00D5 B40511            CJNE    A,#05H,?C0146
                                           ; SOURCE LINE # 1316
                                           ; SOURCE LINE # 1317
00D8 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
00DB E0                MOVX    A,@DPTR
00DC FF                MOV     R7,A
00DD EF                MOV     A,R7
00DE 54FE              ANL     A,#0FEH
00E0 FF                MOV     R7,A
00E1 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
00E4 EF                MOV     A,R7
00E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1318
00E6 020000      R     LJMP    ?C0145
00E9         ?C0146:
                                           ; SOURCE LINE # 1319
00E9 850083      E     MOV     DPH,?C_XBP
00EC 850082      E     MOV     DPL,?C_XBP+01H
00EF E0                MOVX    A,@DPTR
00F0 FF                MOV     R7,A
00F1 EF                MOV     A,R7
00F2 B40610            CJNE    A,#06H,?C0148
                                           ; SOURCE LINE # 1320
                                           ; SOURCE LINE # 1321
00F5 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
00F8 E0                MOVX    A,@DPTR
00F9 FF                MOV     R7,A
00FA EF                MOV     A,R7
00FB 54FE              ANL     A,#0FEH
00FD FF                MOV     R7,A
00FE 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
0101 EF                MOV     A,R7
0102 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1322
0103 806A              SJMP    ?C0145
0105         ?C0148:
                                           ; SOURCE LINE # 1323
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 83  

0105 850083      E     MOV     DPH,?C_XBP
0108 850082      E     MOV     DPL,?C_XBP+01H
010B E0                MOVX    A,@DPTR
010C FF                MOV     R7,A
010D EF                MOV     A,R7
010E 6407              XRL     A,#07H
0110 705D              JNZ     ?C0145
                                           ; SOURCE LINE # 1324
                                           ; SOURCE LINE # 1326
0112 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
0115 E0                MOVX    A,@DPTR
0116 FF                MOV     R7,A
0117 EF                MOV     A,R7
0118 5401              ANL     A,#01H
011A FF                MOV     R7,A
011B 7E00              MOV     R6,#00H
011D EF                MOV     A,R7
011E 4E                ORL     A,R6
011F 604E              JZ      ?C0145
                                           ; SOURCE LINE # 1327
                                           ; SOURCE LINE # 1328
0121 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
0124 E0                MOVX    A,@DPTR
0125 FF                MOV     R7,A
0126 EF                MOV     A,R7
0127 54FE              ANL     A,#0FEH
0129 FF                MOV     R7,A
012A 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
012D EF                MOV     A,R7
012E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1330
012F 900003            MOV     DPTR,#03H
0132 120000      E     LCALL   ?C?XBPOFF
0135 120000      E     LCALL   ?C?PLDXDATA
0138 E9                MOV     A,R1
0139 2401              ADD     A,#01H
013B F9                MOV     R1,A
013C EA                MOV     A,R2
013D 3400              ADDC    A,#00H
013F FA                MOV     R2,A
0140 120000      E     LCALL   ?C?CLDPTR
0143 FF                MOV     R7,A
0144 EF                MOV     A,R7
0145 B40627            CJNE    A,#06H,?C0145
0148 900003            MOV     DPTR,#03H
014B 120000      E     LCALL   ?C?XBPOFF
014E 120000      E     LCALL   ?C?PLDXDATA
0151 E9                MOV     A,R1
0152 2402              ADD     A,#02H
0154 F9                MOV     R1,A
0155 EA                MOV     A,R2
0156 3400              ADDC    A,#00H
0158 FA                MOV     R2,A
0159 120000      E     LCALL   ?C?CLDPTR
015C FF                MOV     R7,A
015D EF                MOV     A,R7
015E B4010E            CJNE    A,#01H,?C0145
                                           ; SOURCE LINE # 1332
                                           ; SOURCE LINE # 1335
0161 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
0164 E0                MOVX    A,@DPTR
0165 FF                MOV     R7,A
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 84  

0166 EF                MOV     A,R7
0167 4402              ORL     A,#02H
0169 FF                MOV     R7,A
016A 900000      R     MOV     DPTR,#USB_MIDI2_InqFlags
016D EF                MOV     A,R7
016E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1336
                                           ; SOURCE LINE # 1337
                                           ; SOURCE LINE # 1338
                                           ; SOURCE LINE # 1340
                                           ; SOURCE LINE # 1341
016F         ?C0145:
                                           ; SOURCE LINE # 1344
016F 850083      E     MOV     DPH,?C_XBP
0172 850082      E     MOV     DPL,?C_XBP+01H
0175 E0                MOVX    A,@DPTR
0176 FF                MOV     R7,A
0177 EF                MOV     A,R7
0178 C3                CLR     C
0179 9408              SUBB    A,#08H
017B 4055              JC      ?C0154
017D 850083      E     MOV     DPH,?C_XBP
0180 850082      E     MOV     DPL,?C_XBP+01H
0183 E0                MOVX    A,@DPTR
0184 FF                MOV     R7,A
0185 EF                MOV     A,R7
0186 D3                SETB    C
0187 940E              SUBB    A,#0EH
0189 5047              JNC     ?C0154
                                           ; SOURCE LINE # 1345
                                           ; SOURCE LINE # 1346
018B 900003            MOV     DPTR,#03H
018E 120000      E     LCALL   ?C?XBPOFF
0191 120000      E     LCALL   ?C?PLDXDATA
0194 E9                MOV     A,R1
0195 2401              ADD     A,#01H
0197 F9                MOV     R1,A
0198 EA                MOV     A,R2
0199 3400              ADDC    A,#00H
019B FA                MOV     R2,A
019C 120000      E     LCALL   ?C?CLDPTR
019F FF                MOV     R7,A
01A0 900000      R     MOV     DPTR,#USB_MIDI2_TxRunStat
01A3 E0                MOVX    A,@DPTR
01A4 FE                MOV     R6,A
01A5 EE                MOV     A,R6
01A6 B5070D            CJNE    A,AR7,?C0155
                                           ; SOURCE LINE # 1347
                                           ; SOURCE LINE # 1348
01A9 850083      E     MOV     DPH,?C_XBP
01AC 850082      E     MOV     DPL,?C_XBP+01H
01AF A3                INC     DPTR
01B0 A3                INC     DPTR
01B1 E0                MOVX    A,@DPTR
01B2 04                INC     A
01B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1349
01B4 8021              SJMP    ?C0160
01B6         ?C0155:
                                           ; SOURCE LINE # 1351
                                           ; SOURCE LINE # 1352
01B6 900003            MOV     DPTR,#03H
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 85  

01B9 120000      E     LCALL   ?C?XBPOFF
01BC 120000      E     LCALL   ?C?PLDXDATA
01BF E9                MOV     A,R1
01C0 2401              ADD     A,#01H
01C2 F9                MOV     R1,A
01C3 EA                MOV     A,R2
01C4 3400              ADDC    A,#00H
01C6 FA                MOV     R2,A
01C7 120000      E     LCALL   ?C?CLDPTR
01CA FF                MOV     R7,A
01CB 900000      R     MOV     DPTR,#USB_MIDI2_TxRunStat
01CE EF                MOV     A,R7
01CF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1353
                                           ; SOURCE LINE # 1354
01D0 8005              SJMP    ?C0160
01D2         ?C0154:
                                           ; SOURCE LINE # 1356
                                           ; SOURCE LINE # 1357
01D2 900000      R     MOV     DPTR,#USB_MIDI2_TxRunStat
01D5 E4                CLR     A
01D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1358
01D7         ?C0160:
                                           ; SOURCE LINE # 1362
                                           ; SOURCE LINE # 1363
01D7 900003            MOV     DPTR,#03H
01DA 120000      E     LCALL   ?C?XBPOFF
01DD 120000      E     LCALL   ?C?PLDXDATA
01E0 850083      E     MOV     DPH,?C_XBP
01E3 850082      E     MOV     DPL,?C_XBP+01H
01E6 A3                INC     DPTR
01E7 A3                INC     DPTR
01E8 E0                MOVX    A,@DPTR
01E9 FF                MOV     R7,A
01EA E9                MOV     A,R1
01EB 2F                ADD     A,R7
01EC F9                MOV     R1,A
01ED E4                CLR     A
01EE 3A                ADDC    A,R2
01EF FA                MOV     R2,A
01F0 120000      E     LCALL   ?C?CLDPTR
01F3 FF                MOV     R7,A
01F4 120000      E     LCALL   _?MIDI2_UART_PutChar
                                           ; SOURCE LINE # 1364
01F7 850083      E     MOV     DPH,?C_XBP
01FA 850082      E     MOV     DPL,?C_XBP+01H
01FD A3                INC     DPTR
01FE A3                INC     DPTR
01FF E0                MOVX    A,@DPTR
0200 04                INC     A
0201 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1365
                                           ; SOURCE LINE # 1366
0202 850083      E     MOV     DPH,?C_XBP
0205 850082      E     MOV     DPL,?C_XBP+01H
0208 A3                INC     DPTR
0209 E0                MOVX    A,@DPTR
020A FF                MOV     R7,A
020B 850083      E     MOV     DPH,?C_XBP
020E 850082      E     MOV     DPL,?C_XBP+01H
0211 A3                INC     DPTR
C51 COMPILER V9.51   USB_MIDI                                                              07/22/2017 09:26:22 PAGE 86  

0212 A3                INC     DPTR
0213 E0                MOVX    A,@DPTR
0214 FE                MOV     R6,A
0215 EE                MOV     A,R6
0216 D3                SETB    C
0217 9F                SUBB    A,R7
0218 40BD              JC      ?C0160
                                           ; SOURCE LINE # 1367
021A         ?C0141:
                                           ; SOURCE LINE # 1375
021A 120000      E     LCALL   USB_MIDI2_ProcessUsbOut_ExitCallback
                                           ; SOURCE LINE # 1377
021D 900006            MOV     DPTR,#06H
0220 120000      E     LCALL   ?C?ADDXBP
0223 22                RET     
             ; FUNCTION _?USB_MIDI2_ProcessUsbOut (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5703    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =     87       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
